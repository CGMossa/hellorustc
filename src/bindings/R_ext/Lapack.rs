/* automatically generated by rust-bindgen 0.70.1 */

#[derive(PartialEq, Copy, Clone, Hash, Debug, Default)]
#[repr(C)]
pub struct __BindgenComplex<T> {
    pub re: T,
    pub im: T,
}
pub const __has_safe_buffers: u32 = 1;
pub const __DARWIN_ONLY_64_BIT_INO_T: u32 = 1;
pub const __DARWIN_ONLY_UNIX_CONFORMANCE: u32 = 1;
pub const __DARWIN_ONLY_VERS_1050: u32 = 1;
pub const __DARWIN_UNIX03: u32 = 1;
pub const __DARWIN_64_BIT_INO_T: u32 = 1;
pub const __DARWIN_VERS_1050: u32 = 1;
pub const __DARWIN_NON_CANCELABLE: u32 = 0;
pub const __DARWIN_SUF_EXTSN: &[u8; 14] = b"$DARWIN_EXTSN\0";
pub const __DARWIN_C_ANSI: u32 = 4096;
pub const __DARWIN_C_FULL: u32 = 900000;
pub const __DARWIN_C_LEVEL: u32 = 900000;
pub const __STDC_WANT_LIB_EXT1__: u32 = 1;
pub const __DARWIN_NO_LONG_LONG: u32 = 0;
pub const _DARWIN_FEATURE_64_BIT_INODE: u32 = 1;
pub const _DARWIN_FEATURE_ONLY_64_BIT_INODE: u32 = 1;
pub const _DARWIN_FEATURE_ONLY_VERS_1050: u32 = 1;
pub const _DARWIN_FEATURE_ONLY_UNIX_CONFORMANCE: u32 = 1;
pub const _DARWIN_FEATURE_UNIX_CONFORMANCE: u32 = 3;
pub const __has_ptrcheck: u32 = 0;
pub const USE_CLANG_TYPES: u32 = 0;
pub const __PTHREAD_SIZE__: u32 = 8176;
pub const __PTHREAD_ATTR_SIZE__: u32 = 56;
pub const __PTHREAD_MUTEXATTR_SIZE__: u32 = 8;
pub const __PTHREAD_MUTEX_SIZE__: u32 = 56;
pub const __PTHREAD_CONDATTR_SIZE__: u32 = 8;
pub const __PTHREAD_COND_SIZE__: u32 = 40;
pub const __PTHREAD_ONCE_SIZE__: u32 = 8;
pub const __PTHREAD_RWLOCK_SIZE__: u32 = 192;
pub const __PTHREAD_RWLOCKATTR_SIZE__: u32 = 16;
pub const __DARWIN_WCHAR_MIN: i32 = -2147483648;
pub const _FORTIFY_SOURCE: u32 = 2;
pub const __API_TO_BE_DEPRECATED: u32 = 100000;
pub const __API_TO_BE_DEPRECATED_MACOS: u32 = 100000;
pub const __API_TO_BE_DEPRECATED_IOS: u32 = 100000;
pub const __API_TO_BE_DEPRECATED_MACCATALYST: u32 = 100000;
pub const __API_TO_BE_DEPRECATED_WATCHOS: u32 = 100000;
pub const __API_TO_BE_DEPRECATED_TVOS: u32 = 100000;
pub const __API_TO_BE_DEPRECATED_DRIVERKIT: u32 = 100000;
pub const __API_TO_BE_DEPRECATED_VISIONOS: u32 = 100000;
pub const __MAC_10_0: u32 = 1000;
pub const __MAC_10_1: u32 = 1010;
pub const __MAC_10_2: u32 = 1020;
pub const __MAC_10_3: u32 = 1030;
pub const __MAC_10_4: u32 = 1040;
pub const __MAC_10_5: u32 = 1050;
pub const __MAC_10_6: u32 = 1060;
pub const __MAC_10_7: u32 = 1070;
pub const __MAC_10_8: u32 = 1080;
pub const __MAC_10_9: u32 = 1090;
pub const __MAC_10_10: u32 = 101000;
pub const __MAC_10_10_2: u32 = 101002;
pub const __MAC_10_10_3: u32 = 101003;
pub const __MAC_10_11: u32 = 101100;
pub const __MAC_10_11_2: u32 = 101102;
pub const __MAC_10_11_3: u32 = 101103;
pub const __MAC_10_11_4: u32 = 101104;
pub const __MAC_10_12: u32 = 101200;
pub const __MAC_10_12_1: u32 = 101201;
pub const __MAC_10_12_2: u32 = 101202;
pub const __MAC_10_12_4: u32 = 101204;
pub const __MAC_10_13: u32 = 101300;
pub const __MAC_10_13_1: u32 = 101301;
pub const __MAC_10_13_2: u32 = 101302;
pub const __MAC_10_13_4: u32 = 101304;
pub const __MAC_10_14: u32 = 101400;
pub const __MAC_10_14_1: u32 = 101401;
pub const __MAC_10_14_4: u32 = 101404;
pub const __MAC_10_14_5: u32 = 101405;
pub const __MAC_10_14_6: u32 = 101406;
pub const __MAC_10_15: u32 = 101500;
pub const __MAC_10_15_1: u32 = 101501;
pub const __MAC_10_15_4: u32 = 101504;
pub const __MAC_10_16: u32 = 101600;
pub const __MAC_11_0: u32 = 110000;
pub const __MAC_11_1: u32 = 110100;
pub const __MAC_11_3: u32 = 110300;
pub const __MAC_11_4: u32 = 110400;
pub const __MAC_11_5: u32 = 110500;
pub const __MAC_11_6: u32 = 110600;
pub const __MAC_12_0: u32 = 120000;
pub const __MAC_12_1: u32 = 120100;
pub const __MAC_12_2: u32 = 120200;
pub const __MAC_12_3: u32 = 120300;
pub const __MAC_12_4: u32 = 120400;
pub const __MAC_12_5: u32 = 120500;
pub const __MAC_12_6: u32 = 120600;
pub const __MAC_12_7: u32 = 120700;
pub const __MAC_13_0: u32 = 130000;
pub const __MAC_13_1: u32 = 130100;
pub const __MAC_13_2: u32 = 130200;
pub const __MAC_13_3: u32 = 130300;
pub const __MAC_13_4: u32 = 130400;
pub const __MAC_13_5: u32 = 130500;
pub const __MAC_13_6: u32 = 130600;
pub const __MAC_14_0: u32 = 140000;
pub const __MAC_14_1: u32 = 140100;
pub const __MAC_14_2: u32 = 140200;
pub const __MAC_14_3: u32 = 140300;
pub const __MAC_14_4: u32 = 140400;
pub const __MAC_14_5: u32 = 140500;
pub const __MAC_15_0: u32 = 150000;
pub const __MAC_15_1: u32 = 150100;
pub const __IPHONE_2_0: u32 = 20000;
pub const __IPHONE_2_1: u32 = 20100;
pub const __IPHONE_2_2: u32 = 20200;
pub const __IPHONE_3_0: u32 = 30000;
pub const __IPHONE_3_1: u32 = 30100;
pub const __IPHONE_3_2: u32 = 30200;
pub const __IPHONE_4_0: u32 = 40000;
pub const __IPHONE_4_1: u32 = 40100;
pub const __IPHONE_4_2: u32 = 40200;
pub const __IPHONE_4_3: u32 = 40300;
pub const __IPHONE_5_0: u32 = 50000;
pub const __IPHONE_5_1: u32 = 50100;
pub const __IPHONE_6_0: u32 = 60000;
pub const __IPHONE_6_1: u32 = 60100;
pub const __IPHONE_7_0: u32 = 70000;
pub const __IPHONE_7_1: u32 = 70100;
pub const __IPHONE_8_0: u32 = 80000;
pub const __IPHONE_8_1: u32 = 80100;
pub const __IPHONE_8_2: u32 = 80200;
pub const __IPHONE_8_3: u32 = 80300;
pub const __IPHONE_8_4: u32 = 80400;
pub const __IPHONE_9_0: u32 = 90000;
pub const __IPHONE_9_1: u32 = 90100;
pub const __IPHONE_9_2: u32 = 90200;
pub const __IPHONE_9_3: u32 = 90300;
pub const __IPHONE_10_0: u32 = 100000;
pub const __IPHONE_10_1: u32 = 100100;
pub const __IPHONE_10_2: u32 = 100200;
pub const __IPHONE_10_3: u32 = 100300;
pub const __IPHONE_11_0: u32 = 110000;
pub const __IPHONE_11_1: u32 = 110100;
pub const __IPHONE_11_2: u32 = 110200;
pub const __IPHONE_11_3: u32 = 110300;
pub const __IPHONE_11_4: u32 = 110400;
pub const __IPHONE_12_0: u32 = 120000;
pub const __IPHONE_12_1: u32 = 120100;
pub const __IPHONE_12_2: u32 = 120200;
pub const __IPHONE_12_3: u32 = 120300;
pub const __IPHONE_12_4: u32 = 120400;
pub const __IPHONE_13_0: u32 = 130000;
pub const __IPHONE_13_1: u32 = 130100;
pub const __IPHONE_13_2: u32 = 130200;
pub const __IPHONE_13_3: u32 = 130300;
pub const __IPHONE_13_4: u32 = 130400;
pub const __IPHONE_13_5: u32 = 130500;
pub const __IPHONE_13_6: u32 = 130600;
pub const __IPHONE_13_7: u32 = 130700;
pub const __IPHONE_14_0: u32 = 140000;
pub const __IPHONE_14_1: u32 = 140100;
pub const __IPHONE_14_2: u32 = 140200;
pub const __IPHONE_14_3: u32 = 140300;
pub const __IPHONE_14_5: u32 = 140500;
pub const __IPHONE_14_4: u32 = 140400;
pub const __IPHONE_14_6: u32 = 140600;
pub const __IPHONE_14_7: u32 = 140700;
pub const __IPHONE_14_8: u32 = 140800;
pub const __IPHONE_15_0: u32 = 150000;
pub const __IPHONE_15_1: u32 = 150100;
pub const __IPHONE_15_2: u32 = 150200;
pub const __IPHONE_15_3: u32 = 150300;
pub const __IPHONE_15_4: u32 = 150400;
pub const __IPHONE_15_5: u32 = 150500;
pub const __IPHONE_15_6: u32 = 150600;
pub const __IPHONE_15_7: u32 = 150700;
pub const __IPHONE_15_8: u32 = 150800;
pub const __IPHONE_16_0: u32 = 160000;
pub const __IPHONE_16_1: u32 = 160100;
pub const __IPHONE_16_2: u32 = 160200;
pub const __IPHONE_16_3: u32 = 160300;
pub const __IPHONE_16_4: u32 = 160400;
pub const __IPHONE_16_5: u32 = 160500;
pub const __IPHONE_16_6: u32 = 160600;
pub const __IPHONE_16_7: u32 = 160700;
pub const __IPHONE_17_0: u32 = 170000;
pub const __IPHONE_17_1: u32 = 170100;
pub const __IPHONE_17_2: u32 = 170200;
pub const __IPHONE_17_3: u32 = 170300;
pub const __IPHONE_17_4: u32 = 170400;
pub const __IPHONE_17_5: u32 = 170500;
pub const __IPHONE_18_0: u32 = 180000;
pub const __IPHONE_18_1: u32 = 180100;
pub const __WATCHOS_1_0: u32 = 10000;
pub const __WATCHOS_2_0: u32 = 20000;
pub const __WATCHOS_2_1: u32 = 20100;
pub const __WATCHOS_2_2: u32 = 20200;
pub const __WATCHOS_3_0: u32 = 30000;
pub const __WATCHOS_3_1: u32 = 30100;
pub const __WATCHOS_3_1_1: u32 = 30101;
pub const __WATCHOS_3_2: u32 = 30200;
pub const __WATCHOS_4_0: u32 = 40000;
pub const __WATCHOS_4_1: u32 = 40100;
pub const __WATCHOS_4_2: u32 = 40200;
pub const __WATCHOS_4_3: u32 = 40300;
pub const __WATCHOS_5_0: u32 = 50000;
pub const __WATCHOS_5_1: u32 = 50100;
pub const __WATCHOS_5_2: u32 = 50200;
pub const __WATCHOS_5_3: u32 = 50300;
pub const __WATCHOS_6_0: u32 = 60000;
pub const __WATCHOS_6_1: u32 = 60100;
pub const __WATCHOS_6_2: u32 = 60200;
pub const __WATCHOS_7_0: u32 = 70000;
pub const __WATCHOS_7_1: u32 = 70100;
pub const __WATCHOS_7_2: u32 = 70200;
pub const __WATCHOS_7_3: u32 = 70300;
pub const __WATCHOS_7_4: u32 = 70400;
pub const __WATCHOS_7_5: u32 = 70500;
pub const __WATCHOS_7_6: u32 = 70600;
pub const __WATCHOS_8_0: u32 = 80000;
pub const __WATCHOS_8_1: u32 = 80100;
pub const __WATCHOS_8_3: u32 = 80300;
pub const __WATCHOS_8_4: u32 = 80400;
pub const __WATCHOS_8_5: u32 = 80500;
pub const __WATCHOS_8_6: u32 = 80600;
pub const __WATCHOS_8_7: u32 = 80700;
pub const __WATCHOS_8_8: u32 = 80800;
pub const __WATCHOS_9_0: u32 = 90000;
pub const __WATCHOS_9_1: u32 = 90100;
pub const __WATCHOS_9_2: u32 = 90200;
pub const __WATCHOS_9_3: u32 = 90300;
pub const __WATCHOS_9_4: u32 = 90400;
pub const __WATCHOS_9_5: u32 = 90500;
pub const __WATCHOS_9_6: u32 = 90600;
pub const __WATCHOS_10_0: u32 = 100000;
pub const __WATCHOS_10_1: u32 = 100100;
pub const __WATCHOS_10_2: u32 = 100200;
pub const __WATCHOS_10_3: u32 = 100300;
pub const __WATCHOS_10_4: u32 = 100400;
pub const __WATCHOS_10_5: u32 = 100500;
pub const __WATCHOS_11_0: u32 = 110000;
pub const __WATCHOS_11_1: u32 = 110100;
pub const __TVOS_9_0: u32 = 90000;
pub const __TVOS_9_1: u32 = 90100;
pub const __TVOS_9_2: u32 = 90200;
pub const __TVOS_10_0: u32 = 100000;
pub const __TVOS_10_0_1: u32 = 100001;
pub const __TVOS_10_1: u32 = 100100;
pub const __TVOS_10_2: u32 = 100200;
pub const __TVOS_11_0: u32 = 110000;
pub const __TVOS_11_1: u32 = 110100;
pub const __TVOS_11_2: u32 = 110200;
pub const __TVOS_11_3: u32 = 110300;
pub const __TVOS_11_4: u32 = 110400;
pub const __TVOS_12_0: u32 = 120000;
pub const __TVOS_12_1: u32 = 120100;
pub const __TVOS_12_2: u32 = 120200;
pub const __TVOS_12_3: u32 = 120300;
pub const __TVOS_12_4: u32 = 120400;
pub const __TVOS_13_0: u32 = 130000;
pub const __TVOS_13_2: u32 = 130200;
pub const __TVOS_13_3: u32 = 130300;
pub const __TVOS_13_4: u32 = 130400;
pub const __TVOS_14_0: u32 = 140000;
pub const __TVOS_14_1: u32 = 140100;
pub const __TVOS_14_2: u32 = 140200;
pub const __TVOS_14_3: u32 = 140300;
pub const __TVOS_14_5: u32 = 140500;
pub const __TVOS_14_6: u32 = 140600;
pub const __TVOS_14_7: u32 = 140700;
pub const __TVOS_15_0: u32 = 150000;
pub const __TVOS_15_1: u32 = 150100;
pub const __TVOS_15_2: u32 = 150200;
pub const __TVOS_15_3: u32 = 150300;
pub const __TVOS_15_4: u32 = 150400;
pub const __TVOS_15_5: u32 = 150500;
pub const __TVOS_15_6: u32 = 150600;
pub const __TVOS_16_0: u32 = 160000;
pub const __TVOS_16_1: u32 = 160100;
pub const __TVOS_16_2: u32 = 160200;
pub const __TVOS_16_3: u32 = 160300;
pub const __TVOS_16_4: u32 = 160400;
pub const __TVOS_16_5: u32 = 160500;
pub const __TVOS_16_6: u32 = 160600;
pub const __TVOS_17_0: u32 = 170000;
pub const __TVOS_17_1: u32 = 170100;
pub const __TVOS_17_2: u32 = 170200;
pub const __TVOS_17_3: u32 = 170300;
pub const __TVOS_17_4: u32 = 170400;
pub const __TVOS_17_5: u32 = 170500;
pub const __TVOS_18_0: u32 = 180000;
pub const __TVOS_18_1: u32 = 180100;
pub const __BRIDGEOS_2_0: u32 = 20000;
pub const __BRIDGEOS_3_0: u32 = 30000;
pub const __BRIDGEOS_3_1: u32 = 30100;
pub const __BRIDGEOS_3_4: u32 = 30400;
pub const __BRIDGEOS_4_0: u32 = 40000;
pub const __BRIDGEOS_4_1: u32 = 40100;
pub const __BRIDGEOS_5_0: u32 = 50000;
pub const __BRIDGEOS_5_1: u32 = 50100;
pub const __BRIDGEOS_5_3: u32 = 50300;
pub const __BRIDGEOS_6_0: u32 = 60000;
pub const __BRIDGEOS_6_2: u32 = 60200;
pub const __BRIDGEOS_6_4: u32 = 60400;
pub const __BRIDGEOS_6_5: u32 = 60500;
pub const __BRIDGEOS_6_6: u32 = 60600;
pub const __BRIDGEOS_7_0: u32 = 70000;
pub const __BRIDGEOS_7_1: u32 = 70100;
pub const __BRIDGEOS_7_2: u32 = 70200;
pub const __BRIDGEOS_7_3: u32 = 70300;
pub const __BRIDGEOS_7_4: u32 = 70400;
pub const __BRIDGEOS_7_6: u32 = 70600;
pub const __BRIDGEOS_8_0: u32 = 80000;
pub const __BRIDGEOS_8_1: u32 = 80100;
pub const __BRIDGEOS_8_2: u32 = 80200;
pub const __BRIDGEOS_8_3: u32 = 80300;
pub const __BRIDGEOS_8_4: u32 = 80400;
pub const __BRIDGEOS_8_5: u32 = 80500;
pub const __BRIDGEOS_9_0: u32 = 90000;
pub const __BRIDGEOS_9_1: u32 = 90100;
pub const __DRIVERKIT_19_0: u32 = 190000;
pub const __DRIVERKIT_20_0: u32 = 200000;
pub const __DRIVERKIT_21_0: u32 = 210000;
pub const __DRIVERKIT_22_0: u32 = 220000;
pub const __DRIVERKIT_22_4: u32 = 220400;
pub const __DRIVERKIT_22_5: u32 = 220500;
pub const __DRIVERKIT_22_6: u32 = 220600;
pub const __DRIVERKIT_23_0: u32 = 230000;
pub const __DRIVERKIT_23_1: u32 = 230100;
pub const __DRIVERKIT_23_2: u32 = 230200;
pub const __DRIVERKIT_23_3: u32 = 230300;
pub const __DRIVERKIT_23_4: u32 = 230400;
pub const __DRIVERKIT_23_5: u32 = 230500;
pub const __DRIVERKIT_24_0: u32 = 240000;
pub const __DRIVERKIT_24_1: u32 = 240100;
pub const __VISIONOS_1_0: u32 = 10000;
pub const __VISIONOS_1_1: u32 = 10100;
pub const __VISIONOS_1_2: u32 = 10200;
pub const __VISIONOS_2_0: u32 = 20000;
pub const __VISIONOS_2_1: u32 = 20100;
pub const MAC_OS_X_VERSION_10_0: u32 = 1000;
pub const MAC_OS_X_VERSION_10_1: u32 = 1010;
pub const MAC_OS_X_VERSION_10_2: u32 = 1020;
pub const MAC_OS_X_VERSION_10_3: u32 = 1030;
pub const MAC_OS_X_VERSION_10_4: u32 = 1040;
pub const MAC_OS_X_VERSION_10_5: u32 = 1050;
pub const MAC_OS_X_VERSION_10_6: u32 = 1060;
pub const MAC_OS_X_VERSION_10_7: u32 = 1070;
pub const MAC_OS_X_VERSION_10_8: u32 = 1080;
pub const MAC_OS_X_VERSION_10_9: u32 = 1090;
pub const MAC_OS_X_VERSION_10_10: u32 = 101000;
pub const MAC_OS_X_VERSION_10_10_2: u32 = 101002;
pub const MAC_OS_X_VERSION_10_10_3: u32 = 101003;
pub const MAC_OS_X_VERSION_10_11: u32 = 101100;
pub const MAC_OS_X_VERSION_10_11_2: u32 = 101102;
pub const MAC_OS_X_VERSION_10_11_3: u32 = 101103;
pub const MAC_OS_X_VERSION_10_11_4: u32 = 101104;
pub const MAC_OS_X_VERSION_10_12: u32 = 101200;
pub const MAC_OS_X_VERSION_10_12_1: u32 = 101201;
pub const MAC_OS_X_VERSION_10_12_2: u32 = 101202;
pub const MAC_OS_X_VERSION_10_12_4: u32 = 101204;
pub const MAC_OS_X_VERSION_10_13: u32 = 101300;
pub const MAC_OS_X_VERSION_10_13_1: u32 = 101301;
pub const MAC_OS_X_VERSION_10_13_2: u32 = 101302;
pub const MAC_OS_X_VERSION_10_13_4: u32 = 101304;
pub const MAC_OS_X_VERSION_10_14: u32 = 101400;
pub const MAC_OS_X_VERSION_10_14_1: u32 = 101401;
pub const MAC_OS_X_VERSION_10_14_4: u32 = 101404;
pub const MAC_OS_X_VERSION_10_14_5: u32 = 101405;
pub const MAC_OS_X_VERSION_10_14_6: u32 = 101406;
pub const MAC_OS_X_VERSION_10_15: u32 = 101500;
pub const MAC_OS_X_VERSION_10_15_1: u32 = 101501;
pub const MAC_OS_X_VERSION_10_15_4: u32 = 101504;
pub const MAC_OS_X_VERSION_10_16: u32 = 101600;
pub const MAC_OS_VERSION_11_0: u32 = 110000;
pub const MAC_OS_VERSION_11_1: u32 = 110100;
pub const MAC_OS_VERSION_11_3: u32 = 110300;
pub const MAC_OS_VERSION_11_4: u32 = 110400;
pub const MAC_OS_VERSION_11_5: u32 = 110500;
pub const MAC_OS_VERSION_11_6: u32 = 110600;
pub const MAC_OS_VERSION_12_0: u32 = 120000;
pub const MAC_OS_VERSION_12_1: u32 = 120100;
pub const MAC_OS_VERSION_12_2: u32 = 120200;
pub const MAC_OS_VERSION_12_3: u32 = 120300;
pub const MAC_OS_VERSION_12_4: u32 = 120400;
pub const MAC_OS_VERSION_12_5: u32 = 120500;
pub const MAC_OS_VERSION_12_6: u32 = 120600;
pub const MAC_OS_VERSION_12_7: u32 = 120700;
pub const MAC_OS_VERSION_13_0: u32 = 130000;
pub const MAC_OS_VERSION_13_1: u32 = 130100;
pub const MAC_OS_VERSION_13_2: u32 = 130200;
pub const MAC_OS_VERSION_13_3: u32 = 130300;
pub const MAC_OS_VERSION_13_4: u32 = 130400;
pub const MAC_OS_VERSION_13_5: u32 = 130500;
pub const MAC_OS_VERSION_13_6: u32 = 130600;
pub const MAC_OS_VERSION_14_0: u32 = 140000;
pub const MAC_OS_VERSION_14_1: u32 = 140100;
pub const MAC_OS_VERSION_14_2: u32 = 140200;
pub const MAC_OS_VERSION_14_3: u32 = 140300;
pub const MAC_OS_VERSION_14_4: u32 = 140400;
pub const MAC_OS_VERSION_14_5: u32 = 140500;
pub const MAC_OS_VERSION_15_0: u32 = 150000;
pub const MAC_OS_VERSION_15_1: u32 = 150100;
pub const __MAC_OS_X_VERSION_MAX_ALLOWED: u32 = 150100;
pub const __ENABLE_LEGACY_MAC_AVAILABILITY: u32 = 1;
pub const USE_CLANG_STDDEF: u32 = 0;
pub const _USE_FORTIFY_LEVEL: u32 = 2;
pub const __HAS_FIXED_CHK_PROTOTYPES: u32 = 1;
pub const HAVE_F77_UNDERSCORE: u32 = 1;
pub const IEEE_754: u32 = 1;
pub const SUPPORT_UTF8: u32 = 1;
pub const SUPPORT_MBCS: u32 = 1;
pub const ENABLE_NLS: u32 = 1;
pub const HAVE_AQUA: u32 = 1;
pub const PR18534fixed: u32 = 1;
pub const SIZEOF_SIZE_T: u32 = 8;
pub const HAVE_ALLOCA_H: u32 = 1;
pub const HAVE_UINTPTR_T: u32 = 1;
pub type __int8_t = ::std::os::raw::c_schar;
pub type __uint8_t = ::std::os::raw::c_uchar;
pub type __int16_t = ::std::os::raw::c_short;
pub type __uint16_t = ::std::os::raw::c_ushort;
pub type __int32_t = ::std::os::raw::c_int;
pub type __uint32_t = ::std::os::raw::c_uint;
pub type __int64_t = ::std::os::raw::c_longlong;
pub type __uint64_t = ::std::os::raw::c_ulonglong;
pub type __darwin_intptr_t = ::std::os::raw::c_long;
pub type __darwin_natural_t = ::std::os::raw::c_uint;
pub type __darwin_ct_rune_t = ::std::os::raw::c_int;
#[repr(C)]
#[derive(Copy, Clone)]
pub union __mbstate_t {
    pub __mbstate8: [::std::os::raw::c_char; 128usize],
    pub _mbstateL: ::std::os::raw::c_longlong,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of __mbstate_t"][::std::mem::size_of::<__mbstate_t>() - 128usize];
    ["Alignment of __mbstate_t"][::std::mem::align_of::<__mbstate_t>() - 8usize];
    ["Offset of field: __mbstate_t::__mbstate8"]
        [::std::mem::offset_of!(__mbstate_t, __mbstate8) - 0usize];
    ["Offset of field: __mbstate_t::_mbstateL"]
        [::std::mem::offset_of!(__mbstate_t, _mbstateL) - 0usize];
};
pub type __darwin_mbstate_t = __mbstate_t;
pub type __darwin_ptrdiff_t = ::std::os::raw::c_long;
pub type __darwin_size_t = ::std::os::raw::c_ulong;
pub type __darwin_va_list = __builtin_va_list;
pub type __darwin_wchar_t = ::std::os::raw::c_int;
pub type __darwin_rune_t = __darwin_wchar_t;
pub type __darwin_wint_t = ::std::os::raw::c_int;
pub type __darwin_clock_t = ::std::os::raw::c_ulong;
pub type __darwin_socklen_t = __uint32_t;
pub type __darwin_ssize_t = ::std::os::raw::c_long;
pub type __darwin_time_t = ::std::os::raw::c_long;
pub type __darwin_blkcnt_t = __int64_t;
pub type __darwin_blksize_t = __int32_t;
pub type __darwin_dev_t = __int32_t;
pub type __darwin_fsblkcnt_t = ::std::os::raw::c_uint;
pub type __darwin_fsfilcnt_t = ::std::os::raw::c_uint;
pub type __darwin_gid_t = __uint32_t;
pub type __darwin_id_t = __uint32_t;
pub type __darwin_ino64_t = __uint64_t;
pub type __darwin_ino_t = __darwin_ino64_t;
pub type __darwin_mach_port_name_t = __darwin_natural_t;
pub type __darwin_mach_port_t = __darwin_mach_port_name_t;
pub type __darwin_mode_t = __uint16_t;
pub type __darwin_off_t = __int64_t;
pub type __darwin_pid_t = __int32_t;
pub type __darwin_sigset_t = __uint32_t;
pub type __darwin_suseconds_t = __int32_t;
pub type __darwin_uid_t = __uint32_t;
pub type __darwin_useconds_t = __uint32_t;
pub type __darwin_uuid_t = [::std::os::raw::c_uchar; 16usize];
pub type __darwin_uuid_string_t = [::std::os::raw::c_char; 37usize];
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct __darwin_pthread_handler_rec {
    pub __routine: ::std::option::Option<unsafe extern "C" fn(arg1: *mut ::std::os::raw::c_void)>,
    pub __arg: *mut ::std::os::raw::c_void,
    pub __next: *mut __darwin_pthread_handler_rec,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of __darwin_pthread_handler_rec"]
        [::std::mem::size_of::<__darwin_pthread_handler_rec>() - 24usize];
    ["Alignment of __darwin_pthread_handler_rec"]
        [::std::mem::align_of::<__darwin_pthread_handler_rec>() - 8usize];
    ["Offset of field: __darwin_pthread_handler_rec::__routine"]
        [::std::mem::offset_of!(__darwin_pthread_handler_rec, __routine) - 0usize];
    ["Offset of field: __darwin_pthread_handler_rec::__arg"]
        [::std::mem::offset_of!(__darwin_pthread_handler_rec, __arg) - 8usize];
    ["Offset of field: __darwin_pthread_handler_rec::__next"]
        [::std::mem::offset_of!(__darwin_pthread_handler_rec, __next) - 16usize];
};
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct _opaque_pthread_attr_t {
    pub __sig: ::std::os::raw::c_long,
    pub __opaque: [::std::os::raw::c_char; 56usize],
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of _opaque_pthread_attr_t"][::std::mem::size_of::<_opaque_pthread_attr_t>() - 64usize];
    ["Alignment of _opaque_pthread_attr_t"]
        [::std::mem::align_of::<_opaque_pthread_attr_t>() - 8usize];
    ["Offset of field: _opaque_pthread_attr_t::__sig"]
        [::std::mem::offset_of!(_opaque_pthread_attr_t, __sig) - 0usize];
    ["Offset of field: _opaque_pthread_attr_t::__opaque"]
        [::std::mem::offset_of!(_opaque_pthread_attr_t, __opaque) - 8usize];
};
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct _opaque_pthread_cond_t {
    pub __sig: ::std::os::raw::c_long,
    pub __opaque: [::std::os::raw::c_char; 40usize],
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of _opaque_pthread_cond_t"][::std::mem::size_of::<_opaque_pthread_cond_t>() - 48usize];
    ["Alignment of _opaque_pthread_cond_t"]
        [::std::mem::align_of::<_opaque_pthread_cond_t>() - 8usize];
    ["Offset of field: _opaque_pthread_cond_t::__sig"]
        [::std::mem::offset_of!(_opaque_pthread_cond_t, __sig) - 0usize];
    ["Offset of field: _opaque_pthread_cond_t::__opaque"]
        [::std::mem::offset_of!(_opaque_pthread_cond_t, __opaque) - 8usize];
};
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct _opaque_pthread_condattr_t {
    pub __sig: ::std::os::raw::c_long,
    pub __opaque: [::std::os::raw::c_char; 8usize],
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of _opaque_pthread_condattr_t"]
        [::std::mem::size_of::<_opaque_pthread_condattr_t>() - 16usize];
    ["Alignment of _opaque_pthread_condattr_t"]
        [::std::mem::align_of::<_opaque_pthread_condattr_t>() - 8usize];
    ["Offset of field: _opaque_pthread_condattr_t::__sig"]
        [::std::mem::offset_of!(_opaque_pthread_condattr_t, __sig) - 0usize];
    ["Offset of field: _opaque_pthread_condattr_t::__opaque"]
        [::std::mem::offset_of!(_opaque_pthread_condattr_t, __opaque) - 8usize];
};
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct _opaque_pthread_mutex_t {
    pub __sig: ::std::os::raw::c_long,
    pub __opaque: [::std::os::raw::c_char; 56usize],
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of _opaque_pthread_mutex_t"][::std::mem::size_of::<_opaque_pthread_mutex_t>() - 64usize];
    ["Alignment of _opaque_pthread_mutex_t"]
        [::std::mem::align_of::<_opaque_pthread_mutex_t>() - 8usize];
    ["Offset of field: _opaque_pthread_mutex_t::__sig"]
        [::std::mem::offset_of!(_opaque_pthread_mutex_t, __sig) - 0usize];
    ["Offset of field: _opaque_pthread_mutex_t::__opaque"]
        [::std::mem::offset_of!(_opaque_pthread_mutex_t, __opaque) - 8usize];
};
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct _opaque_pthread_mutexattr_t {
    pub __sig: ::std::os::raw::c_long,
    pub __opaque: [::std::os::raw::c_char; 8usize],
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of _opaque_pthread_mutexattr_t"]
        [::std::mem::size_of::<_opaque_pthread_mutexattr_t>() - 16usize];
    ["Alignment of _opaque_pthread_mutexattr_t"]
        [::std::mem::align_of::<_opaque_pthread_mutexattr_t>() - 8usize];
    ["Offset of field: _opaque_pthread_mutexattr_t::__sig"]
        [::std::mem::offset_of!(_opaque_pthread_mutexattr_t, __sig) - 0usize];
    ["Offset of field: _opaque_pthread_mutexattr_t::__opaque"]
        [::std::mem::offset_of!(_opaque_pthread_mutexattr_t, __opaque) - 8usize];
};
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct _opaque_pthread_once_t {
    pub __sig: ::std::os::raw::c_long,
    pub __opaque: [::std::os::raw::c_char; 8usize],
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of _opaque_pthread_once_t"][::std::mem::size_of::<_opaque_pthread_once_t>() - 16usize];
    ["Alignment of _opaque_pthread_once_t"]
        [::std::mem::align_of::<_opaque_pthread_once_t>() - 8usize];
    ["Offset of field: _opaque_pthread_once_t::__sig"]
        [::std::mem::offset_of!(_opaque_pthread_once_t, __sig) - 0usize];
    ["Offset of field: _opaque_pthread_once_t::__opaque"]
        [::std::mem::offset_of!(_opaque_pthread_once_t, __opaque) - 8usize];
};
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct _opaque_pthread_rwlock_t {
    pub __sig: ::std::os::raw::c_long,
    pub __opaque: [::std::os::raw::c_char; 192usize],
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of _opaque_pthread_rwlock_t"]
        [::std::mem::size_of::<_opaque_pthread_rwlock_t>() - 200usize];
    ["Alignment of _opaque_pthread_rwlock_t"]
        [::std::mem::align_of::<_opaque_pthread_rwlock_t>() - 8usize];
    ["Offset of field: _opaque_pthread_rwlock_t::__sig"]
        [::std::mem::offset_of!(_opaque_pthread_rwlock_t, __sig) - 0usize];
    ["Offset of field: _opaque_pthread_rwlock_t::__opaque"]
        [::std::mem::offset_of!(_opaque_pthread_rwlock_t, __opaque) - 8usize];
};
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct _opaque_pthread_rwlockattr_t {
    pub __sig: ::std::os::raw::c_long,
    pub __opaque: [::std::os::raw::c_char; 16usize],
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of _opaque_pthread_rwlockattr_t"]
        [::std::mem::size_of::<_opaque_pthread_rwlockattr_t>() - 24usize];
    ["Alignment of _opaque_pthread_rwlockattr_t"]
        [::std::mem::align_of::<_opaque_pthread_rwlockattr_t>() - 8usize];
    ["Offset of field: _opaque_pthread_rwlockattr_t::__sig"]
        [::std::mem::offset_of!(_opaque_pthread_rwlockattr_t, __sig) - 0usize];
    ["Offset of field: _opaque_pthread_rwlockattr_t::__opaque"]
        [::std::mem::offset_of!(_opaque_pthread_rwlockattr_t, __opaque) - 8usize];
};
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct _opaque_pthread_t {
    pub __sig: ::std::os::raw::c_long,
    pub __cleanup_stack: *mut __darwin_pthread_handler_rec,
    pub __opaque: [::std::os::raw::c_char; 8176usize],
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of _opaque_pthread_t"][::std::mem::size_of::<_opaque_pthread_t>() - 8192usize];
    ["Alignment of _opaque_pthread_t"][::std::mem::align_of::<_opaque_pthread_t>() - 8usize];
    ["Offset of field: _opaque_pthread_t::__sig"]
        [::std::mem::offset_of!(_opaque_pthread_t, __sig) - 0usize];
    ["Offset of field: _opaque_pthread_t::__cleanup_stack"]
        [::std::mem::offset_of!(_opaque_pthread_t, __cleanup_stack) - 8usize];
    ["Offset of field: _opaque_pthread_t::__opaque"]
        [::std::mem::offset_of!(_opaque_pthread_t, __opaque) - 16usize];
};
pub type __darwin_pthread_attr_t = _opaque_pthread_attr_t;
pub type __darwin_pthread_cond_t = _opaque_pthread_cond_t;
pub type __darwin_pthread_condattr_t = _opaque_pthread_condattr_t;
pub type __darwin_pthread_key_t = ::std::os::raw::c_ulong;
pub type __darwin_pthread_mutex_t = _opaque_pthread_mutex_t;
pub type __darwin_pthread_mutexattr_t = _opaque_pthread_mutexattr_t;
pub type __darwin_pthread_once_t = _opaque_pthread_once_t;
pub type __darwin_pthread_rwlock_t = _opaque_pthread_rwlock_t;
pub type __darwin_pthread_rwlockattr_t = _opaque_pthread_rwlockattr_t;
pub type __darwin_pthread_t = *mut _opaque_pthread_t;
pub type __darwin_nl_item = ::std::os::raw::c_int;
pub type __darwin_wctrans_t = ::std::os::raw::c_int;
pub type __darwin_wctype_t = __uint32_t;
pub type u_int8_t = ::std::os::raw::c_uchar;
pub type u_int16_t = ::std::os::raw::c_ushort;
pub type u_int32_t = ::std::os::raw::c_uint;
pub type u_int64_t = ::std::os::raw::c_ulonglong;
pub type register_t = i64;
pub type user_addr_t = u_int64_t;
pub type user_size_t = u_int64_t;
pub type user_ssize_t = i64;
pub type user_long_t = i64;
pub type user_ulong_t = u_int64_t;
pub type user_time_t = i64;
pub type user_off_t = i64;
pub type syscall_arg_t = u_int64_t;
pub type rsize_t = __darwin_size_t;
pub type errno_t = ::std::os::raw::c_int;
pub type wchar_t = ::std::os::raw::c_int;
pub type max_align_t = f64;
#[repr(C)]
#[derive(Copy, Clone)]
pub union Rcomplex {
    pub __bindgen_anon_1: Rcomplex__bindgen_ty_1,
    pub private_data_c: __BindgenComplex<f64>,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct Rcomplex__bindgen_ty_1 {
    pub r: f64,
    pub i: f64,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of Rcomplex__bindgen_ty_1"][::std::mem::size_of::<Rcomplex__bindgen_ty_1>() - 16usize];
    ["Alignment of Rcomplex__bindgen_ty_1"]
        [::std::mem::align_of::<Rcomplex__bindgen_ty_1>() - 8usize];
    ["Offset of field: Rcomplex__bindgen_ty_1::r"]
        [::std::mem::offset_of!(Rcomplex__bindgen_ty_1, r) - 0usize];
    ["Offset of field: Rcomplex__bindgen_ty_1::i"]
        [::std::mem::offset_of!(Rcomplex__bindgen_ty_1, i) - 8usize];
};
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of Rcomplex"][::std::mem::size_of::<Rcomplex>() - 16usize];
    ["Alignment of Rcomplex"][::std::mem::align_of::<Rcomplex>() - 8usize];
    ["Offset of field: Rcomplex::private_data_c"]
        [::std::mem::offset_of!(Rcomplex, private_data_c) - 0usize];
};
pub type L_fp = ::std::option::Option<
    unsafe extern "C" fn(
        arg1: *mut f64,
        arg2: *mut f64,
        arg3: *mut f64,
    ) -> *mut ::std::os::raw::c_int,
>;
pub type __builtin_va_list = *mut ::std::os::raw::c_char;
extern "C" {
    pub fn memchr(
        __s: *const ::std::os::raw::c_void,
        __c: ::std::os::raw::c_int,
        __n: ::std::os::raw::c_ulong,
    ) -> *mut ::std::os::raw::c_void;
    pub fn memcmp(
        __s1: *const ::std::os::raw::c_void,
        __s2: *const ::std::os::raw::c_void,
        __n: ::std::os::raw::c_ulong,
    ) -> ::std::os::raw::c_int;
    pub fn memcpy(
        __dst: *mut ::std::os::raw::c_void,
        __src: *const ::std::os::raw::c_void,
        __n: ::std::os::raw::c_ulong,
    ) -> *mut ::std::os::raw::c_void;
    pub fn memmove(
        __dst: *mut ::std::os::raw::c_void,
        __src: *const ::std::os::raw::c_void,
        __len: ::std::os::raw::c_ulong,
    ) -> *mut ::std::os::raw::c_void;
    pub fn memset(
        __b: *mut ::std::os::raw::c_void,
        __c: ::std::os::raw::c_int,
        __len: ::std::os::raw::c_ulong,
    ) -> *mut ::std::os::raw::c_void;
    pub fn strcat(
        __s1: *mut ::std::os::raw::c_char,
        __s2: *const ::std::os::raw::c_char,
    ) -> *mut ::std::os::raw::c_char;
    pub fn strchr(
        __s: *const ::std::os::raw::c_char,
        __c: ::std::os::raw::c_int,
    ) -> *mut ::std::os::raw::c_char;
    pub fn strcmp(
        __s1: *const ::std::os::raw::c_char,
        __s2: *const ::std::os::raw::c_char,
    ) -> ::std::os::raw::c_int;
    pub fn strcoll(
        __s1: *const ::std::os::raw::c_char,
        __s2: *const ::std::os::raw::c_char,
    ) -> ::std::os::raw::c_int;
    pub fn strcpy(
        __dst: *mut ::std::os::raw::c_char,
        __src: *const ::std::os::raw::c_char,
    ) -> *mut ::std::os::raw::c_char;
    pub fn strcspn(
        __s: *const ::std::os::raw::c_char,
        __charset: *const ::std::os::raw::c_char,
    ) -> ::std::os::raw::c_ulong;
    pub fn strerror(__errnum: ::std::os::raw::c_int) -> *mut ::std::os::raw::c_char;
    pub fn strlen(__s: *const ::std::os::raw::c_char) -> ::std::os::raw::c_ulong;
    pub fn strncat(
        __s1: *mut ::std::os::raw::c_char,
        __s2: *const ::std::os::raw::c_char,
        __n: ::std::os::raw::c_ulong,
    ) -> *mut ::std::os::raw::c_char;
    pub fn strncmp(
        __s1: *const ::std::os::raw::c_char,
        __s2: *const ::std::os::raw::c_char,
        __n: ::std::os::raw::c_ulong,
    ) -> ::std::os::raw::c_int;
    pub fn strncpy(
        __dst: *mut ::std::os::raw::c_char,
        __src: *const ::std::os::raw::c_char,
        __n: ::std::os::raw::c_ulong,
    ) -> *mut ::std::os::raw::c_char;
    pub fn strpbrk(
        __s: *const ::std::os::raw::c_char,
        __charset: *const ::std::os::raw::c_char,
    ) -> *mut ::std::os::raw::c_char;
    pub fn strrchr(
        __s: *const ::std::os::raw::c_char,
        __c: ::std::os::raw::c_int,
    ) -> *mut ::std::os::raw::c_char;
    pub fn strspn(
        __s: *const ::std::os::raw::c_char,
        __charset: *const ::std::os::raw::c_char,
    ) -> ::std::os::raw::c_ulong;
    pub fn strstr(
        __big: *const ::std::os::raw::c_char,
        __little: *const ::std::os::raw::c_char,
    ) -> *mut ::std::os::raw::c_char;
    pub fn strtok(
        __str: *mut ::std::os::raw::c_char,
        __sep: *const ::std::os::raw::c_char,
    ) -> *mut ::std::os::raw::c_char;
    pub fn strxfrm(
        __s1: *mut ::std::os::raw::c_char,
        __s2: *const ::std::os::raw::c_char,
        __n: ::std::os::raw::c_ulong,
    ) -> ::std::os::raw::c_ulong;
    pub fn strtok_r(
        __str: *mut ::std::os::raw::c_char,
        __sep: *const ::std::os::raw::c_char,
        __lasts: *mut *mut ::std::os::raw::c_char,
    ) -> *mut ::std::os::raw::c_char;
    pub fn strerror_r(
        __errnum: ::std::os::raw::c_int,
        __strerrbuf: *mut ::std::os::raw::c_char,
        __buflen: usize,
    ) -> ::std::os::raw::c_int;
    pub fn strdup(__s1: *const ::std::os::raw::c_char) -> *mut ::std::os::raw::c_char;
    pub fn memccpy(
        __dst: *mut ::std::os::raw::c_void,
        __src: *const ::std::os::raw::c_void,
        __c: ::std::os::raw::c_int,
        __n: ::std::os::raw::c_ulong,
    ) -> *mut ::std::os::raw::c_void;
    pub fn stpcpy(
        __dst: *mut ::std::os::raw::c_char,
        __src: *const ::std::os::raw::c_char,
    ) -> *mut ::std::os::raw::c_char;
    pub fn stpncpy(
        __dst: *mut ::std::os::raw::c_char,
        __src: *const ::std::os::raw::c_char,
        __n: ::std::os::raw::c_ulong,
    ) -> *mut ::std::os::raw::c_char;
    pub fn strndup(
        __s1: *const ::std::os::raw::c_char,
        __n: ::std::os::raw::c_ulong,
    ) -> *mut ::std::os::raw::c_char;
    pub fn strnlen(__s1: *const ::std::os::raw::c_char, __n: usize) -> usize;
    pub fn strsignal(__sig: ::std::os::raw::c_int) -> *mut ::std::os::raw::c_char;
    pub fn memset_s(
        __s: *mut ::std::os::raw::c_void,
        __smax: rsize_t,
        __c: ::std::os::raw::c_int,
        __n: rsize_t,
    ) -> errno_t;
    pub fn memmem(
        __big: *const ::std::os::raw::c_void,
        __big_len: usize,
        __little: *const ::std::os::raw::c_void,
        __little_len: usize,
    ) -> *mut ::std::os::raw::c_void;
    pub fn memset_pattern4(
        __b: *mut ::std::os::raw::c_void,
        __pattern4: *const ::std::os::raw::c_void,
        __len: usize,
    );
    pub fn memset_pattern8(
        __b: *mut ::std::os::raw::c_void,
        __pattern8: *const ::std::os::raw::c_void,
        __len: usize,
    );
    pub fn memset_pattern16(
        __b: *mut ::std::os::raw::c_void,
        __pattern16: *const ::std::os::raw::c_void,
        __len: usize,
    );
    pub fn strcasestr(
        __big: *const ::std::os::raw::c_char,
        __little: *const ::std::os::raw::c_char,
    ) -> *mut ::std::os::raw::c_char;
    pub fn strnstr(
        __big: *const ::std::os::raw::c_char,
        __little: *const ::std::os::raw::c_char,
        __len: usize,
    ) -> *mut ::std::os::raw::c_char;
    pub fn strlcat(
        __dst: *mut ::std::os::raw::c_char,
        __source: *const ::std::os::raw::c_char,
        __size: ::std::os::raw::c_ulong,
    ) -> ::std::os::raw::c_ulong;
    pub fn strlcpy(
        __dst: *mut ::std::os::raw::c_char,
        __source: *const ::std::os::raw::c_char,
        __size: ::std::os::raw::c_ulong,
    ) -> ::std::os::raw::c_ulong;
    pub fn strmode(__mode: ::std::os::raw::c_int, __bp: *mut ::std::os::raw::c_char);
    pub fn strsep(
        __stringp: *mut *mut ::std::os::raw::c_char,
        __delim: *const ::std::os::raw::c_char,
    ) -> *mut ::std::os::raw::c_char;
    pub fn swab(
        arg1: *const ::std::os::raw::c_void,
        arg2: *mut ::std::os::raw::c_void,
        arg3: isize,
    );
    pub fn timingsafe_bcmp(
        __b1: *const ::std::os::raw::c_void,
        __b2: *const ::std::os::raw::c_void,
        __len: usize,
    ) -> ::std::os::raw::c_int;
    pub fn strsignal_r(
        __sig: ::std::os::raw::c_int,
        __strsignalbuf: *mut ::std::os::raw::c_char,
        __buflen: usize,
    ) -> ::std::os::raw::c_int;
    pub fn bcmp(
        arg1: *const ::std::os::raw::c_void,
        arg2: *const ::std::os::raw::c_void,
        arg3: ::std::os::raw::c_ulong,
    ) -> ::std::os::raw::c_int;
    pub fn bcopy(
        arg1: *const ::std::os::raw::c_void,
        arg2: *mut ::std::os::raw::c_void,
        arg3: usize,
    );
    pub fn bzero(arg1: *mut ::std::os::raw::c_void, arg2: ::std::os::raw::c_ulong);
    pub fn index(
        arg1: *const ::std::os::raw::c_char,
        arg2: ::std::os::raw::c_int,
    ) -> *mut ::std::os::raw::c_char;
    pub fn rindex(
        arg1: *const ::std::os::raw::c_char,
        arg2: ::std::os::raw::c_int,
    ) -> *mut ::std::os::raw::c_char;
    pub fn ffs(arg1: ::std::os::raw::c_int) -> ::std::os::raw::c_int;
    pub fn strcasecmp(
        arg1: *const ::std::os::raw::c_char,
        arg2: *const ::std::os::raw::c_char,
    ) -> ::std::os::raw::c_int;
    pub fn strncasecmp(
        arg1: *const ::std::os::raw::c_char,
        arg2: *const ::std::os::raw::c_char,
        arg3: ::std::os::raw::c_ulong,
    ) -> ::std::os::raw::c_int;
    pub fn ffsl(arg1: ::std::os::raw::c_long) -> ::std::os::raw::c_int;
    pub fn ffsll(arg1: ::std::os::raw::c_longlong) -> ::std::os::raw::c_int;
    pub fn fls(arg1: ::std::os::raw::c_int) -> ::std::os::raw::c_int;
    pub fn flsl(arg1: ::std::os::raw::c_long) -> ::std::os::raw::c_int;
    pub fn flsll(arg1: ::std::os::raw::c_longlong) -> ::std::os::raw::c_int;
    pub fn R_chk_calloc(arg1: usize, arg2: usize) -> *mut ::std::os::raw::c_void;
    pub fn R_chk_realloc(
        arg1: *mut ::std::os::raw::c_void,
        arg2: usize,
    ) -> *mut ::std::os::raw::c_void;
    pub fn R_chk_free(arg1: *mut ::std::os::raw::c_void);
    pub fn dasum_(
        n: *const ::std::os::raw::c_int,
        dx: *const f64,
        incx: *const ::std::os::raw::c_int,
    ) -> f64;
    pub fn daxpy_(
        n: *const ::std::os::raw::c_int,
        da: *const f64,
        dx: *const f64,
        incx: *const ::std::os::raw::c_int,
        dy: *mut f64,
        incy: *const ::std::os::raw::c_int,
    );
    pub fn dcopy_(
        n: *const ::std::os::raw::c_int,
        dx: *const f64,
        incx: *const ::std::os::raw::c_int,
        dy: *mut f64,
        incy: *const ::std::os::raw::c_int,
    );
    pub fn ddot_(
        n: *const ::std::os::raw::c_int,
        dx: *const f64,
        incx: *const ::std::os::raw::c_int,
        dy: *const f64,
        incy: *const ::std::os::raw::c_int,
    ) -> f64;
    pub fn dnrm2_(
        n: *const ::std::os::raw::c_int,
        dx: *const f64,
        incx: *const ::std::os::raw::c_int,
    ) -> f64;
    pub fn drot_(
        n: *const ::std::os::raw::c_int,
        dx: *mut f64,
        incx: *const ::std::os::raw::c_int,
        dy: *mut f64,
        incy: *const ::std::os::raw::c_int,
        c: *const f64,
        s: *const f64,
    );
    pub fn drotg_(a: *const f64, b: *const f64, c: *mut f64, s: *mut f64);
    pub fn drotm_(
        n: *const ::std::os::raw::c_int,
        dx: *mut f64,
        incx: *const ::std::os::raw::c_int,
        dy: *mut f64,
        incy: *const ::std::os::raw::c_int,
        dparam: *const f64,
    );
    pub fn drotmg_(
        dd1: *const f64,
        dd2: *const f64,
        dx1: *const f64,
        dy1: *const f64,
        param: *mut f64,
    );
    pub fn dscal_(
        n: *const ::std::os::raw::c_int,
        alpha: *const f64,
        dx: *mut f64,
        incx: *const ::std::os::raw::c_int,
    );
    pub fn dswap_(
        n: *const ::std::os::raw::c_int,
        dx: *mut f64,
        incx: *const ::std::os::raw::c_int,
        dy: *mut f64,
        incy: *const ::std::os::raw::c_int,
    );
    pub fn idamax_(
        n: *const ::std::os::raw::c_int,
        dx: *const f64,
        incx: *const ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
    pub fn dgbmv_(
        trans: *const ::std::os::raw::c_char,
        m: *const ::std::os::raw::c_int,
        n: *const ::std::os::raw::c_int,
        kl: *const ::std::os::raw::c_int,
        ku: *const ::std::os::raw::c_int,
        alpha: *const f64,
        a: *const f64,
        lda: *const ::std::os::raw::c_int,
        x: *const f64,
        incx: *const ::std::os::raw::c_int,
        beta: *const f64,
        y: *mut f64,
        incy: *const ::std::os::raw::c_int,
        arg1: usize,
    );
    pub fn dgemv_(
        trans: *const ::std::os::raw::c_char,
        m: *const ::std::os::raw::c_int,
        n: *const ::std::os::raw::c_int,
        alpha: *const f64,
        a: *const f64,
        lda: *const ::std::os::raw::c_int,
        x: *const f64,
        incx: *const ::std::os::raw::c_int,
        beta: *const f64,
        y: *mut f64,
        incy: *const ::std::os::raw::c_int,
        arg1: usize,
    );
    pub fn dsbmv_(
        uplo: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        k: *const ::std::os::raw::c_int,
        alpha: *const f64,
        a: *const f64,
        lda: *const ::std::os::raw::c_int,
        x: *const f64,
        incx: *const ::std::os::raw::c_int,
        beta: *const f64,
        y: *mut f64,
        incy: *const ::std::os::raw::c_int,
        arg1: usize,
    );
    pub fn dspmv_(
        uplo: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        alpha: *const f64,
        ap: *const f64,
        x: *const f64,
        incx: *const ::std::os::raw::c_int,
        beta: *const f64,
        y: *mut f64,
        incy: *const ::std::os::raw::c_int,
        arg1: usize,
    );
    pub fn dsymv_(
        uplo: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        alpha: *const f64,
        a: *const f64,
        lda: *const ::std::os::raw::c_int,
        x: *const f64,
        incx: *const ::std::os::raw::c_int,
        beta: *const f64,
        y: *mut f64,
        incy: *const ::std::os::raw::c_int,
        arg1: usize,
    );
    pub fn dtbmv_(
        uplo: *const ::std::os::raw::c_char,
        trans: *const ::std::os::raw::c_char,
        diag: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        k: *const ::std::os::raw::c_int,
        a: *const f64,
        lda: *const ::std::os::raw::c_int,
        x: *mut f64,
        incx: *const ::std::os::raw::c_int,
        arg1: usize,
        arg2: usize,
        arg3: usize,
    );
    pub fn dtpmv_(
        uplo: *const ::std::os::raw::c_char,
        trans: *const ::std::os::raw::c_char,
        diag: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        ap: *const f64,
        x: *mut f64,
        incx: *const ::std::os::raw::c_int,
        arg1: usize,
        arg2: usize,
        arg3: usize,
    );
    pub fn dtrmv_(
        uplo: *const ::std::os::raw::c_char,
        trans: *const ::std::os::raw::c_char,
        diag: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        a: *const f64,
        lda: *const ::std::os::raw::c_int,
        x: *mut f64,
        incx: *const ::std::os::raw::c_int,
        arg1: usize,
        arg2: usize,
        arg3: usize,
    );
    pub fn dtbsv_(
        uplo: *const ::std::os::raw::c_char,
        trans: *const ::std::os::raw::c_char,
        diag: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        k: *const ::std::os::raw::c_int,
        a: *const f64,
        lda: *const ::std::os::raw::c_int,
        x: *mut f64,
        incx: *const ::std::os::raw::c_int,
        arg1: usize,
        arg2: usize,
        arg3: usize,
    );
    pub fn dtpsv_(
        uplo: *const ::std::os::raw::c_char,
        trans: *const ::std::os::raw::c_char,
        diag: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        ap: *const f64,
        x: *mut f64,
        incx: *const ::std::os::raw::c_int,
        arg1: usize,
        arg2: usize,
        arg3: usize,
    );
    pub fn dtrsv_(
        uplo: *const ::std::os::raw::c_char,
        trans: *const ::std::os::raw::c_char,
        diag: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        a: *const f64,
        lda: *const ::std::os::raw::c_int,
        x: *mut f64,
        incx: *const ::std::os::raw::c_int,
        arg1: usize,
        arg2: usize,
        arg3: usize,
    );
    pub fn dger_(
        m: *const ::std::os::raw::c_int,
        n: *const ::std::os::raw::c_int,
        alpha: *const f64,
        x: *const f64,
        incx: *const ::std::os::raw::c_int,
        y: *const f64,
        incy: *const ::std::os::raw::c_int,
        a: *mut f64,
        lda: *const ::std::os::raw::c_int,
    );
    pub fn dsyr_(
        uplo: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        alpha: *const f64,
        x: *const f64,
        incx: *const ::std::os::raw::c_int,
        a: *mut f64,
        lda: *const ::std::os::raw::c_int,
        arg1: usize,
    );
    pub fn dspr_(
        uplo: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        alpha: *const f64,
        x: *const f64,
        incx: *const ::std::os::raw::c_int,
        ap: *mut f64,
        arg1: usize,
    );
    pub fn dsyr2_(
        uplo: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        alpha: *const f64,
        x: *const f64,
        incx: *const ::std::os::raw::c_int,
        y: *const f64,
        incy: *const ::std::os::raw::c_int,
        a: *mut f64,
        lda: *const ::std::os::raw::c_int,
        arg1: usize,
    );
    pub fn dspr2_(
        uplo: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        alpha: *const f64,
        x: *const f64,
        incx: *const ::std::os::raw::c_int,
        y: *const f64,
        incy: *const ::std::os::raw::c_int,
        ap: *mut f64,
        arg1: usize,
    );
    pub fn dgemm_(
        transa: *const ::std::os::raw::c_char,
        transb: *const ::std::os::raw::c_char,
        m: *const ::std::os::raw::c_int,
        n: *const ::std::os::raw::c_int,
        k: *const ::std::os::raw::c_int,
        alpha: *const f64,
        a: *const f64,
        lda: *const ::std::os::raw::c_int,
        b: *const f64,
        ldb: *const ::std::os::raw::c_int,
        beta: *const f64,
        c: *mut f64,
        ldc: *const ::std::os::raw::c_int,
        arg1: usize,
        arg2: usize,
    );
    pub fn dtrsm_(
        side: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        transa: *const ::std::os::raw::c_char,
        diag: *const ::std::os::raw::c_char,
        m: *const ::std::os::raw::c_int,
        n: *const ::std::os::raw::c_int,
        alpha: *const f64,
        a: *const f64,
        lda: *const ::std::os::raw::c_int,
        b: *mut f64,
        ldb: *const ::std::os::raw::c_int,
        arg1: usize,
        arg2: usize,
        arg3: usize,
        arg4: usize,
    );
    pub fn dtrmm_(
        side: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        transa: *const ::std::os::raw::c_char,
        diag: *const ::std::os::raw::c_char,
        m: *const ::std::os::raw::c_int,
        n: *const ::std::os::raw::c_int,
        alpha: *const f64,
        a: *const f64,
        lda: *const ::std::os::raw::c_int,
        b: *mut f64,
        ldb: *const ::std::os::raw::c_int,
        arg1: usize,
        arg2: usize,
        arg3: usize,
        arg4: usize,
    );
    pub fn dsymm_(
        side: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        m: *const ::std::os::raw::c_int,
        n: *const ::std::os::raw::c_int,
        alpha: *const f64,
        a: *const f64,
        lda: *const ::std::os::raw::c_int,
        b: *const f64,
        ldb: *const ::std::os::raw::c_int,
        beta: *const f64,
        c: *mut f64,
        ldc: *const ::std::os::raw::c_int,
        arg1: usize,
        arg2: usize,
    );
    pub fn dsyrk_(
        uplo: *const ::std::os::raw::c_char,
        trans: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        k: *const ::std::os::raw::c_int,
        alpha: *const f64,
        a: *const f64,
        lda: *const ::std::os::raw::c_int,
        beta: *const f64,
        c: *mut f64,
        ldc: *const ::std::os::raw::c_int,
        arg1: usize,
        arg2: usize,
    );
    pub fn dsyr2k_(
        uplo: *const ::std::os::raw::c_char,
        trans: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        k: *const ::std::os::raw::c_int,
        alpha: *const f64,
        a: *const f64,
        lda: *const ::std::os::raw::c_int,
        b: *const f64,
        ldb: *const ::std::os::raw::c_int,
        beta: *const f64,
        c: *mut f64,
        ldc: *const ::std::os::raw::c_int,
        arg1: usize,
        arg2: usize,
    );
    pub fn dcabs1_(z: *const Rcomplex) -> f64;
    pub fn dzasum_(
        n: *const ::std::os::raw::c_int,
        zx: *const Rcomplex,
        incx: *const ::std::os::raw::c_int,
    ) -> f64;
    pub fn dznrm2_(
        n: *const ::std::os::raw::c_int,
        x: *const Rcomplex,
        incx: *const ::std::os::raw::c_int,
    ) -> f64;
    pub fn izamax_(
        n: *const ::std::os::raw::c_int,
        zx: *const Rcomplex,
        incx: *const ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
    pub fn zaxpy_(
        n: *const ::std::os::raw::c_int,
        za: *const Rcomplex,
        zx: *const Rcomplex,
        incx: *const ::std::os::raw::c_int,
        zy: *const Rcomplex,
        incy: *const ::std::os::raw::c_int,
    );
    pub fn zcopy_(
        n: *const ::std::os::raw::c_int,
        zx: *const Rcomplex,
        incx: *const ::std::os::raw::c_int,
        zy: *const Rcomplex,
        incy: *const ::std::os::raw::c_int,
    );
    pub fn zdotc_(
        n: *const ::std::os::raw::c_int,
        zx: *const Rcomplex,
        incx: *const ::std::os::raw::c_int,
        zy: *const Rcomplex,
        incy: *const ::std::os::raw::c_int,
    ) -> Rcomplex;
    pub fn zdotu_(
        n: *const ::std::os::raw::c_int,
        zx: *const Rcomplex,
        incx: *const ::std::os::raw::c_int,
        zy: *const Rcomplex,
        incy: *const ::std::os::raw::c_int,
    ) -> Rcomplex;
    pub fn zdrot_(
        n: *const ::std::os::raw::c_int,
        zx: *const Rcomplex,
        incx: *const ::std::os::raw::c_int,
        zy: *mut Rcomplex,
        incy: *const ::std::os::raw::c_int,
        c: *const f64,
        s: *const f64,
    );
    pub fn zdscal_(
        n: *const ::std::os::raw::c_int,
        da: *const f64,
        zx: *mut Rcomplex,
        incx: *const ::std::os::raw::c_int,
    );
    pub fn zgbmv_(
        trans: *const ::std::os::raw::c_char,
        m: *mut ::std::os::raw::c_int,
        n: *mut ::std::os::raw::c_int,
        kl: *mut ::std::os::raw::c_int,
        ku: *mut ::std::os::raw::c_int,
        alpha: *mut Rcomplex,
        a: *mut Rcomplex,
        lda: *mut ::std::os::raw::c_int,
        x: *mut Rcomplex,
        incx: *mut ::std::os::raw::c_int,
        beta: *mut Rcomplex,
        y: *mut Rcomplex,
        incy: *mut ::std::os::raw::c_int,
        arg1: usize,
    );
    pub fn zgemm_(
        transa: *const ::std::os::raw::c_char,
        transb: *const ::std::os::raw::c_char,
        m: *const ::std::os::raw::c_int,
        n: *const ::std::os::raw::c_int,
        k: *const ::std::os::raw::c_int,
        alpha: *const Rcomplex,
        a: *const Rcomplex,
        lda: *const ::std::os::raw::c_int,
        b: *const Rcomplex,
        ldb: *const ::std::os::raw::c_int,
        beta: *const Rcomplex,
        c: *mut Rcomplex,
        ldc: *const ::std::os::raw::c_int,
        arg1: usize,
        arg2: usize,
    );
    pub fn zgemv_(
        trans: *const ::std::os::raw::c_char,
        m: *const ::std::os::raw::c_int,
        n: *const ::std::os::raw::c_int,
        alpha: *const Rcomplex,
        a: *const Rcomplex,
        lda: *const ::std::os::raw::c_int,
        x: *const Rcomplex,
        incx: *const ::std::os::raw::c_int,
        beta: *const Rcomplex,
        y: *mut Rcomplex,
        incy: *const ::std::os::raw::c_int,
        arg1: usize,
    );
    pub fn zgerc_(
        m: *const ::std::os::raw::c_int,
        n: *const ::std::os::raw::c_int,
        alpha: *const Rcomplex,
        x: *const Rcomplex,
        incx: *const ::std::os::raw::c_int,
        y: *const Rcomplex,
        incy: *const ::std::os::raw::c_int,
        a: *mut Rcomplex,
        lda: *const ::std::os::raw::c_int,
    );
    pub fn zgeru_(
        m: *const ::std::os::raw::c_int,
        n: *const ::std::os::raw::c_int,
        alpha: *const Rcomplex,
        x: *const Rcomplex,
        incx: *const ::std::os::raw::c_int,
        y: *const Rcomplex,
        incy: *const ::std::os::raw::c_int,
        a: *mut Rcomplex,
        lda: *const ::std::os::raw::c_int,
    );
    pub fn zhbmv_(
        uplo: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        k: *const ::std::os::raw::c_int,
        alpha: *const Rcomplex,
        a: *const Rcomplex,
        lda: *const ::std::os::raw::c_int,
        x: *const Rcomplex,
        incx: *const ::std::os::raw::c_int,
        beta: *const Rcomplex,
        y: *mut Rcomplex,
        incy: *const ::std::os::raw::c_int,
        arg1: usize,
    );
    pub fn zhemm_(
        side: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        m: *const ::std::os::raw::c_int,
        n: *const ::std::os::raw::c_int,
        alpha: *const Rcomplex,
        a: *const Rcomplex,
        lda: *const ::std::os::raw::c_int,
        b: *const Rcomplex,
        ldb: *const ::std::os::raw::c_int,
        beta: *const Rcomplex,
        c: *mut Rcomplex,
        ldc: *const ::std::os::raw::c_int,
        arg1: usize,
        arg2: usize,
    );
    pub fn zhemv_(
        uplo: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        alpha: *const Rcomplex,
        a: *const Rcomplex,
        lda: *const ::std::os::raw::c_int,
        x: *const Rcomplex,
        incx: *const ::std::os::raw::c_int,
        beta: *const Rcomplex,
        y: *mut Rcomplex,
        incy: *const ::std::os::raw::c_int,
        arg1: usize,
    );
    pub fn zher_(
        uplo: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        alpha: *const f64,
        x: *const Rcomplex,
        incx: *const ::std::os::raw::c_int,
        a: *mut Rcomplex,
        lda: *const ::std::os::raw::c_int,
        arg1: usize,
    );
    pub fn zher2_(
        uplo: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        alpha: *const Rcomplex,
        x: *const Rcomplex,
        incx: *const ::std::os::raw::c_int,
        y: *const Rcomplex,
        incy: *const ::std::os::raw::c_int,
        a: *mut Rcomplex,
        lda: *const ::std::os::raw::c_int,
        arg1: usize,
    );
    pub fn zher2k_(
        uplo: *const ::std::os::raw::c_char,
        trans: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        k: *const ::std::os::raw::c_int,
        alpha: *const Rcomplex,
        a: *const Rcomplex,
        lda: *const ::std::os::raw::c_int,
        b: *const Rcomplex,
        ldb: *const ::std::os::raw::c_int,
        beta: *const f64,
        c: *mut Rcomplex,
        ldc: *const ::std::os::raw::c_int,
        arg1: usize,
        arg2: usize,
    );
    pub fn zherk_(
        uplo: *const ::std::os::raw::c_char,
        trans: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        k: *const ::std::os::raw::c_int,
        alpha: *const f64,
        a: *const Rcomplex,
        lda: *const ::std::os::raw::c_int,
        beta: *const f64,
        c: *mut Rcomplex,
        ldc: *const ::std::os::raw::c_int,
        arg1: usize,
        arg2: usize,
    );
    pub fn zhpmv_(
        uplo: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        alpha: *const Rcomplex,
        ap: *const Rcomplex,
        x: *const Rcomplex,
        incx: *const ::std::os::raw::c_int,
        beta: *const Rcomplex,
        y: *mut Rcomplex,
        incy: *const ::std::os::raw::c_int,
        arg1: usize,
    );
    pub fn zhpr_(
        uplo: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        alpha: *const f64,
        x: *const Rcomplex,
        incx: *const ::std::os::raw::c_int,
        ap: *mut Rcomplex,
        arg1: usize,
    );
    pub fn zhpr2_(
        uplo: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        alpha: *const Rcomplex,
        x: *const Rcomplex,
        incx: *const ::std::os::raw::c_int,
        y: *const Rcomplex,
        incy: *const ::std::os::raw::c_int,
        ap: *mut Rcomplex,
        arg1: usize,
    );
    pub fn zrotg_(ca: *const Rcomplex, cb: *const Rcomplex, c: *mut f64, s: *mut Rcomplex);
    pub fn zscal_(
        n: *const ::std::os::raw::c_int,
        za: *const Rcomplex,
        zx: *mut Rcomplex,
        incx: *const ::std::os::raw::c_int,
    );
    pub fn zswap_(
        n: *const ::std::os::raw::c_int,
        zx: *mut Rcomplex,
        incx: *const ::std::os::raw::c_int,
        zy: *mut Rcomplex,
        incy: *const ::std::os::raw::c_int,
    );
    pub fn zsymm_(
        side: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        m: *const ::std::os::raw::c_int,
        n: *const ::std::os::raw::c_int,
        alpha: *const Rcomplex,
        a: *const Rcomplex,
        lda: *const ::std::os::raw::c_int,
        b: *const Rcomplex,
        ldb: *const ::std::os::raw::c_int,
        beta: *const Rcomplex,
        c: *mut Rcomplex,
        ldc: *const ::std::os::raw::c_int,
        arg1: usize,
        arg2: usize,
    );
    pub fn zsyr2k_(
        uplo: *const ::std::os::raw::c_char,
        trans: *const ::std::os::raw::c_char,
        n: *mut ::std::os::raw::c_int,
        k: *mut ::std::os::raw::c_int,
        alpha: *mut Rcomplex,
        a: *mut Rcomplex,
        lda: *mut ::std::os::raw::c_int,
        b: *mut Rcomplex,
        ldb: *mut ::std::os::raw::c_int,
        beta: *mut Rcomplex,
        c: *mut Rcomplex,
        ldc: *mut ::std::os::raw::c_int,
        arg1: usize,
        arg2: usize,
    );
    pub fn zsyrk_(
        uplo: *const ::std::os::raw::c_char,
        trans: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        k: *const ::std::os::raw::c_int,
        alpha: *const Rcomplex,
        a: *const Rcomplex,
        lda: *const ::std::os::raw::c_int,
        beta: *const Rcomplex,
        c: *mut Rcomplex,
        ldc: *const ::std::os::raw::c_int,
        arg1: usize,
        arg2: usize,
    );
    pub fn ztbmv_(
        uplo: *const ::std::os::raw::c_char,
        trans: *const ::std::os::raw::c_char,
        diag: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        k: *const ::std::os::raw::c_int,
        a: *const Rcomplex,
        lda: *const ::std::os::raw::c_int,
        x: *mut Rcomplex,
        incx: *const ::std::os::raw::c_int,
        arg1: usize,
        arg2: usize,
        arg3: usize,
    );
    pub fn ztbsv_(
        uplo: *const ::std::os::raw::c_char,
        trans: *const ::std::os::raw::c_char,
        diag: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        k: *const ::std::os::raw::c_int,
        a: *const Rcomplex,
        lda: *const ::std::os::raw::c_int,
        x: *mut Rcomplex,
        incx: *const ::std::os::raw::c_int,
        arg1: usize,
        arg2: usize,
        arg3: usize,
    );
    pub fn ztpmv_(
        uplo: *const ::std::os::raw::c_char,
        trans: *const ::std::os::raw::c_char,
        diag: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        ap: *const Rcomplex,
        x: *mut Rcomplex,
        incx: *const ::std::os::raw::c_int,
        arg1: usize,
        arg2: usize,
        arg3: usize,
    );
    pub fn ztpsv_(
        uplo: *const ::std::os::raw::c_char,
        trans: *const ::std::os::raw::c_char,
        diag: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        ap: *const Rcomplex,
        x: *mut Rcomplex,
        incx: *const ::std::os::raw::c_int,
        arg1: usize,
        arg2: usize,
        arg3: usize,
    );
    pub fn ztrmm_(
        side: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        transa: *const ::std::os::raw::c_char,
        diag: *const ::std::os::raw::c_char,
        m: *const ::std::os::raw::c_int,
        n: *const ::std::os::raw::c_int,
        alpha: *const Rcomplex,
        a: *const Rcomplex,
        lda: *const ::std::os::raw::c_int,
        b: *mut Rcomplex,
        ldb: *const ::std::os::raw::c_int,
        arg1: usize,
        arg2: usize,
        arg3: usize,
        arg4: usize,
    );
    pub fn ztrmv_(
        uplo: *const ::std::os::raw::c_char,
        trans: *const ::std::os::raw::c_char,
        diag: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        a: *const Rcomplex,
        lda: *const ::std::os::raw::c_int,
        x: *mut Rcomplex,
        incx: *const ::std::os::raw::c_int,
        arg1: usize,
        arg2: usize,
        arg3: usize,
    );
    pub fn ztrsm_(
        side: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        transa: *const ::std::os::raw::c_char,
        diag: *const ::std::os::raw::c_char,
        m: *mut ::std::os::raw::c_int,
        n: *mut ::std::os::raw::c_int,
        alpha: *mut Rcomplex,
        a: *mut Rcomplex,
        lda: *mut ::std::os::raw::c_int,
        b: *mut Rcomplex,
        ldb: *mut ::std::os::raw::c_int,
        arg1: usize,
        arg2: usize,
        arg3: usize,
        arg4: usize,
    );
    pub fn ztrsv_(
        uplo: *const ::std::os::raw::c_char,
        trans: *const ::std::os::raw::c_char,
        diag: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        a: *const Rcomplex,
        lda: *const ::std::os::raw::c_int,
        x: *mut Rcomplex,
        incx: *const ::std::os::raw::c_int,
        arg1: usize,
        arg2: usize,
        arg3: usize,
    );
    pub fn zspmv_(
        uplo: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        alpha: *const Rcomplex,
        ap: *const Rcomplex,
        x: *const Rcomplex,
        incx: *const ::std::os::raw::c_int,
        beta: *const Rcomplex,
        y: *mut Rcomplex,
        incy: *const ::std::os::raw::c_int,
        arg1: usize,
    );
    pub fn ilaver_(
        major: *mut ::std::os::raw::c_int,
        minor: *mut ::std::os::raw::c_int,
        patch: *mut ::std::os::raw::c_int,
    );
    pub fn dbdsqr_(
        uplo: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        ncvt: *const ::std::os::raw::c_int,
        nru: *const ::std::os::raw::c_int,
        ncc: *const ::std::os::raw::c_int,
        d: *mut f64,
        e: *mut f64,
        vt: *mut f64,
        ldvt: *const ::std::os::raw::c_int,
        u: *mut f64,
        ldu: *const ::std::os::raw::c_int,
        c: *mut f64,
        ldc: *const ::std::os::raw::c_int,
        work: *mut f64,
        info: *mut ::std::os::raw::c_int,
        arg1: usize,
    );
    pub fn ddisna_(
        job: *const ::std::os::raw::c_char,
        m: *const ::std::os::raw::c_int,
        n: *const ::std::os::raw::c_int,
        d: *mut f64,
        sep: *mut f64,
        info: *mut ::std::os::raw::c_int,
        arg1: usize,
    );
    pub fn dgbbrd_(
        vect: *const ::std::os::raw::c_char,
        m: *const ::std::os::raw::c_int,
        n: *const ::std::os::raw::c_int,
        ncc: *const ::std::os::raw::c_int,
        kl: *const ::std::os::raw::c_int,
        ku: *const ::std::os::raw::c_int,
        ab: *mut f64,
        ldab: *const ::std::os::raw::c_int,
        d: *mut f64,
        e: *mut f64,
        q: *mut f64,
        ldq: *const ::std::os::raw::c_int,
        pt: *mut f64,
        ldpt: *const ::std::os::raw::c_int,
        c: *mut f64,
        ldc: *const ::std::os::raw::c_int,
        work: *mut f64,
        info: *mut ::std::os::raw::c_int,
        arg1: usize,
    );
    pub fn dgbcon_(
        norm: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        kl: *const ::std::os::raw::c_int,
        ku: *const ::std::os::raw::c_int,
        ab: *mut f64,
        ldab: *const ::std::os::raw::c_int,
        ipiv: *mut ::std::os::raw::c_int,
        anorm: *const f64,
        rcond: *mut f64,
        work: *mut f64,
        iwork: *mut ::std::os::raw::c_int,
        info: *mut ::std::os::raw::c_int,
        arg1: usize,
    );
    pub fn dgbequ_(
        m: *const ::std::os::raw::c_int,
        n: *const ::std::os::raw::c_int,
        kl: *const ::std::os::raw::c_int,
        ku: *const ::std::os::raw::c_int,
        ab: *mut f64,
        ldab: *const ::std::os::raw::c_int,
        r: *mut f64,
        c: *mut f64,
        rowcnd: *mut f64,
        colcnd: *mut f64,
        amax: *mut f64,
        info: *mut ::std::os::raw::c_int,
    );
    pub fn dgbrfs_(
        trans: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        kl: *const ::std::os::raw::c_int,
        ku: *const ::std::os::raw::c_int,
        nrhs: *const ::std::os::raw::c_int,
        ab: *mut f64,
        ldab: *const ::std::os::raw::c_int,
        afb: *mut f64,
        ldafb: *const ::std::os::raw::c_int,
        ipiv: *mut ::std::os::raw::c_int,
        b: *mut f64,
        ldb: *const ::std::os::raw::c_int,
        x: *mut f64,
        ldx: *const ::std::os::raw::c_int,
        ferr: *mut f64,
        berr: *mut f64,
        work: *mut f64,
        iwork: *mut ::std::os::raw::c_int,
        info: *mut ::std::os::raw::c_int,
        arg1: usize,
    );
    pub fn dgbsv_(
        n: *const ::std::os::raw::c_int,
        kl: *const ::std::os::raw::c_int,
        ku: *const ::std::os::raw::c_int,
        nrhs: *const ::std::os::raw::c_int,
        ab: *mut f64,
        ldab: *const ::std::os::raw::c_int,
        ipiv: *mut ::std::os::raw::c_int,
        b: *mut f64,
        ldb: *const ::std::os::raw::c_int,
        info: *mut ::std::os::raw::c_int,
    );
    pub fn dgbsvx_(
        fact: *const ::std::os::raw::c_int,
        trans: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        kl: *const ::std::os::raw::c_int,
        ku: *const ::std::os::raw::c_int,
        nrhs: *const ::std::os::raw::c_int,
        ab: *mut f64,
        ldab: *const ::std::os::raw::c_int,
        afb: *mut f64,
        ldafb: *const ::std::os::raw::c_int,
        ipiv: *mut ::std::os::raw::c_int,
        equed: *const ::std::os::raw::c_char,
        r: *mut f64,
        c: *mut f64,
        b: *mut f64,
        ldb: *const ::std::os::raw::c_int,
        x: *mut f64,
        ldx: *const ::std::os::raw::c_int,
        rcond: *mut f64,
        ferr: *mut f64,
        berr: *mut f64,
        work: *mut f64,
        iwork: *mut ::std::os::raw::c_int,
        info: *mut ::std::os::raw::c_int,
        arg1: usize,
        arg2: usize,
    );
    pub fn dgbtf2_(
        m: *const ::std::os::raw::c_int,
        n: *const ::std::os::raw::c_int,
        kl: *const ::std::os::raw::c_int,
        ku: *const ::std::os::raw::c_int,
        ab: *mut f64,
        ldab: *const ::std::os::raw::c_int,
        ipiv: *mut ::std::os::raw::c_int,
        info: *mut ::std::os::raw::c_int,
    );
    pub fn dgbtrf_(
        m: *const ::std::os::raw::c_int,
        n: *const ::std::os::raw::c_int,
        kl: *const ::std::os::raw::c_int,
        ku: *const ::std::os::raw::c_int,
        ab: *mut f64,
        ldab: *const ::std::os::raw::c_int,
        ipiv: *mut ::std::os::raw::c_int,
        info: *mut ::std::os::raw::c_int,
    );
    pub fn dgbtrs_(
        trans: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        kl: *const ::std::os::raw::c_int,
        ku: *const ::std::os::raw::c_int,
        nrhs: *const ::std::os::raw::c_int,
        ab: *const f64,
        ldab: *const ::std::os::raw::c_int,
        ipiv: *const ::std::os::raw::c_int,
        b: *mut f64,
        ldb: *const ::std::os::raw::c_int,
        info: *mut ::std::os::raw::c_int,
        arg1: usize,
    );
    pub fn dgebak_(
        job: *const ::std::os::raw::c_char,
        side: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        ilo: *const ::std::os::raw::c_int,
        ihi: *const ::std::os::raw::c_int,
        scale: *mut f64,
        m: *const ::std::os::raw::c_int,
        v: *mut f64,
        ldv: *const ::std::os::raw::c_int,
        info: *mut ::std::os::raw::c_int,
        arg1: usize,
        arg2: usize,
    );
    pub fn dgebal_(
        job: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        a: *mut f64,
        lda: *const ::std::os::raw::c_int,
        ilo: *mut ::std::os::raw::c_int,
        ihi: *mut ::std::os::raw::c_int,
        scale: *mut f64,
        info: *mut ::std::os::raw::c_int,
        arg1: usize,
    );
    pub fn dgebd2_(
        m: *const ::std::os::raw::c_int,
        n: *const ::std::os::raw::c_int,
        a: *mut f64,
        lda: *const ::std::os::raw::c_int,
        d: *mut f64,
        e: *mut f64,
        tauq: *mut f64,
        taup: *mut f64,
        work: *mut f64,
        info: *mut ::std::os::raw::c_int,
    );
    pub fn dgebrd_(
        m: *const ::std::os::raw::c_int,
        n: *const ::std::os::raw::c_int,
        a: *mut f64,
        lda: *const ::std::os::raw::c_int,
        d: *mut f64,
        e: *mut f64,
        tauq: *mut f64,
        taup: *mut f64,
        work: *mut f64,
        lwork: *const ::std::os::raw::c_int,
        info: *mut ::std::os::raw::c_int,
    );
    pub fn dgecon_(
        norm: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        a: *const f64,
        lda: *const ::std::os::raw::c_int,
        anorm: *const f64,
        rcond: *mut f64,
        work: *mut f64,
        iwork: *mut ::std::os::raw::c_int,
        info: *mut ::std::os::raw::c_int,
        arg1: usize,
    );
    pub fn dgeequ_(
        m: *const ::std::os::raw::c_int,
        n: *const ::std::os::raw::c_int,
        a: *mut f64,
        lda: *const ::std::os::raw::c_int,
        r: *mut f64,
        c: *mut f64,
        rowcnd: *mut f64,
        colcnd: *mut f64,
        amax: *mut f64,
        info: *mut ::std::os::raw::c_int,
    );
    pub fn dgees_(
        jobvs: *const ::std::os::raw::c_char,
        sort: *const ::std::os::raw::c_char,
        select: ::std::option::Option<
            unsafe extern "C" fn(arg1: *const f64, arg2: *const f64) -> ::std::os::raw::c_int,
        >,
        n: *const ::std::os::raw::c_int,
        a: *mut f64,
        lda: *const ::std::os::raw::c_int,
        sdim: *mut ::std::os::raw::c_int,
        wr: *mut f64,
        wi: *mut f64,
        vs: *mut f64,
        ldvs: *const ::std::os::raw::c_int,
        work: *mut f64,
        lwork: *const ::std::os::raw::c_int,
        bwork: *mut ::std::os::raw::c_int,
        info: *mut ::std::os::raw::c_int,
        arg1: usize,
        arg2: usize,
    );
    pub fn dgeesx_(
        jobvs: *const ::std::os::raw::c_char,
        sort: *const ::std::os::raw::c_char,
        select: ::std::option::Option<
            unsafe extern "C" fn(arg1: *const f64, arg2: *const f64) -> ::std::os::raw::c_int,
        >,
        sense: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        a: *mut f64,
        lda: *const ::std::os::raw::c_int,
        sdim: *mut ::std::os::raw::c_int,
        wr: *mut f64,
        wi: *mut f64,
        vs: *mut f64,
        ldvs: *const ::std::os::raw::c_int,
        rconde: *mut f64,
        rcondv: *mut f64,
        work: *mut f64,
        lwork: *const ::std::os::raw::c_int,
        iwork: *mut ::std::os::raw::c_int,
        liwork: *const ::std::os::raw::c_int,
        bwork: *mut ::std::os::raw::c_int,
        info: *mut ::std::os::raw::c_int,
        arg1: usize,
        arg2: usize,
        arg3: usize,
    );
    pub fn dgeev_(
        jobvl: *const ::std::os::raw::c_char,
        jobvr: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        a: *mut f64,
        lda: *const ::std::os::raw::c_int,
        wr: *mut f64,
        wi: *mut f64,
        vl: *mut f64,
        ldvl: *const ::std::os::raw::c_int,
        vr: *mut f64,
        ldvr: *const ::std::os::raw::c_int,
        work: *mut f64,
        lwork: *const ::std::os::raw::c_int,
        info: *mut ::std::os::raw::c_int,
        arg1: usize,
        arg2: usize,
    );
    pub fn dgeevx_(
        balanc: *const ::std::os::raw::c_char,
        jobvl: *const ::std::os::raw::c_char,
        jobvr: *const ::std::os::raw::c_char,
        sense: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        a: *mut f64,
        lda: *const ::std::os::raw::c_int,
        wr: *mut f64,
        wi: *mut f64,
        vl: *mut f64,
        ldvl: *const ::std::os::raw::c_int,
        vr: *mut f64,
        ldvr: *const ::std::os::raw::c_int,
        ilo: *mut ::std::os::raw::c_int,
        ihi: *mut ::std::os::raw::c_int,
        scale: *mut f64,
        abnrm: *mut f64,
        rconde: *mut f64,
        rcondv: *mut f64,
        work: *mut f64,
        lwork: *const ::std::os::raw::c_int,
        iwork: *mut ::std::os::raw::c_int,
        info: *mut ::std::os::raw::c_int,
        arg1: usize,
        arg2: usize,
        arg3: usize,
        arg4: usize,
    );
    pub fn dgehd2_(
        n: *const ::std::os::raw::c_int,
        ilo: *const ::std::os::raw::c_int,
        ihi: *const ::std::os::raw::c_int,
        a: *mut f64,
        lda: *const ::std::os::raw::c_int,
        tau: *mut f64,
        work: *mut f64,
        info: *mut ::std::os::raw::c_int,
    );
    pub fn dgehrd_(
        n: *const ::std::os::raw::c_int,
        ilo: *const ::std::os::raw::c_int,
        ihi: *const ::std::os::raw::c_int,
        a: *mut f64,
        lda: *const ::std::os::raw::c_int,
        tau: *mut f64,
        work: *mut f64,
        lwork: *const ::std::os::raw::c_int,
        info: *mut ::std::os::raw::c_int,
    );
    pub fn dgelq2_(
        m: *const ::std::os::raw::c_int,
        n: *const ::std::os::raw::c_int,
        a: *mut f64,
        lda: *const ::std::os::raw::c_int,
        tau: *mut f64,
        work: *mut f64,
        info: *mut ::std::os::raw::c_int,
    );
    pub fn dgelqf_(
        m: *const ::std::os::raw::c_int,
        n: *const ::std::os::raw::c_int,
        a: *mut f64,
        lda: *const ::std::os::raw::c_int,
        tau: *mut f64,
        work: *mut f64,
        lwork: *const ::std::os::raw::c_int,
        info: *mut ::std::os::raw::c_int,
    );
    pub fn dgels_(
        trans: *const ::std::os::raw::c_char,
        m: *const ::std::os::raw::c_int,
        n: *const ::std::os::raw::c_int,
        nrhs: *const ::std::os::raw::c_int,
        a: *mut f64,
        lda: *const ::std::os::raw::c_int,
        b: *mut f64,
        ldb: *const ::std::os::raw::c_int,
        work: *mut f64,
        lwork: *const ::std::os::raw::c_int,
        info: *mut ::std::os::raw::c_int,
        arg1: usize,
    );
    pub fn dgelss_(
        m: *const ::std::os::raw::c_int,
        n: *const ::std::os::raw::c_int,
        nrhs: *const ::std::os::raw::c_int,
        a: *mut f64,
        lda: *const ::std::os::raw::c_int,
        b: *mut f64,
        ldb: *const ::std::os::raw::c_int,
        s: *mut f64,
        rcond: *mut f64,
        rank: *mut ::std::os::raw::c_int,
        work: *mut f64,
        lwork: *const ::std::os::raw::c_int,
        info: *mut ::std::os::raw::c_int,
    );
    pub fn dgelsy_(
        m: *const ::std::os::raw::c_int,
        n: *const ::std::os::raw::c_int,
        nrhs: *const ::std::os::raw::c_int,
        a: *mut f64,
        lda: *const ::std::os::raw::c_int,
        b: *mut f64,
        ldb: *const ::std::os::raw::c_int,
        jpvt: *mut ::std::os::raw::c_int,
        rcond: *const f64,
        rank: *mut ::std::os::raw::c_int,
        work: *mut f64,
        lwork: *const ::std::os::raw::c_int,
        info: *mut ::std::os::raw::c_int,
    );
    pub fn dgeql2_(
        m: *const ::std::os::raw::c_int,
        n: *const ::std::os::raw::c_int,
        a: *mut f64,
        lda: *const ::std::os::raw::c_int,
        tau: *mut f64,
        work: *mut f64,
        info: *mut ::std::os::raw::c_int,
    );
    pub fn dgeqlf_(
        m: *const ::std::os::raw::c_int,
        n: *const ::std::os::raw::c_int,
        a: *mut f64,
        lda: *const ::std::os::raw::c_int,
        tau: *mut f64,
        work: *mut f64,
        lwork: *const ::std::os::raw::c_int,
        info: *mut ::std::os::raw::c_int,
    );
    pub fn dgeqp3_(
        m: *const ::std::os::raw::c_int,
        n: *const ::std::os::raw::c_int,
        a: *mut f64,
        lda: *const ::std::os::raw::c_int,
        jpvt: *mut ::std::os::raw::c_int,
        tau: *mut f64,
        work: *mut f64,
        lwork: *const ::std::os::raw::c_int,
        info: *mut ::std::os::raw::c_int,
    );
    pub fn dgeqr2_(
        m: *const ::std::os::raw::c_int,
        n: *const ::std::os::raw::c_int,
        a: *mut f64,
        lda: *const ::std::os::raw::c_int,
        tau: *mut f64,
        work: *mut f64,
        info: *mut ::std::os::raw::c_int,
    );
    pub fn dgeqrf_(
        m: *const ::std::os::raw::c_int,
        n: *const ::std::os::raw::c_int,
        a: *mut f64,
        lda: *const ::std::os::raw::c_int,
        tau: *mut f64,
        work: *mut f64,
        lwork: *const ::std::os::raw::c_int,
        info: *mut ::std::os::raw::c_int,
    );
    pub fn dgerfs_(
        trans: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        nrhs: *const ::std::os::raw::c_int,
        a: *mut f64,
        lda: *const ::std::os::raw::c_int,
        af: *mut f64,
        ldaf: *const ::std::os::raw::c_int,
        ipiv: *mut ::std::os::raw::c_int,
        b: *mut f64,
        ldb: *const ::std::os::raw::c_int,
        x: *mut f64,
        ldx: *const ::std::os::raw::c_int,
        ferr: *mut f64,
        berr: *mut f64,
        work: *mut f64,
        iwork: *mut ::std::os::raw::c_int,
        info: *mut ::std::os::raw::c_int,
        arg1: usize,
    );
    pub fn dgerq2_(
        m: *const ::std::os::raw::c_int,
        n: *const ::std::os::raw::c_int,
        a: *mut f64,
        lda: *const ::std::os::raw::c_int,
        tau: *mut f64,
        work: *mut f64,
        info: *mut ::std::os::raw::c_int,
    );
    pub fn dgerqf_(
        m: *const ::std::os::raw::c_int,
        n: *const ::std::os::raw::c_int,
        a: *mut f64,
        lda: *const ::std::os::raw::c_int,
        tau: *mut f64,
        work: *mut f64,
        lwork: *const ::std::os::raw::c_int,
        info: *mut ::std::os::raw::c_int,
    );
    pub fn dgesv_(
        n: *const ::std::os::raw::c_int,
        nrhs: *const ::std::os::raw::c_int,
        a: *mut f64,
        lda: *const ::std::os::raw::c_int,
        ipiv: *mut ::std::os::raw::c_int,
        b: *mut f64,
        ldb: *const ::std::os::raw::c_int,
        info: *mut ::std::os::raw::c_int,
    );
    pub fn dgesvd_(
        jobu: *const ::std::os::raw::c_char,
        jobvt: *const ::std::os::raw::c_char,
        m: *const ::std::os::raw::c_int,
        n: *const ::std::os::raw::c_int,
        a: *mut f64,
        lda: *const ::std::os::raw::c_int,
        s: *mut f64,
        u: *mut f64,
        ldu: *const ::std::os::raw::c_int,
        vt: *mut f64,
        ldvt: *const ::std::os::raw::c_int,
        work: *mut f64,
        lwork: *const ::std::os::raw::c_int,
        info: *mut ::std::os::raw::c_int,
        arg1: usize,
        arg2: usize,
    );
    pub fn dgesvx_(
        fact: *const ::std::os::raw::c_char,
        trans: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        nrhs: *const ::std::os::raw::c_int,
        a: *mut f64,
        lda: *const ::std::os::raw::c_int,
        af: *mut f64,
        ldaf: *const ::std::os::raw::c_int,
        ipiv: *mut ::std::os::raw::c_int,
        equed: *mut ::std::os::raw::c_char,
        r: *mut f64,
        c: *mut f64,
        b: *mut f64,
        ldb: *const ::std::os::raw::c_int,
        x: *mut f64,
        ldx: *const ::std::os::raw::c_int,
        rcond: *mut f64,
        ferr: *mut f64,
        berr: *mut f64,
        work: *mut f64,
        iwork: *mut ::std::os::raw::c_int,
        info: *mut ::std::os::raw::c_int,
        arg1: usize,
        arg2: usize,
        arg3: usize,
    );
    pub fn dgetf2_(
        m: *const ::std::os::raw::c_int,
        n: *const ::std::os::raw::c_int,
        a: *mut f64,
        lda: *const ::std::os::raw::c_int,
        ipiv: *mut ::std::os::raw::c_int,
        info: *mut ::std::os::raw::c_int,
    );
    pub fn dgetrf_(
        m: *const ::std::os::raw::c_int,
        n: *const ::std::os::raw::c_int,
        a: *mut f64,
        lda: *const ::std::os::raw::c_int,
        ipiv: *mut ::std::os::raw::c_int,
        info: *mut ::std::os::raw::c_int,
    );
    pub fn dgetri_(
        n: *const ::std::os::raw::c_int,
        a: *mut f64,
        lda: *const ::std::os::raw::c_int,
        ipiv: *mut ::std::os::raw::c_int,
        work: *mut f64,
        lwork: *const ::std::os::raw::c_int,
        info: *mut ::std::os::raw::c_int,
    );
    pub fn dgetrs_(
        trans: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        nrhs: *const ::std::os::raw::c_int,
        a: *const f64,
        lda: *const ::std::os::raw::c_int,
        ipiv: *const ::std::os::raw::c_int,
        b: *mut f64,
        ldb: *const ::std::os::raw::c_int,
        info: *mut ::std::os::raw::c_int,
        arg1: usize,
    );
    pub fn dggbak_(
        job: *const ::std::os::raw::c_char,
        side: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        ilo: *const ::std::os::raw::c_int,
        ihi: *const ::std::os::raw::c_int,
        lscale: *mut f64,
        rscale: *mut f64,
        m: *const ::std::os::raw::c_int,
        v: *mut f64,
        ldv: *const ::std::os::raw::c_int,
        info: *mut ::std::os::raw::c_int,
        arg1: usize,
        arg2: usize,
    );
    pub fn dggbal_(
        job: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        a: *mut f64,
        lda: *const ::std::os::raw::c_int,
        b: *mut f64,
        ldb: *const ::std::os::raw::c_int,
        ilo: *mut ::std::os::raw::c_int,
        ihi: *mut ::std::os::raw::c_int,
        lscale: *mut f64,
        rscale: *mut f64,
        work: *mut f64,
        info: *mut ::std::os::raw::c_int,
        arg1: usize,
    );
    pub fn dgges_(
        jobvsl: *const ::std::os::raw::c_char,
        jobvsr: *const ::std::os::raw::c_char,
        sort: *const ::std::os::raw::c_char,
        delztg: ::std::option::Option<
            unsafe extern "C" fn(
                arg1: *mut f64,
                arg2: *mut f64,
                arg3: *mut f64,
            ) -> ::std::os::raw::c_int,
        >,
        n: *const ::std::os::raw::c_int,
        a: *mut f64,
        lda: *const ::std::os::raw::c_int,
        b: *mut f64,
        ldb: *const ::std::os::raw::c_int,
        alphar: *mut f64,
        alphai: *mut f64,
        beta: *const f64,
        vsl: *mut f64,
        ldvsl: *const ::std::os::raw::c_int,
        vsr: *mut f64,
        ldvsr: *const ::std::os::raw::c_int,
        work: *mut f64,
        lwork: *const ::std::os::raw::c_int,
        bwork: *mut ::std::os::raw::c_int,
        info: *mut ::std::os::raw::c_int,
        arg1: usize,
        arg2: usize,
        arg3: usize,
    );
    pub fn dggglm_(
        n: *const ::std::os::raw::c_int,
        m: *const ::std::os::raw::c_int,
        p: *const ::std::os::raw::c_int,
        a: *mut f64,
        lda: *const ::std::os::raw::c_int,
        b: *mut f64,
        ldb: *const ::std::os::raw::c_int,
        d: *mut f64,
        x: *mut f64,
        y: *mut f64,
        work: *mut f64,
        lwork: *const ::std::os::raw::c_int,
        info: *mut ::std::os::raw::c_int,
    );
    pub fn dgghrd_(
        compq: *const ::std::os::raw::c_char,
        compz: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        ilo: *const ::std::os::raw::c_int,
        ihi: *const ::std::os::raw::c_int,
        a: *mut f64,
        lda: *const ::std::os::raw::c_int,
        b: *mut f64,
        ldb: *const ::std::os::raw::c_int,
        q: *mut f64,
        ldq: *const ::std::os::raw::c_int,
        z: *mut f64,
        ldz: *const ::std::os::raw::c_int,
        info: *mut ::std::os::raw::c_int,
        arg1: usize,
        arg2: usize,
    );
    pub fn dgglse_(
        m: *const ::std::os::raw::c_int,
        n: *const ::std::os::raw::c_int,
        p: *const ::std::os::raw::c_int,
        a: *mut f64,
        lda: *const ::std::os::raw::c_int,
        b: *mut f64,
        ldb: *const ::std::os::raw::c_int,
        c: *mut f64,
        d: *mut f64,
        x: *mut f64,
        work: *mut f64,
        lwork: *const ::std::os::raw::c_int,
        info: *mut ::std::os::raw::c_int,
    );
    pub fn dggqrf_(
        n: *const ::std::os::raw::c_int,
        m: *const ::std::os::raw::c_int,
        p: *const ::std::os::raw::c_int,
        a: *mut f64,
        lda: *const ::std::os::raw::c_int,
        taua: *mut f64,
        b: *mut f64,
        ldb: *const ::std::os::raw::c_int,
        taub: *mut f64,
        work: *mut f64,
        lwork: *const ::std::os::raw::c_int,
        info: *mut ::std::os::raw::c_int,
    );
    pub fn dggrqf_(
        m: *const ::std::os::raw::c_int,
        p: *const ::std::os::raw::c_int,
        n: *const ::std::os::raw::c_int,
        a: *mut f64,
        lda: *const ::std::os::raw::c_int,
        taua: *mut f64,
        b: *mut f64,
        ldb: *const ::std::os::raw::c_int,
        taub: *mut f64,
        work: *mut f64,
        lwork: *const ::std::os::raw::c_int,
        info: *mut ::std::os::raw::c_int,
    );
    pub fn dgtcon_(
        norm: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        dl: *mut f64,
        d: *mut f64,
        du: *mut f64,
        du2: *mut f64,
        ipiv: *mut ::std::os::raw::c_int,
        anorm: *const f64,
        rcond: *mut f64,
        work: *mut f64,
        iwork: *mut ::std::os::raw::c_int,
        info: *mut ::std::os::raw::c_int,
        arg1: usize,
    );
    pub fn dgtrfs_(
        trans: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        nrhs: *const ::std::os::raw::c_int,
        dl: *mut f64,
        d: *mut f64,
        du: *mut f64,
        dlf: *mut f64,
        df: *mut f64,
        duf: *mut f64,
        du2: *mut f64,
        ipiv: *mut ::std::os::raw::c_int,
        b: *mut f64,
        ldb: *const ::std::os::raw::c_int,
        x: *mut f64,
        ldx: *const ::std::os::raw::c_int,
        ferr: *mut f64,
        berr: *mut f64,
        work: *mut f64,
        iwork: *mut ::std::os::raw::c_int,
        info: *mut ::std::os::raw::c_int,
        arg1: usize,
    );
    pub fn dgtsv_(
        n: *const ::std::os::raw::c_int,
        nrhs: *const ::std::os::raw::c_int,
        dl: *mut f64,
        d: *mut f64,
        du: *mut f64,
        b: *mut f64,
        ldb: *const ::std::os::raw::c_int,
        info: *mut ::std::os::raw::c_int,
    );
    pub fn dgtsvx_(
        fact: *const ::std::os::raw::c_int,
        trans: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        nrhs: *const ::std::os::raw::c_int,
        dl: *mut f64,
        d: *mut f64,
        du: *mut f64,
        dlf: *mut f64,
        df: *mut f64,
        duf: *mut f64,
        du2: *mut f64,
        ipiv: *mut ::std::os::raw::c_int,
        b: *mut f64,
        ldb: *const ::std::os::raw::c_int,
        x: *mut f64,
        ldx: *const ::std::os::raw::c_int,
        rcond: *mut f64,
        ferr: *mut f64,
        berr: *mut f64,
        work: *mut f64,
        iwork: *mut ::std::os::raw::c_int,
        info: *mut ::std::os::raw::c_int,
        arg1: usize,
    );
    pub fn dgttrf_(
        n: *const ::std::os::raw::c_int,
        dl: *mut f64,
        d: *mut f64,
        du: *mut f64,
        du2: *mut f64,
        ipiv: *mut ::std::os::raw::c_int,
        info: *mut ::std::os::raw::c_int,
    );
    pub fn dgttrs_(
        trans: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        nrhs: *const ::std::os::raw::c_int,
        dl: *mut f64,
        d: *mut f64,
        du: *mut f64,
        du2: *mut f64,
        ipiv: *mut ::std::os::raw::c_int,
        b: *mut f64,
        ldb: *const ::std::os::raw::c_int,
        info: *mut ::std::os::raw::c_int,
        arg1: usize,
    );
    pub fn dopgtr_(
        uplo: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        ap: *const f64,
        tau: *const f64,
        q: *mut f64,
        ldq: *const ::std::os::raw::c_int,
        work: *mut f64,
        info: *mut ::std::os::raw::c_int,
        arg1: usize,
    );
    pub fn dopmtr_(
        side: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        trans: *const ::std::os::raw::c_char,
        m: *const ::std::os::raw::c_int,
        n: *const ::std::os::raw::c_int,
        ap: *const f64,
        tau: *const f64,
        c: *mut f64,
        ldc: *const ::std::os::raw::c_int,
        work: *mut f64,
        info: *mut ::std::os::raw::c_int,
        arg1: usize,
        arg2: usize,
        arg3: usize,
    );
    pub fn dorg2l_(
        m: *const ::std::os::raw::c_int,
        n: *const ::std::os::raw::c_int,
        k: *const ::std::os::raw::c_int,
        a: *mut f64,
        lda: *const ::std::os::raw::c_int,
        tau: *const f64,
        work: *mut f64,
        info: *mut ::std::os::raw::c_int,
    );
    pub fn dorg2r_(
        m: *const ::std::os::raw::c_int,
        n: *const ::std::os::raw::c_int,
        k: *const ::std::os::raw::c_int,
        a: *mut f64,
        lda: *const ::std::os::raw::c_int,
        tau: *const f64,
        work: *mut f64,
        info: *mut ::std::os::raw::c_int,
    );
    pub fn dorgbr_(
        vect: *const ::std::os::raw::c_char,
        m: *const ::std::os::raw::c_int,
        n: *const ::std::os::raw::c_int,
        k: *const ::std::os::raw::c_int,
        a: *mut f64,
        lda: *const ::std::os::raw::c_int,
        tau: *const f64,
        work: *mut f64,
        lwork: *const ::std::os::raw::c_int,
        info: *mut ::std::os::raw::c_int,
        arg1: usize,
    );
    pub fn dorghr_(
        n: *const ::std::os::raw::c_int,
        ilo: *const ::std::os::raw::c_int,
        ihi: *const ::std::os::raw::c_int,
        a: *mut f64,
        lda: *const ::std::os::raw::c_int,
        tau: *const f64,
        work: *mut f64,
        lwork: *const ::std::os::raw::c_int,
        info: *mut ::std::os::raw::c_int,
    );
    pub fn dorgl2_(
        m: *const ::std::os::raw::c_int,
        n: *const ::std::os::raw::c_int,
        k: *const ::std::os::raw::c_int,
        a: *mut f64,
        lda: *const ::std::os::raw::c_int,
        tau: *const f64,
        work: *mut f64,
        info: *mut ::std::os::raw::c_int,
    );
    pub fn dorglq_(
        m: *const ::std::os::raw::c_int,
        n: *const ::std::os::raw::c_int,
        k: *const ::std::os::raw::c_int,
        a: *mut f64,
        lda: *const ::std::os::raw::c_int,
        tau: *const f64,
        work: *mut f64,
        lwork: *const ::std::os::raw::c_int,
        info: *mut ::std::os::raw::c_int,
    );
    pub fn dorgql_(
        m: *const ::std::os::raw::c_int,
        n: *const ::std::os::raw::c_int,
        k: *const ::std::os::raw::c_int,
        a: *mut f64,
        lda: *const ::std::os::raw::c_int,
        tau: *const f64,
        work: *mut f64,
        lwork: *const ::std::os::raw::c_int,
        info: *mut ::std::os::raw::c_int,
    );
    pub fn dorgqr_(
        m: *const ::std::os::raw::c_int,
        n: *const ::std::os::raw::c_int,
        k: *const ::std::os::raw::c_int,
        a: *mut f64,
        lda: *const ::std::os::raw::c_int,
        tau: *const f64,
        work: *mut f64,
        lwork: *const ::std::os::raw::c_int,
        info: *mut ::std::os::raw::c_int,
    );
    pub fn dorgr2_(
        m: *const ::std::os::raw::c_int,
        n: *const ::std::os::raw::c_int,
        k: *const ::std::os::raw::c_int,
        a: *mut f64,
        lda: *const ::std::os::raw::c_int,
        tau: *const f64,
        work: *mut f64,
        info: *mut ::std::os::raw::c_int,
    );
    pub fn dorgrq_(
        m: *const ::std::os::raw::c_int,
        n: *const ::std::os::raw::c_int,
        k: *const ::std::os::raw::c_int,
        a: *mut f64,
        lda: *const ::std::os::raw::c_int,
        tau: *const f64,
        work: *mut f64,
        lwork: *const ::std::os::raw::c_int,
        info: *mut ::std::os::raw::c_int,
    );
    pub fn dorgtr_(
        uplo: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        a: *mut f64,
        lda: *const ::std::os::raw::c_int,
        tau: *const f64,
        work: *mut f64,
        lwork: *const ::std::os::raw::c_int,
        info: *mut ::std::os::raw::c_int,
        arg1: usize,
    );
    pub fn dorm2l_(
        side: *const ::std::os::raw::c_char,
        trans: *const ::std::os::raw::c_char,
        m: *const ::std::os::raw::c_int,
        n: *const ::std::os::raw::c_int,
        k: *const ::std::os::raw::c_int,
        a: *const f64,
        lda: *const ::std::os::raw::c_int,
        tau: *const f64,
        c: *mut f64,
        ldc: *const ::std::os::raw::c_int,
        work: *mut f64,
        info: *mut ::std::os::raw::c_int,
        arg1: usize,
        arg2: usize,
    );
    pub fn dorm2r_(
        side: *const ::std::os::raw::c_char,
        trans: *const ::std::os::raw::c_char,
        m: *const ::std::os::raw::c_int,
        n: *const ::std::os::raw::c_int,
        k: *const ::std::os::raw::c_int,
        a: *const f64,
        lda: *const ::std::os::raw::c_int,
        tau: *const f64,
        c: *mut f64,
        ldc: *const ::std::os::raw::c_int,
        work: *mut f64,
        info: *mut ::std::os::raw::c_int,
        arg1: usize,
        arg2: usize,
    );
    pub fn dormbr_(
        vect: *const ::std::os::raw::c_char,
        side: *const ::std::os::raw::c_char,
        trans: *const ::std::os::raw::c_char,
        m: *const ::std::os::raw::c_int,
        n: *const ::std::os::raw::c_int,
        k: *const ::std::os::raw::c_int,
        a: *const f64,
        lda: *const ::std::os::raw::c_int,
        tau: *const f64,
        c: *mut f64,
        ldc: *const ::std::os::raw::c_int,
        work: *mut f64,
        lwork: *const ::std::os::raw::c_int,
        info: *mut ::std::os::raw::c_int,
        arg1: usize,
        arg2: usize,
        arg3: usize,
    );
    pub fn dormhr_(
        side: *const ::std::os::raw::c_char,
        trans: *const ::std::os::raw::c_char,
        m: *const ::std::os::raw::c_int,
        n: *const ::std::os::raw::c_int,
        ilo: *const ::std::os::raw::c_int,
        ihi: *const ::std::os::raw::c_int,
        a: *const f64,
        lda: *const ::std::os::raw::c_int,
        tau: *const f64,
        c: *mut f64,
        ldc: *const ::std::os::raw::c_int,
        work: *mut f64,
        lwork: *const ::std::os::raw::c_int,
        info: *mut ::std::os::raw::c_int,
        arg1: usize,
        arg2: usize,
    );
    pub fn dorml2_(
        side: *const ::std::os::raw::c_char,
        trans: *const ::std::os::raw::c_char,
        m: *const ::std::os::raw::c_int,
        n: *const ::std::os::raw::c_int,
        k: *const ::std::os::raw::c_int,
        a: *const f64,
        lda: *const ::std::os::raw::c_int,
        tau: *const f64,
        c: *mut f64,
        ldc: *const ::std::os::raw::c_int,
        work: *mut f64,
        info: *mut ::std::os::raw::c_int,
        arg1: usize,
        arg2: usize,
    );
    pub fn dormlq_(
        side: *const ::std::os::raw::c_char,
        trans: *const ::std::os::raw::c_char,
        m: *const ::std::os::raw::c_int,
        n: *const ::std::os::raw::c_int,
        k: *const ::std::os::raw::c_int,
        a: *const f64,
        lda: *const ::std::os::raw::c_int,
        tau: *const f64,
        c: *mut f64,
        ldc: *const ::std::os::raw::c_int,
        work: *mut f64,
        lwork: *const ::std::os::raw::c_int,
        info: *mut ::std::os::raw::c_int,
        arg1: usize,
        arg2: usize,
    );
    pub fn dormql_(
        side: *const ::std::os::raw::c_char,
        trans: *const ::std::os::raw::c_char,
        m: *const ::std::os::raw::c_int,
        n: *const ::std::os::raw::c_int,
        k: *const ::std::os::raw::c_int,
        a: *const f64,
        lda: *const ::std::os::raw::c_int,
        tau: *const f64,
        c: *mut f64,
        ldc: *const ::std::os::raw::c_int,
        work: *mut f64,
        lwork: *const ::std::os::raw::c_int,
        info: *mut ::std::os::raw::c_int,
        arg1: usize,
        arg2: usize,
    );
    pub fn dormqr_(
        side: *const ::std::os::raw::c_char,
        trans: *const ::std::os::raw::c_char,
        m: *const ::std::os::raw::c_int,
        n: *const ::std::os::raw::c_int,
        k: *const ::std::os::raw::c_int,
        a: *const f64,
        lda: *const ::std::os::raw::c_int,
        tau: *const f64,
        c: *mut f64,
        ldc: *const ::std::os::raw::c_int,
        work: *mut f64,
        lwork: *const ::std::os::raw::c_int,
        info: *mut ::std::os::raw::c_int,
        arg1: usize,
        arg2: usize,
    );
    pub fn dormr2_(
        side: *const ::std::os::raw::c_char,
        trans: *const ::std::os::raw::c_char,
        m: *const ::std::os::raw::c_int,
        n: *const ::std::os::raw::c_int,
        k: *const ::std::os::raw::c_int,
        a: *const f64,
        lda: *const ::std::os::raw::c_int,
        tau: *const f64,
        c: *mut f64,
        ldc: *const ::std::os::raw::c_int,
        work: *mut f64,
        info: *mut ::std::os::raw::c_int,
        arg1: usize,
        arg2: usize,
    );
    pub fn dormrq_(
        side: *const ::std::os::raw::c_char,
        trans: *const ::std::os::raw::c_char,
        m: *const ::std::os::raw::c_int,
        n: *const ::std::os::raw::c_int,
        k: *const ::std::os::raw::c_int,
        a: *const f64,
        lda: *const ::std::os::raw::c_int,
        tau: *const f64,
        c: *mut f64,
        ldc: *const ::std::os::raw::c_int,
        work: *mut f64,
        lwork: *const ::std::os::raw::c_int,
        info: *mut ::std::os::raw::c_int,
        arg1: usize,
        arg2: usize,
    );
    pub fn dormtr_(
        side: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        trans: *const ::std::os::raw::c_char,
        m: *const ::std::os::raw::c_int,
        n: *const ::std::os::raw::c_int,
        a: *const f64,
        lda: *const ::std::os::raw::c_int,
        tau: *const f64,
        c: *mut f64,
        ldc: *const ::std::os::raw::c_int,
        work: *mut f64,
        lwork: *const ::std::os::raw::c_int,
        info: *mut ::std::os::raw::c_int,
        arg1: usize,
        arg2: usize,
        arg3: usize,
    );
    pub fn dpbcon_(
        uplo: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        kd: *const ::std::os::raw::c_int,
        ab: *const f64,
        ldab: *const ::std::os::raw::c_int,
        anorm: *const f64,
        rcond: *mut f64,
        work: *mut f64,
        iwork: *mut ::std::os::raw::c_int,
        info: *mut ::std::os::raw::c_int,
        arg1: usize,
    );
    pub fn dpbequ_(
        uplo: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        kd: *const ::std::os::raw::c_int,
        ab: *const f64,
        ldab: *const ::std::os::raw::c_int,
        s: *mut f64,
        scond: *mut f64,
        amax: *mut f64,
        info: *mut ::std::os::raw::c_int,
        arg1: usize,
    );
    pub fn dpbrfs_(
        uplo: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        kd: *const ::std::os::raw::c_int,
        nrhs: *const ::std::os::raw::c_int,
        ab: *const f64,
        ldab: *const ::std::os::raw::c_int,
        afb: *const f64,
        ldafb: *const ::std::os::raw::c_int,
        b: *const f64,
        ldb: *const ::std::os::raw::c_int,
        x: *mut f64,
        ldx: *const ::std::os::raw::c_int,
        ferr: *mut f64,
        berr: *mut f64,
        work: *mut f64,
        iwork: *mut ::std::os::raw::c_int,
        info: *mut ::std::os::raw::c_int,
        arg1: usize,
    );
    pub fn dpbstf_(
        uplo: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        kd: *const ::std::os::raw::c_int,
        ab: *mut f64,
        ldab: *const ::std::os::raw::c_int,
        info: *mut ::std::os::raw::c_int,
        arg1: usize,
    );
    pub fn dpbsv_(
        uplo: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        kd: *const ::std::os::raw::c_int,
        nrhs: *const ::std::os::raw::c_int,
        ab: *mut f64,
        ldab: *const ::std::os::raw::c_int,
        b: *mut f64,
        ldb: *const ::std::os::raw::c_int,
        info: *mut ::std::os::raw::c_int,
        arg1: usize,
    );
    pub fn dpbsvx_(
        fact: *const ::std::os::raw::c_int,
        uplo: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        kd: *const ::std::os::raw::c_int,
        nrhs: *const ::std::os::raw::c_int,
        ab: *mut f64,
        ldab: *const ::std::os::raw::c_int,
        afb: *mut f64,
        ldafb: *const ::std::os::raw::c_int,
        equed: *mut ::std::os::raw::c_char,
        s: *mut f64,
        b: *mut f64,
        ldb: *const ::std::os::raw::c_int,
        x: *mut f64,
        ldx: *const ::std::os::raw::c_int,
        rcond: *mut f64,
        ferr: *mut f64,
        berr: *mut f64,
        work: *mut f64,
        iwork: *mut ::std::os::raw::c_int,
        info: *mut ::std::os::raw::c_int,
        arg1: usize,
        arg2: usize,
    );
    pub fn dpbtf2_(
        uplo: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        kd: *const ::std::os::raw::c_int,
        ab: *mut f64,
        ldab: *const ::std::os::raw::c_int,
        info: *mut ::std::os::raw::c_int,
        arg1: usize,
    );
    pub fn dpbtrf_(
        uplo: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        kd: *const ::std::os::raw::c_int,
        ab: *mut f64,
        ldab: *const ::std::os::raw::c_int,
        info: *mut ::std::os::raw::c_int,
        arg1: usize,
    );
    pub fn dpbtrs_(
        uplo: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        kd: *const ::std::os::raw::c_int,
        nrhs: *const ::std::os::raw::c_int,
        ab: *const f64,
        ldab: *const ::std::os::raw::c_int,
        b: *mut f64,
        ldb: *const ::std::os::raw::c_int,
        info: *mut ::std::os::raw::c_int,
        arg1: usize,
    );
    pub fn dpocon_(
        uplo: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        a: *const f64,
        lda: *const ::std::os::raw::c_int,
        anorm: *const f64,
        rcond: *mut f64,
        work: *mut f64,
        iwork: *mut ::std::os::raw::c_int,
        info: *mut ::std::os::raw::c_int,
        arg1: usize,
    );
    pub fn dpoequ_(
        n: *const ::std::os::raw::c_int,
        a: *const f64,
        lda: *const ::std::os::raw::c_int,
        s: *mut f64,
        scond: *mut f64,
        amax: *mut f64,
        info: *mut ::std::os::raw::c_int,
    );
    pub fn dporfs_(
        uplo: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        nrhs: *const ::std::os::raw::c_int,
        a: *const f64,
        lda: *const ::std::os::raw::c_int,
        af: *const f64,
        ldaf: *const ::std::os::raw::c_int,
        b: *const f64,
        ldb: *const ::std::os::raw::c_int,
        x: *mut f64,
        ldx: *const ::std::os::raw::c_int,
        ferr: *mut f64,
        berr: *mut f64,
        work: *mut f64,
        iwork: *mut ::std::os::raw::c_int,
        info: *mut ::std::os::raw::c_int,
        arg1: usize,
    );
    pub fn dposv_(
        uplo: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        nrhs: *const ::std::os::raw::c_int,
        a: *mut f64,
        lda: *const ::std::os::raw::c_int,
        b: *mut f64,
        ldb: *const ::std::os::raw::c_int,
        info: *mut ::std::os::raw::c_int,
        arg1: usize,
    );
    pub fn dposvx_(
        fact: *const ::std::os::raw::c_int,
        uplo: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        nrhs: *const ::std::os::raw::c_int,
        a: *mut f64,
        lda: *const ::std::os::raw::c_int,
        af: *mut f64,
        ldaf: *const ::std::os::raw::c_int,
        equed: *const ::std::os::raw::c_char,
        s: *mut f64,
        b: *mut f64,
        ldb: *const ::std::os::raw::c_int,
        x: *mut f64,
        ldx: *const ::std::os::raw::c_int,
        rcond: *mut f64,
        ferr: *mut f64,
        berr: *mut f64,
        work: *mut f64,
        iwork: *mut ::std::os::raw::c_int,
        info: *mut ::std::os::raw::c_int,
        arg1: usize,
        arg2: usize,
    );
    pub fn dpotf2_(
        uplo: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        a: *mut f64,
        lda: *const ::std::os::raw::c_int,
        info: *mut ::std::os::raw::c_int,
        arg1: usize,
    );
    pub fn dpotrf_(
        uplo: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        a: *mut f64,
        lda: *const ::std::os::raw::c_int,
        info: *mut ::std::os::raw::c_int,
        arg1: usize,
    );
    pub fn dpotri_(
        uplo: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        a: *mut f64,
        lda: *const ::std::os::raw::c_int,
        info: *mut ::std::os::raw::c_int,
        arg1: usize,
    );
    pub fn dpotrs_(
        uplo: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        nrhs: *const ::std::os::raw::c_int,
        a: *const f64,
        lda: *const ::std::os::raw::c_int,
        b: *mut f64,
        ldb: *const ::std::os::raw::c_int,
        info: *mut ::std::os::raw::c_int,
        arg1: usize,
    );
    pub fn dppcon_(
        uplo: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        ap: *const f64,
        anorm: *const f64,
        rcond: *mut f64,
        work: *mut f64,
        iwork: *mut ::std::os::raw::c_int,
        info: *mut ::std::os::raw::c_int,
        arg1: usize,
    );
    pub fn dppequ_(
        uplo: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        ap: *const f64,
        s: *mut f64,
        scond: *mut f64,
        amax: *mut f64,
        info: *mut ::std::os::raw::c_int,
        arg1: usize,
    );
    pub fn dpprfs_(
        uplo: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        nrhs: *const ::std::os::raw::c_int,
        ap: *const f64,
        afp: *const f64,
        b: *const f64,
        ldb: *const ::std::os::raw::c_int,
        x: *mut f64,
        ldx: *const ::std::os::raw::c_int,
        ferr: *mut f64,
        berr: *mut f64,
        work: *mut f64,
        iwork: *mut ::std::os::raw::c_int,
        info: *mut ::std::os::raw::c_int,
        arg1: usize,
    );
    pub fn dppsv_(
        uplo: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        nrhs: *const ::std::os::raw::c_int,
        ap: *const f64,
        b: *mut f64,
        ldb: *const ::std::os::raw::c_int,
        info: *mut ::std::os::raw::c_int,
        arg1: usize,
    );
    pub fn dppsvx_(
        fact: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        nrhs: *const ::std::os::raw::c_int,
        ap: *mut f64,
        afp: *mut f64,
        equed: *const ::std::os::raw::c_char,
        s: *mut f64,
        b: *mut f64,
        ldb: *const ::std::os::raw::c_int,
        x: *mut f64,
        ldx: *const ::std::os::raw::c_int,
        rcond: *mut f64,
        ferr: *mut f64,
        berr: *mut f64,
        work: *mut f64,
        iwork: *mut ::std::os::raw::c_int,
        info: *mut ::std::os::raw::c_int,
        arg1: usize,
        arg2: usize,
        arg3: usize,
    );
    pub fn dpptrf_(
        uplo: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        ap: *mut f64,
        info: *mut ::std::os::raw::c_int,
        arg1: usize,
    );
    pub fn dpptri_(
        uplo: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        ap: *mut f64,
        info: *mut ::std::os::raw::c_int,
        arg1: usize,
    );
    pub fn dpptrs_(
        uplo: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        nrhs: *const ::std::os::raw::c_int,
        ap: *const f64,
        b: *mut f64,
        ldb: *const ::std::os::raw::c_int,
        info: *mut ::std::os::raw::c_int,
        arg1: usize,
    );
    pub fn dptcon_(
        n: *const ::std::os::raw::c_int,
        d: *const f64,
        e: *const f64,
        anorm: *const f64,
        rcond: *mut f64,
        work: *mut f64,
        info: *mut ::std::os::raw::c_int,
    );
    pub fn dpteqr_(
        compz: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        d: *mut f64,
        e: *mut f64,
        z: *mut f64,
        ldz: *const ::std::os::raw::c_int,
        work: *mut f64,
        info: *mut ::std::os::raw::c_int,
        arg1: usize,
    );
    pub fn dptrfs_(
        n: *const ::std::os::raw::c_int,
        nrhs: *const ::std::os::raw::c_int,
        d: *const f64,
        e: *const f64,
        df: *const f64,
        ef: *const f64,
        b: *const f64,
        ldb: *const ::std::os::raw::c_int,
        x: *mut f64,
        ldx: *const ::std::os::raw::c_int,
        ferr: *mut f64,
        berr: *mut f64,
        work: *mut f64,
        info: *mut ::std::os::raw::c_int,
    );
    pub fn dptsv_(
        n: *const ::std::os::raw::c_int,
        nrhs: *const ::std::os::raw::c_int,
        d: *mut f64,
        e: *mut f64,
        b: *mut f64,
        ldb: *const ::std::os::raw::c_int,
        info: *mut ::std::os::raw::c_int,
    );
    pub fn dptsvx_(
        fact: *const ::std::os::raw::c_int,
        n: *const ::std::os::raw::c_int,
        nrhs: *const ::std::os::raw::c_int,
        d: *const f64,
        e: *const f64,
        df: *mut f64,
        ef: *mut f64,
        b: *const f64,
        ldb: *const ::std::os::raw::c_int,
        x: *mut f64,
        ldx: *const ::std::os::raw::c_int,
        rcond: *mut f64,
        ferr: *mut f64,
        berr: *mut f64,
        work: *mut f64,
        info: *mut ::std::os::raw::c_int,
    );
    pub fn dpttrf_(
        n: *const ::std::os::raw::c_int,
        d: *mut f64,
        e: *mut f64,
        info: *mut ::std::os::raw::c_int,
    );
    pub fn dpttrs_(
        n: *const ::std::os::raw::c_int,
        nrhs: *const ::std::os::raw::c_int,
        d: *const f64,
        e: *const f64,
        b: *mut f64,
        ldb: *const ::std::os::raw::c_int,
        info: *mut ::std::os::raw::c_int,
    );
    pub fn drscl_(
        n: *const ::std::os::raw::c_int,
        da: *const f64,
        x: *mut f64,
        incx: *const ::std::os::raw::c_int,
    );
    pub fn dsbev_(
        jobz: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        kd: *const ::std::os::raw::c_int,
        ab: *mut f64,
        ldab: *const ::std::os::raw::c_int,
        w: *mut f64,
        z: *mut f64,
        ldz: *const ::std::os::raw::c_int,
        work: *mut f64,
        info: *mut ::std::os::raw::c_int,
        arg1: usize,
        arg2: usize,
    );
    pub fn dsbevd_(
        jobz: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        kd: *const ::std::os::raw::c_int,
        ab: *mut f64,
        ldab: *const ::std::os::raw::c_int,
        w: *mut f64,
        z: *mut f64,
        ldz: *const ::std::os::raw::c_int,
        work: *mut f64,
        lwork: *const ::std::os::raw::c_int,
        iwork: *mut ::std::os::raw::c_int,
        liwork: *const ::std::os::raw::c_int,
        info: *mut ::std::os::raw::c_int,
        arg1: usize,
        arg2: usize,
    );
    pub fn dsbevx_(
        jobz: *const ::std::os::raw::c_char,
        range: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        kd: *const ::std::os::raw::c_int,
        ab: *mut f64,
        ldab: *const ::std::os::raw::c_int,
        q: *mut f64,
        ldq: *const ::std::os::raw::c_int,
        vl: *const f64,
        vu: *const f64,
        il: *const ::std::os::raw::c_int,
        iu: *const ::std::os::raw::c_int,
        abstol: *const f64,
        m: *mut ::std::os::raw::c_int,
        w: *mut f64,
        z: *mut f64,
        ldz: *const ::std::os::raw::c_int,
        work: *mut f64,
        iwork: *mut ::std::os::raw::c_int,
        ifail: *mut ::std::os::raw::c_int,
        info: *mut ::std::os::raw::c_int,
        arg1: usize,
        arg2: usize,
        arg3: usize,
    );
    pub fn dsbgst_(
        vect: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        ka: *const ::std::os::raw::c_int,
        kb: *const ::std::os::raw::c_int,
        ab: *mut f64,
        ldab: *const ::std::os::raw::c_int,
        bb: *mut f64,
        ldbb: *const ::std::os::raw::c_int,
        x: *mut f64,
        ldx: *const ::std::os::raw::c_int,
        work: *mut f64,
        info: *mut ::std::os::raw::c_int,
        arg1: usize,
        arg2: usize,
    );
    pub fn dsbgv_(
        jobz: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        ka: *const ::std::os::raw::c_int,
        kb: *const ::std::os::raw::c_int,
        ab: *mut f64,
        ldab: *const ::std::os::raw::c_int,
        bb: *mut f64,
        ldbb: *const ::std::os::raw::c_int,
        w: *mut f64,
        z: *mut f64,
        ldz: *const ::std::os::raw::c_int,
        work: *mut f64,
        info: *mut ::std::os::raw::c_int,
        arg1: usize,
        arg2: usize,
    );
    pub fn dsbtrd_(
        vect: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        kd: *const ::std::os::raw::c_int,
        ab: *mut f64,
        ldab: *const ::std::os::raw::c_int,
        d: *mut f64,
        e: *mut f64,
        q: *mut f64,
        ldq: *const ::std::os::raw::c_int,
        work: *mut f64,
        info: *mut ::std::os::raw::c_int,
        arg1: usize,
        arg2: usize,
    );
    pub fn dspcon_(
        uplo: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        ap: *const f64,
        ipiv: *const ::std::os::raw::c_int,
        anorm: *const f64,
        rcond: *mut f64,
        work: *mut f64,
        iwork: *mut ::std::os::raw::c_int,
        info: *mut ::std::os::raw::c_int,
        arg1: usize,
    );
    pub fn dspev_(
        jobz: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        ap: *mut f64,
        w: *mut f64,
        z: *mut f64,
        ldz: *const ::std::os::raw::c_int,
        work: *mut f64,
        info: *mut ::std::os::raw::c_int,
        arg1: usize,
        arg2: usize,
    );
    pub fn dspevd_(
        jobz: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        ap: *mut f64,
        w: *mut f64,
        z: *mut f64,
        ldz: *const ::std::os::raw::c_int,
        work: *mut f64,
        lwork: *const ::std::os::raw::c_int,
        iwork: *mut ::std::os::raw::c_int,
        liwork: *const ::std::os::raw::c_int,
        info: *mut ::std::os::raw::c_int,
        arg1: usize,
        arg2: usize,
    );
    pub fn dspevx_(
        jobz: *const ::std::os::raw::c_char,
        range: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        ap: *mut f64,
        vl: *const f64,
        vu: *const f64,
        il: *const ::std::os::raw::c_int,
        iu: *const ::std::os::raw::c_int,
        abstol: *const f64,
        m: *mut ::std::os::raw::c_int,
        w: *mut f64,
        z: *mut f64,
        ldz: *const ::std::os::raw::c_int,
        work: *mut f64,
        iwork: *mut ::std::os::raw::c_int,
        ifail: *mut ::std::os::raw::c_int,
        info: *mut ::std::os::raw::c_int,
        arg1: usize,
        arg2: usize,
        arg3: usize,
    );
    pub fn dspgst_(
        itype: *const ::std::os::raw::c_int,
        uplo: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        ap: *mut f64,
        bp: *mut f64,
        info: *mut ::std::os::raw::c_int,
        arg1: usize,
    );
    pub fn dspgv_(
        itype: *const ::std::os::raw::c_int,
        jobz: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        ap: *mut f64,
        bp: *mut f64,
        w: *mut f64,
        z: *mut f64,
        ldz: *const ::std::os::raw::c_int,
        work: *mut f64,
        info: *mut ::std::os::raw::c_int,
        arg1: usize,
        arg2: usize,
        arg3: usize,
    );
    pub fn dsprfs_(
        uplo: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        nrhs: *const ::std::os::raw::c_int,
        ap: *const f64,
        afp: *const f64,
        ipiv: *const ::std::os::raw::c_int,
        b: *const f64,
        ldb: *const ::std::os::raw::c_int,
        x: *mut f64,
        ldx: *const ::std::os::raw::c_int,
        ferr: *mut f64,
        berr: *mut f64,
        work: *mut f64,
        iwork: *mut ::std::os::raw::c_int,
        info: *mut ::std::os::raw::c_int,
        arg1: usize,
    );
    pub fn dspsv_(
        uplo: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        nrhs: *const ::std::os::raw::c_int,
        ap: *mut f64,
        ipiv: *mut ::std::os::raw::c_int,
        b: *mut f64,
        ldb: *const ::std::os::raw::c_int,
        info: *mut ::std::os::raw::c_int,
        arg1: usize,
    );
    pub fn dspsvx_(
        fact: *const ::std::os::raw::c_int,
        uplo: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        nrhs: *const ::std::os::raw::c_int,
        ap: *const f64,
        afp: *mut f64,
        ipiv: *mut ::std::os::raw::c_int,
        b: *const f64,
        ldb: *const ::std::os::raw::c_int,
        x: *mut f64,
        ldx: *const ::std::os::raw::c_int,
        rcond: *mut f64,
        ferr: *mut f64,
        berr: *mut f64,
        work: *mut f64,
        iwork: *mut ::std::os::raw::c_int,
        info: *mut ::std::os::raw::c_int,
        arg1: usize,
    );
    pub fn dsptrd_(
        uplo: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        ap: *mut f64,
        d: *mut f64,
        e: *mut f64,
        tau: *mut f64,
        info: *mut ::std::os::raw::c_int,
        arg1: usize,
    );
    pub fn dsptrf_(
        uplo: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        ap: *mut f64,
        ipiv: *mut ::std::os::raw::c_int,
        info: *mut ::std::os::raw::c_int,
        arg1: usize,
    );
    pub fn dsptri_(
        uplo: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        ap: *mut f64,
        ipiv: *const ::std::os::raw::c_int,
        work: *mut f64,
        info: *mut ::std::os::raw::c_int,
        arg1: usize,
    );
    pub fn dsptrs_(
        uplo: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        nrhs: *const ::std::os::raw::c_int,
        ap: *const f64,
        ipiv: *const ::std::os::raw::c_int,
        b: *mut f64,
        ldb: *const ::std::os::raw::c_int,
        info: *mut ::std::os::raw::c_int,
        arg1: usize,
    );
    pub fn dstebz_(
        range: *const ::std::os::raw::c_char,
        order: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        vl: *const f64,
        vu: *const f64,
        il: *const ::std::os::raw::c_int,
        iu: *const ::std::os::raw::c_int,
        abstol: *const f64,
        d: *const f64,
        e: *const f64,
        m: *mut ::std::os::raw::c_int,
        nsplit: *mut ::std::os::raw::c_int,
        w: *mut f64,
        iblock: *mut ::std::os::raw::c_int,
        isplit: *mut ::std::os::raw::c_int,
        work: *mut f64,
        iwork: *mut ::std::os::raw::c_int,
        info: *mut ::std::os::raw::c_int,
        arg1: usize,
        arg2: usize,
    );
    pub fn dstedc_(
        compz: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        d: *mut f64,
        e: *mut f64,
        z: *mut f64,
        ldz: *const ::std::os::raw::c_int,
        work: *mut f64,
        lwork: *const ::std::os::raw::c_int,
        iwork: *mut ::std::os::raw::c_int,
        liwork: *const ::std::os::raw::c_int,
        info: *mut ::std::os::raw::c_int,
        arg1: usize,
    );
    pub fn dstein_(
        n: *const ::std::os::raw::c_int,
        d: *const f64,
        e: *const f64,
        m: *const ::std::os::raw::c_int,
        w: *const f64,
        iblock: *const ::std::os::raw::c_int,
        isplit: *const ::std::os::raw::c_int,
        z: *mut f64,
        ldz: *const ::std::os::raw::c_int,
        work: *mut f64,
        iwork: *mut ::std::os::raw::c_int,
        ifail: *mut ::std::os::raw::c_int,
        info: *mut ::std::os::raw::c_int,
    );
    pub fn dsteqr_(
        compz: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        d: *mut f64,
        e: *mut f64,
        z: *mut f64,
        ldz: *const ::std::os::raw::c_int,
        work: *mut f64,
        info: *mut ::std::os::raw::c_int,
        arg1: usize,
    );
    pub fn dsterf_(
        n: *const ::std::os::raw::c_int,
        d: *mut f64,
        e: *mut f64,
        info: *mut ::std::os::raw::c_int,
    );
    pub fn dstev_(
        jobz: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        d: *mut f64,
        e: *mut f64,
        z: *mut f64,
        ldz: *const ::std::os::raw::c_int,
        work: *mut f64,
        info: *mut ::std::os::raw::c_int,
        arg1: usize,
    );
    pub fn dstevd_(
        jobz: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        d: *mut f64,
        e: *mut f64,
        z: *mut f64,
        ldz: *const ::std::os::raw::c_int,
        work: *mut f64,
        lwork: *const ::std::os::raw::c_int,
        iwork: *mut ::std::os::raw::c_int,
        liwork: *const ::std::os::raw::c_int,
        info: *mut ::std::os::raw::c_int,
        arg1: usize,
    );
    pub fn dstevx_(
        jobz: *const ::std::os::raw::c_char,
        range: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        d: *mut f64,
        e: *mut f64,
        vl: *const f64,
        vu: *const f64,
        il: *const ::std::os::raw::c_int,
        iu: *const ::std::os::raw::c_int,
        abstol: *const f64,
        m: *mut ::std::os::raw::c_int,
        w: *mut f64,
        z: *mut f64,
        ldz: *const ::std::os::raw::c_int,
        work: *mut f64,
        iwork: *mut ::std::os::raw::c_int,
        ifail: *mut ::std::os::raw::c_int,
        info: *mut ::std::os::raw::c_int,
        arg1: usize,
        arg2: usize,
    );
    pub fn dsycon_(
        uplo: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        a: *const f64,
        lda: *const ::std::os::raw::c_int,
        ipiv: *const ::std::os::raw::c_int,
        anorm: *const f64,
        rcond: *mut f64,
        work: *mut f64,
        iwork: *mut ::std::os::raw::c_int,
        info: *mut ::std::os::raw::c_int,
        arg1: usize,
    );
    pub fn dsyev_(
        jobz: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        a: *mut f64,
        lda: *const ::std::os::raw::c_int,
        w: *mut f64,
        work: *mut f64,
        lwork: *const ::std::os::raw::c_int,
        info: *mut ::std::os::raw::c_int,
        arg1: usize,
        arg2: usize,
    );
    pub fn dsyevd_(
        jobz: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        a: *mut f64,
        lda: *const ::std::os::raw::c_int,
        w: *mut f64,
        work: *mut f64,
        lwork: *const ::std::os::raw::c_int,
        iwork: *mut ::std::os::raw::c_int,
        liwork: *const ::std::os::raw::c_int,
        info: *mut ::std::os::raw::c_int,
        arg1: usize,
        arg2: usize,
    );
    pub fn dsyevx_(
        jobz: *const ::std::os::raw::c_char,
        range: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        a: *mut f64,
        lda: *const ::std::os::raw::c_int,
        vl: *const f64,
        vu: *const f64,
        il: *const ::std::os::raw::c_int,
        iu: *const ::std::os::raw::c_int,
        abstol: *const f64,
        m: *mut ::std::os::raw::c_int,
        w: *mut f64,
        z: *mut f64,
        ldz: *const ::std::os::raw::c_int,
        work: *mut f64,
        lwork: *const ::std::os::raw::c_int,
        iwork: *mut ::std::os::raw::c_int,
        ifail: *mut ::std::os::raw::c_int,
        info: *mut ::std::os::raw::c_int,
        arg1: usize,
        arg2: usize,
        arg3: usize,
    );
    pub fn dsyevr_(
        jobz: *const ::std::os::raw::c_char,
        range: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        a: *mut f64,
        lda: *const ::std::os::raw::c_int,
        vl: *const f64,
        vu: *const f64,
        il: *const ::std::os::raw::c_int,
        iu: *const ::std::os::raw::c_int,
        abstol: *const f64,
        m: *mut ::std::os::raw::c_int,
        w: *mut f64,
        z: *mut f64,
        ldz: *const ::std::os::raw::c_int,
        isuppz: *mut ::std::os::raw::c_int,
        work: *mut f64,
        lwork: *const ::std::os::raw::c_int,
        iwork: *mut ::std::os::raw::c_int,
        liwork: *const ::std::os::raw::c_int,
        info: *mut ::std::os::raw::c_int,
        arg1: usize,
        arg2: usize,
        arg3: usize,
    );
    pub fn dsygs2_(
        itype: *const ::std::os::raw::c_int,
        uplo: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        a: *mut f64,
        lda: *const ::std::os::raw::c_int,
        b: *const f64,
        ldb: *const ::std::os::raw::c_int,
        info: *mut ::std::os::raw::c_int,
        arg1: usize,
    );
    pub fn dsygst_(
        itype: *const ::std::os::raw::c_int,
        uplo: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        a: *mut f64,
        lda: *const ::std::os::raw::c_int,
        b: *const f64,
        ldb: *const ::std::os::raw::c_int,
        info: *mut ::std::os::raw::c_int,
        arg1: usize,
    );
    pub fn dsygv_(
        itype: *const ::std::os::raw::c_int,
        jobz: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        a: *mut f64,
        lda: *const ::std::os::raw::c_int,
        b: *mut f64,
        ldb: *const ::std::os::raw::c_int,
        w: *mut f64,
        work: *mut f64,
        lwork: *const ::std::os::raw::c_int,
        info: *mut *mut ::std::os::raw::c_int,
        arg1: usize,
        arg2: usize,
    );
    pub fn dsyrfs_(
        uplo: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        nrhs: *const ::std::os::raw::c_int,
        a: *const f64,
        lda: *const ::std::os::raw::c_int,
        af: *const f64,
        ldaf: *const ::std::os::raw::c_int,
        ipiv: *const ::std::os::raw::c_int,
        b: *const f64,
        ldb: *const ::std::os::raw::c_int,
        x: *mut f64,
        ldx: *const ::std::os::raw::c_int,
        ferr: *mut f64,
        berr: *mut f64,
        work: *mut f64,
        iwork: *mut ::std::os::raw::c_int,
        info: *mut ::std::os::raw::c_int,
        arg1: usize,
    );
    pub fn dsysv_(
        uplo: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        nrhs: *const ::std::os::raw::c_int,
        a: *mut f64,
        lda: *const ::std::os::raw::c_int,
        ipiv: *mut ::std::os::raw::c_int,
        b: *mut f64,
        ldb: *const ::std::os::raw::c_int,
        work: *mut f64,
        lwork: *const ::std::os::raw::c_int,
        info: *mut ::std::os::raw::c_int,
        arg1: usize,
    );
    pub fn dsysvx_(
        fact: *const ::std::os::raw::c_int,
        uplo: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        nrhs: *const ::std::os::raw::c_int,
        a: *const f64,
        lda: *const ::std::os::raw::c_int,
        af: *mut f64,
        ldaf: *const ::std::os::raw::c_int,
        ipiv: *mut ::std::os::raw::c_int,
        b: *const f64,
        ldb: *const ::std::os::raw::c_int,
        x: *mut f64,
        ldx: *const ::std::os::raw::c_int,
        rcond: *mut f64,
        ferr: *mut f64,
        berr: *mut f64,
        work: *mut f64,
        lwork: *const ::std::os::raw::c_int,
        iwork: *mut ::std::os::raw::c_int,
        info: *mut ::std::os::raw::c_int,
        arg1: usize,
    );
    pub fn dsytd2_(
        uplo: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        a: *mut f64,
        lda: *const ::std::os::raw::c_int,
        d: *mut f64,
        e: *mut f64,
        tau: *mut f64,
        info: *mut ::std::os::raw::c_int,
        arg1: usize,
    );
    pub fn dsytf2_(
        uplo: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        a: *mut f64,
        lda: *const ::std::os::raw::c_int,
        ipiv: *mut ::std::os::raw::c_int,
        info: *mut ::std::os::raw::c_int,
        arg1: usize,
    );
    pub fn dsytrd_(
        uplo: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        a: *mut f64,
        lda: *const ::std::os::raw::c_int,
        d: *mut f64,
        e: *mut f64,
        tau: *mut f64,
        work: *mut f64,
        lwork: *const ::std::os::raw::c_int,
        info: *mut ::std::os::raw::c_int,
        arg1: usize,
    );
    pub fn dsytrf_(
        uplo: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        a: *mut f64,
        lda: *const ::std::os::raw::c_int,
        ipiv: *mut ::std::os::raw::c_int,
        work: *mut f64,
        lwork: *const ::std::os::raw::c_int,
        info: *mut ::std::os::raw::c_int,
        arg1: usize,
    );
    pub fn dsytri_(
        uplo: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        a: *mut f64,
        lda: *const ::std::os::raw::c_int,
        ipiv: *const ::std::os::raw::c_int,
        work: *mut f64,
        info: *mut ::std::os::raw::c_int,
        arg1: usize,
    );
    pub fn dsytrs_(
        uplo: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        nrhs: *const ::std::os::raw::c_int,
        a: *const f64,
        lda: *const ::std::os::raw::c_int,
        ipiv: *const ::std::os::raw::c_int,
        b: *mut f64,
        ldb: *const ::std::os::raw::c_int,
        info: *mut ::std::os::raw::c_int,
        arg1: usize,
    );
    pub fn dtbcon_(
        norm: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        diag: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        kd: *const ::std::os::raw::c_int,
        ab: *const f64,
        ldab: *const ::std::os::raw::c_int,
        rcond: *mut f64,
        work: *mut f64,
        iwork: *mut ::std::os::raw::c_int,
        info: *mut ::std::os::raw::c_int,
        arg1: usize,
        arg2: usize,
        arg3: usize,
    );
    pub fn dtbrfs_(
        uplo: *const ::std::os::raw::c_char,
        trans: *const ::std::os::raw::c_char,
        diag: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        kd: *const ::std::os::raw::c_int,
        nrhs: *const ::std::os::raw::c_int,
        ab: *const f64,
        ldab: *const ::std::os::raw::c_int,
        b: *const f64,
        ldb: *const ::std::os::raw::c_int,
        x: *mut f64,
        ldx: *const ::std::os::raw::c_int,
        ferr: *mut f64,
        berr: *mut f64,
        work: *mut f64,
        iwork: *mut ::std::os::raw::c_int,
        info: *mut ::std::os::raw::c_int,
        arg1: usize,
        arg2: usize,
        arg3: usize,
    );
    pub fn dtbtrs_(
        uplo: *const ::std::os::raw::c_char,
        trans: *const ::std::os::raw::c_char,
        diag: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        kd: *const ::std::os::raw::c_int,
        nrhs: *const ::std::os::raw::c_int,
        ab: *const f64,
        ldab: *const ::std::os::raw::c_int,
        b: *mut f64,
        ldb: *const ::std::os::raw::c_int,
        info: *mut ::std::os::raw::c_int,
        arg1: usize,
        arg2: usize,
        arg3: usize,
    );
    pub fn dtgevc_(
        side: *const ::std::os::raw::c_char,
        howmny: *const ::std::os::raw::c_char,
        select: *const ::std::os::raw::c_int,
        n: *const ::std::os::raw::c_int,
        a: *const f64,
        lda: *const ::std::os::raw::c_int,
        b: *const f64,
        ldb: *const ::std::os::raw::c_int,
        vl: *mut f64,
        ldvl: *const ::std::os::raw::c_int,
        vr: *mut f64,
        ldvr: *const ::std::os::raw::c_int,
        mm: *const ::std::os::raw::c_int,
        m: *mut ::std::os::raw::c_int,
        work: *mut f64,
        info: *mut ::std::os::raw::c_int,
        arg1: usize,
        arg2: usize,
    );
    pub fn dtgsja_(
        jobu: *const ::std::os::raw::c_char,
        jobv: *const ::std::os::raw::c_char,
        jobq: *const ::std::os::raw::c_char,
        m: *const ::std::os::raw::c_int,
        p: *const ::std::os::raw::c_int,
        n: *const ::std::os::raw::c_int,
        k: *const ::std::os::raw::c_int,
        l: *const ::std::os::raw::c_int,
        a: *mut f64,
        lda: *const ::std::os::raw::c_int,
        b: *mut f64,
        ldb: *const ::std::os::raw::c_int,
        tola: *const f64,
        tolb: *const f64,
        alpha: *mut f64,
        beta: *mut f64,
        u: *mut f64,
        ldu: *const ::std::os::raw::c_int,
        v: *mut f64,
        ldv: *const ::std::os::raw::c_int,
        q: *mut f64,
        ldq: *const ::std::os::raw::c_int,
        work: *mut f64,
        ncycle: *mut ::std::os::raw::c_int,
        info: *mut ::std::os::raw::c_int,
        arg1: usize,
        arg2: usize,
        arg3: usize,
    );
    pub fn dtpcon_(
        norm: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        diag: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        ap: *const f64,
        rcond: *mut f64,
        work: *mut f64,
        iwork: *mut ::std::os::raw::c_int,
        info: *mut ::std::os::raw::c_int,
        arg1: usize,
        arg2: usize,
        arg3: usize,
    );
    pub fn dtprfs_(
        uplo: *const ::std::os::raw::c_char,
        trans: *const ::std::os::raw::c_char,
        diag: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        nrhs: *const ::std::os::raw::c_int,
        ap: *const f64,
        b: *const f64,
        ldb: *const ::std::os::raw::c_int,
        x: *mut f64,
        ldx: *const ::std::os::raw::c_int,
        ferr: *mut f64,
        berr: *mut f64,
        work: *mut f64,
        iwork: *mut ::std::os::raw::c_int,
        info: *mut ::std::os::raw::c_int,
        arg1: usize,
        arg2: usize,
        arg3: usize,
    );
    pub fn dtptri_(
        uplo: *const ::std::os::raw::c_char,
        diag: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        ap: *mut f64,
        info: *mut ::std::os::raw::c_int,
        arg1: usize,
        arg2: usize,
    );
    pub fn dtptrs_(
        uplo: *const ::std::os::raw::c_char,
        trans: *const ::std::os::raw::c_char,
        diag: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        nrhs: *const ::std::os::raw::c_int,
        ap: *const f64,
        b: *mut f64,
        ldb: *const ::std::os::raw::c_int,
        info: *mut ::std::os::raw::c_int,
        arg1: usize,
        arg2: usize,
    );
    pub fn dtrcon_(
        norm: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        diag: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        a: *const f64,
        lda: *const ::std::os::raw::c_int,
        rcond: *mut f64,
        work: *mut f64,
        iwork: *mut ::std::os::raw::c_int,
        info: *mut ::std::os::raw::c_int,
        arg1: usize,
        arg2: usize,
        arg3: usize,
    );
    pub fn dtrevc_(
        side: *const ::std::os::raw::c_char,
        howmny: *const ::std::os::raw::c_char,
        select: *const ::std::os::raw::c_int,
        n: *const ::std::os::raw::c_int,
        t: *const f64,
        ldt: *const ::std::os::raw::c_int,
        vl: *mut f64,
        ldvl: *const ::std::os::raw::c_int,
        vr: *mut f64,
        ldvr: *const ::std::os::raw::c_int,
        mm: *const ::std::os::raw::c_int,
        m: *mut ::std::os::raw::c_int,
        work: *mut f64,
        info: *mut ::std::os::raw::c_int,
        arg1: usize,
        arg2: usize,
    );
    pub fn dtrexc_(
        compq: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        t: *mut f64,
        ldt: *const ::std::os::raw::c_int,
        q: *mut f64,
        ldq: *const ::std::os::raw::c_int,
        ifst: *mut ::std::os::raw::c_int,
        ILST: *mut ::std::os::raw::c_int,
        work: *mut f64,
        info: *mut ::std::os::raw::c_int,
        arg1: usize,
    );
    pub fn dtrrfs_(
        uplo: *const ::std::os::raw::c_char,
        trans: *const ::std::os::raw::c_char,
        diag: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        nrhs: *const ::std::os::raw::c_int,
        a: *const f64,
        lda: *const ::std::os::raw::c_int,
        b: *const f64,
        ldb: *const ::std::os::raw::c_int,
        x: *mut f64,
        ldx: *const ::std::os::raw::c_int,
        ferr: *mut f64,
        berr: *mut f64,
        work: *mut f64,
        iwork: *mut ::std::os::raw::c_int,
        info: *mut ::std::os::raw::c_int,
        arg1: usize,
        arg2: usize,
        arg3: usize,
    );
    pub fn dtrsen_(
        job: *const ::std::os::raw::c_char,
        compq: *const ::std::os::raw::c_char,
        select: *const ::std::os::raw::c_int,
        n: *const ::std::os::raw::c_int,
        t: *mut f64,
        ldt: *const ::std::os::raw::c_int,
        q: *mut f64,
        ldq: *const ::std::os::raw::c_int,
        wr: *mut f64,
        wi: *mut f64,
        m: *mut ::std::os::raw::c_int,
        s: *mut f64,
        sep: *mut f64,
        work: *mut f64,
        lwork: *const ::std::os::raw::c_int,
        iwork: *mut ::std::os::raw::c_int,
        liwork: *const ::std::os::raw::c_int,
        info: *mut ::std::os::raw::c_int,
        arg1: usize,
        arg2: usize,
    );
    pub fn dtrsna_(
        job: *const ::std::os::raw::c_char,
        howmny: *const ::std::os::raw::c_char,
        select: *const ::std::os::raw::c_int,
        n: *const ::std::os::raw::c_int,
        t: *const f64,
        ldt: *const ::std::os::raw::c_int,
        vl: *const f64,
        ldvl: *const ::std::os::raw::c_int,
        vr: *const f64,
        ldvr: *const ::std::os::raw::c_int,
        s: *mut f64,
        sep: *mut f64,
        mm: *const ::std::os::raw::c_int,
        m: *mut ::std::os::raw::c_int,
        work: *mut f64,
        lwork: *const ::std::os::raw::c_int,
        iwork: *mut ::std::os::raw::c_int,
        info: *mut ::std::os::raw::c_int,
        arg1: usize,
        arg2: usize,
    );
    pub fn dtrsyl_(
        trana: *const ::std::os::raw::c_char,
        tranb: *const ::std::os::raw::c_char,
        isgn: *const ::std::os::raw::c_int,
        m: *const ::std::os::raw::c_int,
        n: *const ::std::os::raw::c_int,
        a: *const f64,
        lda: *const ::std::os::raw::c_int,
        b: *const f64,
        ldb: *const ::std::os::raw::c_int,
        c: *mut f64,
        ldc: *const ::std::os::raw::c_int,
        scale: *mut f64,
        info: *mut ::std::os::raw::c_int,
        arg1: usize,
        arg2: usize,
    );
    pub fn dtrti2_(
        uplo: *const ::std::os::raw::c_char,
        diag: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        a: *mut f64,
        lda: *const ::std::os::raw::c_int,
        info: *mut ::std::os::raw::c_int,
        arg1: usize,
        arg2: usize,
    );
    pub fn dtrtri_(
        uplo: *const ::std::os::raw::c_char,
        diag: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        a: *mut f64,
        lda: *const ::std::os::raw::c_int,
        info: *mut ::std::os::raw::c_int,
        arg1: usize,
        arg2: usize,
    );
    pub fn dtrtrs_(
        uplo: *const ::std::os::raw::c_char,
        trans: *const ::std::os::raw::c_char,
        diag: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        nrhs: *const ::std::os::raw::c_int,
        a: *const f64,
        lda: *const ::std::os::raw::c_int,
        b: *mut f64,
        ldb: *const ::std::os::raw::c_int,
        info: *mut ::std::os::raw::c_int,
        arg1: usize,
        arg2: usize,
        arg3: usize,
    );
    pub fn dhgeqz_(
        job: *const ::std::os::raw::c_char,
        compq: *const ::std::os::raw::c_char,
        compz: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        ILO: *const ::std::os::raw::c_int,
        IHI: *const ::std::os::raw::c_int,
        a: *mut f64,
        lda: *const ::std::os::raw::c_int,
        b: *mut f64,
        ldb: *const ::std::os::raw::c_int,
        alphar: *mut f64,
        alphai: *mut f64,
        beta: *const f64,
        q: *mut f64,
        ldq: *const ::std::os::raw::c_int,
        z: *mut f64,
        ldz: *const ::std::os::raw::c_int,
        work: *mut f64,
        lwork: *const ::std::os::raw::c_int,
        info: *mut ::std::os::raw::c_int,
        arg1: usize,
        arg2: usize,
        arg3: usize,
    );
    pub fn dhsein_(
        side: *const ::std::os::raw::c_char,
        eigsrc: *const ::std::os::raw::c_char,
        initv: *const ::std::os::raw::c_char,
        select: *mut ::std::os::raw::c_int,
        n: *const ::std::os::raw::c_int,
        h: *mut f64,
        ldh: *const ::std::os::raw::c_int,
        wr: *mut f64,
        wi: *mut f64,
        vl: *mut f64,
        ldvl: *const ::std::os::raw::c_int,
        vr: *mut f64,
        ldvr: *const ::std::os::raw::c_int,
        mm: *const ::std::os::raw::c_int,
        m: *mut ::std::os::raw::c_int,
        work: *mut f64,
        ifaill: *mut ::std::os::raw::c_int,
        ifailr: *mut ::std::os::raw::c_int,
        info: *mut ::std::os::raw::c_int,
        arg1: usize,
        arg2: usize,
        arg3: usize,
    );
    pub fn dhseqr_(
        job: *const ::std::os::raw::c_char,
        compz: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        ilo: *const ::std::os::raw::c_int,
        ihi: *const ::std::os::raw::c_int,
        h: *mut f64,
        ldh: *const ::std::os::raw::c_int,
        wr: *mut f64,
        wi: *mut f64,
        z: *mut f64,
        ldz: *const ::std::os::raw::c_int,
        work: *mut f64,
        lwork: *const ::std::os::raw::c_int,
        info: *mut ::std::os::raw::c_int,
        arg1: usize,
        arg2: usize,
    );
    pub fn dlabad_(small: *mut f64, large: *mut f64);
    pub fn dlabrd_(
        m: *const ::std::os::raw::c_int,
        n: *const ::std::os::raw::c_int,
        nb: *const ::std::os::raw::c_int,
        a: *mut f64,
        lda: *const ::std::os::raw::c_int,
        d: *mut f64,
        e: *mut f64,
        tauq: *mut f64,
        taup: *mut f64,
        x: *mut f64,
        ldx: *const ::std::os::raw::c_int,
        y: *mut f64,
        ldy: *const ::std::os::raw::c_int,
    );
    pub fn dlacon_(
        n: *const ::std::os::raw::c_int,
        v: *mut f64,
        x: *mut f64,
        isgn: *mut ::std::os::raw::c_int,
        est: *mut f64,
        kase: *mut ::std::os::raw::c_int,
    );
    pub fn dlacpy_(
        uplo: *const ::std::os::raw::c_char,
        m: *const ::std::os::raw::c_int,
        n: *const ::std::os::raw::c_int,
        a: *const f64,
        lda: *const ::std::os::raw::c_int,
        b: *mut f64,
        ldb: *const ::std::os::raw::c_int,
        arg1: usize,
    );
    pub fn dladiv_(
        a: *const f64,
        b: *const f64,
        c: *const f64,
        d: *const f64,
        p: *mut f64,
        q: *mut f64,
    );
    pub fn dlae2_(a: *const f64, b: *const f64, c: *const f64, rt1: *mut f64, rt2: *mut f64);
    pub fn dlaebz_(
        ijob: *const ::std::os::raw::c_int,
        nitmax: *const ::std::os::raw::c_int,
        n: *const ::std::os::raw::c_int,
        mmax: *const ::std::os::raw::c_int,
        minp: *const ::std::os::raw::c_int,
        nbmin: *const ::std::os::raw::c_int,
        abstol: *const f64,
        reltol: *const f64,
        pivmin: *const f64,
        d: *mut f64,
        e: *mut f64,
        e2: *mut f64,
        nval: *mut ::std::os::raw::c_int,
        ab: *mut f64,
        c: *mut f64,
        mout: *mut ::std::os::raw::c_int,
        nab: *mut ::std::os::raw::c_int,
        work: *mut f64,
        iwork: *mut ::std::os::raw::c_int,
        info: *mut ::std::os::raw::c_int,
    );
    pub fn dlaed0_(
        icompq: *const ::std::os::raw::c_int,
        qsiz: *const ::std::os::raw::c_int,
        n: *const ::std::os::raw::c_int,
        d: *mut f64,
        e: *mut f64,
        q: *mut f64,
        ldq: *const ::std::os::raw::c_int,
        qstore: *mut f64,
        ldqs: *const ::std::os::raw::c_int,
        work: *mut f64,
        iwork: *mut ::std::os::raw::c_int,
        info: *mut ::std::os::raw::c_int,
    );
    pub fn dlaed1_(
        n: *const ::std::os::raw::c_int,
        d: *mut f64,
        q: *mut f64,
        ldq: *const ::std::os::raw::c_int,
        indxq: *mut ::std::os::raw::c_int,
        rho: *const f64,
        cutpnt: *const ::std::os::raw::c_int,
        work: *mut f64,
        iwork: *mut ::std::os::raw::c_int,
        info: *mut ::std::os::raw::c_int,
    );
    pub fn dlaed2_(
        k: *const ::std::os::raw::c_int,
        n: *const ::std::os::raw::c_int,
        d: *mut f64,
        q: *mut f64,
        ldq: *const ::std::os::raw::c_int,
        indxq: *mut ::std::os::raw::c_int,
        rho: *mut f64,
        z: *mut f64,
        dlamda: *mut f64,
        w: *mut f64,
        q2: *mut f64,
        indx: *mut ::std::os::raw::c_int,
        indxc: *mut ::std::os::raw::c_int,
        indxp: *mut ::std::os::raw::c_int,
        coltyp: *mut ::std::os::raw::c_int,
        info: *mut ::std::os::raw::c_int,
    );
    pub fn dlaed3_(
        k: *const ::std::os::raw::c_int,
        n: *const ::std::os::raw::c_int,
        n1: *const ::std::os::raw::c_int,
        d: *mut f64,
        q: *mut f64,
        ldq: *const ::std::os::raw::c_int,
        rho: *const f64,
        dlamda: *mut f64,
        q2: *mut f64,
        indx: *mut ::std::os::raw::c_int,
        ctot: *mut ::std::os::raw::c_int,
        w: *mut f64,
        s: *mut f64,
        info: *mut ::std::os::raw::c_int,
    );
    pub fn dlaed4_(
        n: *const ::std::os::raw::c_int,
        i: *const ::std::os::raw::c_int,
        d: *const f64,
        z: *const f64,
        delta: *const f64,
        rho: *const f64,
        dlam: *mut f64,
        info: *mut ::std::os::raw::c_int,
    );
    pub fn dlaed5_(
        i: *const ::std::os::raw::c_int,
        d: *const f64,
        z: *const f64,
        delta: *mut f64,
        rho: *const f64,
        dlam: *mut f64,
    );
    pub fn dlaed6_(
        kniter: *const ::std::os::raw::c_int,
        orgati: *const ::std::os::raw::c_int,
        rho: *const f64,
        d: *const f64,
        z: *const f64,
        finit: *const f64,
        tau: *mut f64,
        info: *mut ::std::os::raw::c_int,
    );
    pub fn dlaed7_(
        icompq: *const ::std::os::raw::c_int,
        n: *const ::std::os::raw::c_int,
        qsiz: *const ::std::os::raw::c_int,
        tlvls: *const ::std::os::raw::c_int,
        curlvl: *const ::std::os::raw::c_int,
        curpbm: *const ::std::os::raw::c_int,
        d: *mut f64,
        q: *mut f64,
        ldq: *const ::std::os::raw::c_int,
        indxq: *mut ::std::os::raw::c_int,
        rho: *const f64,
        cutpnt: *const ::std::os::raw::c_int,
        qstore: *mut f64,
        qptr: *mut f64,
        prmptr: *const ::std::os::raw::c_int,
        perm: *const ::std::os::raw::c_int,
        givptr: *const ::std::os::raw::c_int,
        givcol: *const ::std::os::raw::c_int,
        givnum: *const f64,
        work: *mut f64,
        iwork: *mut ::std::os::raw::c_int,
        info: *mut ::std::os::raw::c_int,
    );
    pub fn dlaed8_(
        icompq: *const ::std::os::raw::c_int,
        k: *const ::std::os::raw::c_int,
        n: *const ::std::os::raw::c_int,
        qsiz: *const ::std::os::raw::c_int,
        d: *mut f64,
        q: *mut f64,
        ldq: *const ::std::os::raw::c_int,
        indxq: *const ::std::os::raw::c_int,
        rho: *mut f64,
        cutpnt: *const ::std::os::raw::c_int,
        z: *const f64,
        dlamda: *mut f64,
        q2: *mut f64,
        ldq2: *const ::std::os::raw::c_int,
        w: *mut f64,
        perm: *mut ::std::os::raw::c_int,
        givptr: *mut ::std::os::raw::c_int,
        givcol: *mut ::std::os::raw::c_int,
        givnum: *mut f64,
        indxp: *mut ::std::os::raw::c_int,
        indx: *mut ::std::os::raw::c_int,
        info: *mut ::std::os::raw::c_int,
    );
    pub fn dlaed9_(
        k: *const ::std::os::raw::c_int,
        kstart: *const ::std::os::raw::c_int,
        kstop: *const ::std::os::raw::c_int,
        n: *const ::std::os::raw::c_int,
        d: *mut f64,
        q: *mut f64,
        ldq: *const ::std::os::raw::c_int,
        rho: *const f64,
        dlamda: *const f64,
        w: *const f64,
        s: *mut f64,
        lds: *const ::std::os::raw::c_int,
        info: *mut ::std::os::raw::c_int,
    );
    pub fn dlaeda_(
        n: *const ::std::os::raw::c_int,
        tlvls: *const ::std::os::raw::c_int,
        curlvl: *const ::std::os::raw::c_int,
        curpbm: *const ::std::os::raw::c_int,
        prmptr: *const ::std::os::raw::c_int,
        perm: *const ::std::os::raw::c_int,
        givptr: *const ::std::os::raw::c_int,
        givcol: *const ::std::os::raw::c_int,
        givnum: *const f64,
        q: *const f64,
        qptr: *const ::std::os::raw::c_int,
        z: *mut f64,
        ztemp: *mut f64,
        info: *mut ::std::os::raw::c_int,
    );
    pub fn dlaein_(
        rightv: *const ::std::os::raw::c_int,
        noinit: *const ::std::os::raw::c_int,
        n: *const ::std::os::raw::c_int,
        h: *const f64,
        ldh: *const ::std::os::raw::c_int,
        wr: *const f64,
        wi: *const f64,
        vr: *mut f64,
        vi: *mut f64,
        b: *mut f64,
        ldb: *const ::std::os::raw::c_int,
        work: *mut f64,
        eps3: *const f64,
        smlnum: *const f64,
        bignum: *const f64,
        info: *mut ::std::os::raw::c_int,
    );
    pub fn dlaev2_(
        a: *const f64,
        b: *const f64,
        c: *const f64,
        rt1: *mut f64,
        rt2: *mut f64,
        cs1: *mut f64,
        sn1: *mut f64,
    );
    pub fn dlaexc_(
        wantq: *const ::std::os::raw::c_int,
        n: *const ::std::os::raw::c_int,
        t: *mut f64,
        ldt: *const ::std::os::raw::c_int,
        q: *mut f64,
        ldq: *const ::std::os::raw::c_int,
        j1: *const ::std::os::raw::c_int,
        n1: *const ::std::os::raw::c_int,
        n2: *const ::std::os::raw::c_int,
        work: *mut f64,
        info: *mut ::std::os::raw::c_int,
    );
    pub fn dlag2_(
        a: *const f64,
        lda: *const ::std::os::raw::c_int,
        b: *const f64,
        ldb: *const ::std::os::raw::c_int,
        safmin: *const f64,
        scale1: *mut f64,
        scale2: *mut f64,
        wr1: *mut f64,
        wr2: *mut f64,
        wi: *mut f64,
    );
    pub fn dlags2_(
        upper: *const ::std::os::raw::c_int,
        a1: *const f64,
        a2: *const f64,
        a3: *const f64,
        b1: *const f64,
        b2: *const f64,
        b3: *const f64,
        csu: *mut f64,
        snu: *mut f64,
        csv: *mut f64,
        snv: *mut f64,
        csq: *mut f64,
        snq: *mut f64,
    );
    pub fn dlagtf_(
        n: *const ::std::os::raw::c_int,
        a: *mut f64,
        lambda: *const f64,
        b: *mut f64,
        c: *mut f64,
        tol: *const f64,
        d: *mut f64,
        in_: *mut ::std::os::raw::c_int,
        info: *mut ::std::os::raw::c_int,
    );
    pub fn dlagtm_(
        trans: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        nrhs: *const ::std::os::raw::c_int,
        alpha: *const f64,
        dl: *const f64,
        d: *const f64,
        du: *const f64,
        x: *const f64,
        ldx: *const ::std::os::raw::c_int,
        beta: *const f64,
        b: *mut f64,
        ldb: *const ::std::os::raw::c_int,
        arg1: usize,
    );
    pub fn dlagts_(
        job: *const ::std::os::raw::c_int,
        n: *const ::std::os::raw::c_int,
        a: *const f64,
        b: *const f64,
        c: *const f64,
        d: *const f64,
        in_: *const ::std::os::raw::c_int,
        y: *mut f64,
        tol: *mut f64,
        info: *mut ::std::os::raw::c_int,
    );
    pub fn dlahqr_(
        wantt: *const ::std::os::raw::c_int,
        wantz: *const ::std::os::raw::c_int,
        n: *const ::std::os::raw::c_int,
        ilo: *const ::std::os::raw::c_int,
        ihi: *const ::std::os::raw::c_int,
        H: *mut f64,
        ldh: *const ::std::os::raw::c_int,
        wr: *mut f64,
        wi: *mut f64,
        iloz: *const ::std::os::raw::c_int,
        ihiz: *const ::std::os::raw::c_int,
        z: *mut f64,
        ldz: *const ::std::os::raw::c_int,
        info: *mut ::std::os::raw::c_int,
    );
    pub fn dlaic1_(
        job: *const ::std::os::raw::c_int,
        j: *const ::std::os::raw::c_int,
        x: *const f64,
        sest: *const f64,
        w: *const f64,
        gamma: *const f64,
        sestpr: *mut f64,
        s: *mut f64,
        c: *mut f64,
    );
    pub fn dlaln2_(
        ltrans: *const ::std::os::raw::c_int,
        na: *const ::std::os::raw::c_int,
        nw: *const ::std::os::raw::c_int,
        smin: *const f64,
        ca: *const f64,
        a: *const f64,
        lda: *const ::std::os::raw::c_int,
        d1: *const f64,
        d2: *const f64,
        b: *const f64,
        ldb: *const ::std::os::raw::c_int,
        wr: *const f64,
        wi: *const f64,
        x: *mut f64,
        ldx: *const ::std::os::raw::c_int,
        scale: *mut f64,
        xnorm: *mut f64,
        info: *mut ::std::os::raw::c_int,
    );
    pub fn dlamch_(cmach: *const ::std::os::raw::c_char, arg1: usize) -> f64;
    pub fn dlamrg_(
        n1: *const ::std::os::raw::c_int,
        n2: *const ::std::os::raw::c_int,
        a: *const f64,
        dtrd1: *const ::std::os::raw::c_int,
        dtrd2: *const ::std::os::raw::c_int,
        index: *mut ::std::os::raw::c_int,
    );
    pub fn dlangb_(
        norm: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        kl: *const ::std::os::raw::c_int,
        ku: *const ::std::os::raw::c_int,
        ab: *const f64,
        ldab: *const ::std::os::raw::c_int,
        work: *mut f64,
        arg1: usize,
    ) -> f64;
    pub fn dlange_(
        norm: *const ::std::os::raw::c_char,
        m: *const ::std::os::raw::c_int,
        n: *const ::std::os::raw::c_int,
        a: *const f64,
        lda: *const ::std::os::raw::c_int,
        work: *mut f64,
        arg1: usize,
    ) -> f64;
    pub fn dlangt_(
        norm: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        dl: *const f64,
        d: *const f64,
        du: *const f64,
        arg1: usize,
    ) -> f64;
    pub fn dlanhs_(
        norm: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        a: *const f64,
        lda: *const ::std::os::raw::c_int,
        work: *mut f64,
        arg1: usize,
    ) -> f64;
    pub fn dlansb_(
        norm: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        k: *const ::std::os::raw::c_int,
        ab: *const f64,
        ldab: *const ::std::os::raw::c_int,
        work: *mut f64,
        arg1: usize,
        arg2: usize,
    ) -> f64;
    pub fn dlansp_(
        norm: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        ap: *const f64,
        work: *mut f64,
        arg1: usize,
        arg2: usize,
    ) -> f64;
    pub fn dlanst_(
        norm: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        d: *const f64,
        e: *const f64,
        arg1: usize,
    ) -> f64;
    pub fn dlansy_(
        norm: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        a: *const f64,
        lda: *const ::std::os::raw::c_int,
        work: *mut f64,
        arg1: usize,
        arg2: usize,
    ) -> f64;
    pub fn dlantb_(
        norm: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        diag: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        k: *const ::std::os::raw::c_int,
        ab: *const f64,
        ldab: *const ::std::os::raw::c_int,
        work: *mut f64,
        arg1: usize,
        arg2: usize,
        arg3: usize,
    ) -> f64;
    pub fn dlantp_(
        norm: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        diag: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        ap: *const f64,
        work: *mut f64,
        arg1: usize,
        arg2: usize,
        arg3: usize,
    ) -> f64;
    pub fn dlantr_(
        norm: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        diag: *const ::std::os::raw::c_char,
        m: *const ::std::os::raw::c_int,
        n: *const ::std::os::raw::c_int,
        a: *const f64,
        lda: *const ::std::os::raw::c_int,
        work: *mut f64,
        arg1: usize,
        arg2: usize,
        arg3: usize,
    ) -> f64;
    pub fn dlanv2_(
        a: *mut f64,
        b: *mut f64,
        c: *mut f64,
        d: *mut f64,
        rt1r: *mut f64,
        rt1i: *mut f64,
        rt2r: *mut f64,
        rt2i: *mut f64,
        cs: *mut f64,
        sn: *mut f64,
    );
    pub fn dlapll_(
        n: *const ::std::os::raw::c_int,
        x: *mut f64,
        incx: *const ::std::os::raw::c_int,
        y: *mut f64,
        incy: *const ::std::os::raw::c_int,
        ssmin: *mut f64,
    );
    pub fn dlapmt_(
        forwrd: *const ::std::os::raw::c_int,
        m: *const ::std::os::raw::c_int,
        n: *const ::std::os::raw::c_int,
        x: *mut f64,
        ldx: *const ::std::os::raw::c_int,
        k: *const ::std::os::raw::c_int,
    );
    pub fn dlapy2_(x: *const f64, y: *const f64) -> f64;
    pub fn dlapy3_(x: *const f64, y: *const f64, z: *const f64) -> f64;
    pub fn dlaqgb_(
        m: *const ::std::os::raw::c_int,
        n: *const ::std::os::raw::c_int,
        kl: *const ::std::os::raw::c_int,
        ku: *const ::std::os::raw::c_int,
        ab: *mut f64,
        ldab: *const ::std::os::raw::c_int,
        r: *mut f64,
        c: *mut f64,
        rowcnd: *mut f64,
        colcnd: *mut f64,
        amax: *const f64,
        equed: *const ::std::os::raw::c_char,
        arg1: usize,
    );
    pub fn dlaqge_(
        m: *const ::std::os::raw::c_int,
        n: *const ::std::os::raw::c_int,
        a: *mut f64,
        lda: *const ::std::os::raw::c_int,
        r: *mut f64,
        c: *mut f64,
        rowcnd: *mut f64,
        colcnd: *mut f64,
        amax: *const f64,
        equed: *const ::std::os::raw::c_char,
        arg1: usize,
    );
    pub fn dlaqsb_(
        uplo: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        kd: *const ::std::os::raw::c_int,
        ab: *mut f64,
        ldab: *const ::std::os::raw::c_int,
        s: *const f64,
        scond: *const f64,
        amax: *const f64,
        equed: *const ::std::os::raw::c_char,
        arg1: usize,
        arg2: usize,
    );
    pub fn dlaqsp_(
        uplo: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        ap: *mut f64,
        s: *const f64,
        scond: *const f64,
        amax: *const f64,
        equed: *mut ::std::os::raw::c_int,
        arg1: usize,
    );
    pub fn dlaqsy_(
        uplo: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        a: *mut f64,
        lda: *const ::std::os::raw::c_int,
        s: *const f64,
        scond: *const f64,
        amax: *const f64,
        equed: *mut ::std::os::raw::c_int,
        arg1: usize,
    );
    pub fn dlaqtr_(
        ltran: *const ::std::os::raw::c_int,
        lreal: *const ::std::os::raw::c_int,
        n: *const ::std::os::raw::c_int,
        t: *const f64,
        ldt: *const ::std::os::raw::c_int,
        b: *const f64,
        w: *const f64,
        scale: *mut f64,
        x: *mut f64,
        work: *mut f64,
        info: *mut ::std::os::raw::c_int,
    );
    pub fn dlar2v_(
        n: *const ::std::os::raw::c_int,
        x: *mut f64,
        y: *mut f64,
        z: *mut f64,
        incx: *const ::std::os::raw::c_int,
        c: *const f64,
        s: *const f64,
        incc: *const ::std::os::raw::c_int,
    );
    pub fn dlarf_(
        side: *const ::std::os::raw::c_char,
        m: *const ::std::os::raw::c_int,
        n: *const ::std::os::raw::c_int,
        v: *const f64,
        incv: *const ::std::os::raw::c_int,
        tau: *const f64,
        c: *mut f64,
        ldc: *const ::std::os::raw::c_int,
        work: *mut f64,
        arg1: usize,
    );
    pub fn dlarfb_(
        side: *const ::std::os::raw::c_char,
        trans: *const ::std::os::raw::c_char,
        direct: *const ::std::os::raw::c_char,
        storev: *const ::std::os::raw::c_char,
        m: *const ::std::os::raw::c_int,
        n: *const ::std::os::raw::c_int,
        k: *const ::std::os::raw::c_int,
        v: *const f64,
        ldv: *const ::std::os::raw::c_int,
        t: *const f64,
        ldt: *const ::std::os::raw::c_int,
        c: *mut f64,
        ldc: *const ::std::os::raw::c_int,
        work: *mut f64,
        lwork: *const ::std::os::raw::c_int,
        arg1: usize,
        arg2: usize,
        arg3: usize,
        arg4: usize,
    );
    pub fn dlarfg_(
        n: *const ::std::os::raw::c_int,
        alpha: *const f64,
        x: *mut f64,
        incx: *const ::std::os::raw::c_int,
        tau: *mut f64,
    );
    pub fn dlarft_(
        direct: *const ::std::os::raw::c_char,
        storev: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        k: *const ::std::os::raw::c_int,
        v: *mut f64,
        ldv: *const ::std::os::raw::c_int,
        tau: *const f64,
        t: *mut f64,
        ldt: *const ::std::os::raw::c_int,
        arg1: usize,
        arg2: usize,
    );
    pub fn dlarfx_(
        side: *const ::std::os::raw::c_char,
        m: *const ::std::os::raw::c_int,
        n: *const ::std::os::raw::c_int,
        v: *const f64,
        tau: *const f64,
        c: *mut f64,
        ldc: *const ::std::os::raw::c_int,
        work: *mut f64,
        arg1: usize,
    );
    pub fn dlargv_(
        n: *const ::std::os::raw::c_int,
        x: *mut f64,
        incx: *const ::std::os::raw::c_int,
        y: *mut f64,
        incy: *const ::std::os::raw::c_int,
        c: *mut f64,
        incc: *const ::std::os::raw::c_int,
    );
    pub fn dlarnv_(
        idist: *const ::std::os::raw::c_int,
        iseed: *mut ::std::os::raw::c_int,
        n: *const ::std::os::raw::c_int,
        x: *mut f64,
    );
    pub fn dlartg_(f: *const f64, g: *const f64, cs: *mut f64, sn: *mut f64, r: *mut f64);
    pub fn dlartv_(
        n: *const ::std::os::raw::c_int,
        x: *mut f64,
        incx: *const ::std::os::raw::c_int,
        y: *mut f64,
        incy: *const ::std::os::raw::c_int,
        c: *const f64,
        s: *const f64,
        incc: *const ::std::os::raw::c_int,
    );
    pub fn dlaruv_(iseed: *mut ::std::os::raw::c_int, n: *const ::std::os::raw::c_int, x: *mut f64);
    pub fn dlas2_(f: *const f64, g: *const f64, h: *const f64, ssmin: *mut f64, ssmax: *mut f64);
    pub fn dlascl_(
        type_: *const ::std::os::raw::c_char,
        kl: *const ::std::os::raw::c_int,
        ku: *const ::std::os::raw::c_int,
        cfrom: *mut f64,
        cto: *mut f64,
        m: *const ::std::os::raw::c_int,
        n: *const ::std::os::raw::c_int,
        a: *mut f64,
        lda: *const ::std::os::raw::c_int,
        info: *mut ::std::os::raw::c_int,
        arg1: usize,
    );
    pub fn dlaset_(
        uplo: *const ::std::os::raw::c_char,
        m: *const ::std::os::raw::c_int,
        n: *const ::std::os::raw::c_int,
        alpha: *const f64,
        beta: *const f64,
        a: *mut f64,
        lda: *const ::std::os::raw::c_int,
        arg1: usize,
    );
    pub fn dlasq1_(
        n: *const ::std::os::raw::c_int,
        d: *mut f64,
        e: *mut f64,
        work: *mut f64,
        info: *mut ::std::os::raw::c_int,
    );
    pub fn dlasq2_(
        m: *const ::std::os::raw::c_int,
        q: *mut f64,
        e: *mut f64,
        qq: *mut f64,
        ee: *mut f64,
        eps: *const f64,
        tol2: *const f64,
        small2: *const f64,
        sup: *mut f64,
        kend: *mut ::std::os::raw::c_int,
        info: *mut ::std::os::raw::c_int,
    );
    pub fn dlasq3_(
        n: *mut ::std::os::raw::c_int,
        q: *mut f64,
        e: *mut f64,
        qq: *mut f64,
        ee: *mut f64,
        sup: *mut f64,
        sigma: *mut f64,
        kend: *mut ::std::os::raw::c_int,
        off: *mut ::std::os::raw::c_int,
        iphase: *mut ::std::os::raw::c_int,
        iconv: *const ::std::os::raw::c_int,
        eps: *const f64,
        tol2: *const f64,
        small2: *const f64,
    );
    pub fn dlasq4_(
        n: *const ::std::os::raw::c_int,
        q: *const f64,
        e: *const f64,
        tau: *mut f64,
        sup: *mut f64,
    );
    pub fn dlasr_(
        side: *const ::std::os::raw::c_char,
        pivot: *const ::std::os::raw::c_char,
        direct: *const ::std::os::raw::c_char,
        m: *const ::std::os::raw::c_int,
        n: *const ::std::os::raw::c_int,
        c: *const f64,
        s: *const f64,
        a: *mut f64,
        lda: *const ::std::os::raw::c_int,
        arg1: usize,
        arg2: usize,
        arg3: usize,
    );
    pub fn dlasrt_(
        id: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        d: *mut f64,
        info: *mut ::std::os::raw::c_int,
        arg1: usize,
    );
    pub fn dlassq_(
        n: *const ::std::os::raw::c_int,
        x: *const f64,
        incx: *const ::std::os::raw::c_int,
        scale: *mut f64,
        sumsq: *mut f64,
    );
    pub fn dlasv2_(
        f: *const f64,
        g: *const f64,
        h: *const f64,
        ssmin: *mut f64,
        ssmax: *mut f64,
        snr: *mut f64,
        csr: *mut f64,
        snl: *mut f64,
        csl: *mut f64,
    );
    pub fn dlaswp_(
        n: *const ::std::os::raw::c_int,
        a: *mut f64,
        lda: *const ::std::os::raw::c_int,
        k1: *const ::std::os::raw::c_int,
        k2: *const ::std::os::raw::c_int,
        ipiv: *const ::std::os::raw::c_int,
        incx: *const ::std::os::raw::c_int,
    );
    pub fn dlasy2_(
        ltranl: *const ::std::os::raw::c_int,
        ltranr: *const ::std::os::raw::c_int,
        isgn: *const ::std::os::raw::c_int,
        n1: *const ::std::os::raw::c_int,
        n2: *const ::std::os::raw::c_int,
        tl: *const f64,
        ldtl: *const ::std::os::raw::c_int,
        tr: *const f64,
        ldtr: *const ::std::os::raw::c_int,
        b: *const f64,
        ldb: *const ::std::os::raw::c_int,
        scale: *mut f64,
        x: *mut f64,
        ldx: *const ::std::os::raw::c_int,
        xnorm: *mut f64,
        info: *mut ::std::os::raw::c_int,
    );
    pub fn dlasyf_(
        uplo: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        nb: *const ::std::os::raw::c_int,
        kb: *const ::std::os::raw::c_int,
        a: *mut f64,
        lda: *const ::std::os::raw::c_int,
        ipiv: *mut ::std::os::raw::c_int,
        w: *mut f64,
        ldw: *const ::std::os::raw::c_int,
        info: *mut ::std::os::raw::c_int,
        arg1: usize,
    );
    pub fn dlatbs_(
        uplo: *const ::std::os::raw::c_char,
        trans: *const ::std::os::raw::c_char,
        diag: *const ::std::os::raw::c_char,
        normin: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        kd: *const ::std::os::raw::c_int,
        ab: *const f64,
        ldab: *const ::std::os::raw::c_int,
        x: *mut f64,
        scale: *mut f64,
        cnorm: *mut f64,
        info: *mut ::std::os::raw::c_int,
        arg1: usize,
        arg2: usize,
        arg3: usize,
        arg4: usize,
    );
    pub fn dlatps_(
        uplo: *const ::std::os::raw::c_char,
        trans: *const ::std::os::raw::c_char,
        diag: *const ::std::os::raw::c_char,
        normin: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        ap: *const f64,
        x: *mut f64,
        scale: *mut f64,
        cnorm: *mut f64,
        info: *mut ::std::os::raw::c_int,
        arg1: usize,
        arg2: usize,
        arg3: usize,
        arg4: usize,
    );
    pub fn dlatrd_(
        uplo: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        nb: *const ::std::os::raw::c_int,
        a: *mut f64,
        lda: *const ::std::os::raw::c_int,
        e: *mut f64,
        tau: *mut f64,
        w: *mut f64,
        ldw: *const ::std::os::raw::c_int,
        arg1: usize,
    );
    pub fn dlatrs_(
        uplo: *const ::std::os::raw::c_char,
        trans: *const ::std::os::raw::c_char,
        diag: *const ::std::os::raw::c_char,
        normin: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        a: *const f64,
        lda: *const ::std::os::raw::c_int,
        x: *mut f64,
        scale: *mut f64,
        cnorm: *mut f64,
        info: *mut ::std::os::raw::c_int,
        arg1: usize,
        arg2: usize,
        arg3: usize,
        arg4: usize,
    );
    pub fn dlauu2_(
        uplo: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        a: *mut f64,
        lda: *const ::std::os::raw::c_int,
        info: *mut ::std::os::raw::c_int,
        arg1: usize,
    );
    pub fn dlauum_(
        uplo: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        a: *mut f64,
        lda: *const ::std::os::raw::c_int,
        info: *mut ::std::os::raw::c_int,
        arg1: usize,
    );
    pub fn izmax1_(
        n: *const ::std::os::raw::c_int,
        cx: *mut Rcomplex,
        incx: *const ::std::os::raw::c_int,
    ) -> *mut ::std::os::raw::c_int;
    pub fn zgecon_(
        norm: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        a: *const Rcomplex,
        lda: *const ::std::os::raw::c_int,
        anorm: *const f64,
        rcond: *mut f64,
        work: *mut Rcomplex,
        rwork: *mut f64,
        info: *mut ::std::os::raw::c_int,
        arg1: usize,
    );
    pub fn zgesv_(
        n: *const ::std::os::raw::c_int,
        nrhs: *const ::std::os::raw::c_int,
        a: *mut Rcomplex,
        lda: *const ::std::os::raw::c_int,
        ipiv: *mut ::std::os::raw::c_int,
        b: *mut Rcomplex,
        ldb: *const ::std::os::raw::c_int,
        info: *mut ::std::os::raw::c_int,
    );
    pub fn zgeqp3_(
        m: *const ::std::os::raw::c_int,
        n: *const ::std::os::raw::c_int,
        a: *mut Rcomplex,
        lda: *const ::std::os::raw::c_int,
        jpvt: *mut ::std::os::raw::c_int,
        tau: *mut Rcomplex,
        work: *mut Rcomplex,
        lwork: *const ::std::os::raw::c_int,
        rwork: *mut f64,
        info: *mut ::std::os::raw::c_int,
    );
    pub fn zunmqr_(
        side: *const ::std::os::raw::c_char,
        trans: *const ::std::os::raw::c_char,
        m: *const ::std::os::raw::c_int,
        n: *const ::std::os::raw::c_int,
        k: *const ::std::os::raw::c_int,
        a: *mut Rcomplex,
        lda: *const ::std::os::raw::c_int,
        tau: *mut Rcomplex,
        c: *mut Rcomplex,
        ldc: *const ::std::os::raw::c_int,
        work: *mut Rcomplex,
        lwork: *const ::std::os::raw::c_int,
        info: *mut ::std::os::raw::c_int,
        arg1: usize,
        arg2: usize,
    );
    pub fn ztrtrs_(
        uplo: *const ::std::os::raw::c_char,
        trans: *const ::std::os::raw::c_char,
        diag: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        nrhs: *const ::std::os::raw::c_int,
        a: *mut Rcomplex,
        lda: *const ::std::os::raw::c_int,
        b: *mut Rcomplex,
        ldb: *const ::std::os::raw::c_int,
        info: *mut ::std::os::raw::c_int,
        arg1: usize,
        arg2: usize,
        arg3: usize,
    );
    pub fn zgesvd_(
        jobu: *const ::std::os::raw::c_char,
        jobvt: *const ::std::os::raw::c_char,
        m: *const ::std::os::raw::c_int,
        n: *const ::std::os::raw::c_int,
        a: *mut Rcomplex,
        lda: *const ::std::os::raw::c_int,
        s: *mut f64,
        u: *mut Rcomplex,
        ldu: *const ::std::os::raw::c_int,
        vt: *mut Rcomplex,
        ldvt: *const ::std::os::raw::c_int,
        work: *mut Rcomplex,
        lwork: *const ::std::os::raw::c_int,
        rwork: *mut f64,
        info: *mut ::std::os::raw::c_int,
        arg1: usize,
        arg2: usize,
    );
    pub fn zheev_(
        jobz: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        a: *mut Rcomplex,
        lda: *const ::std::os::raw::c_int,
        w: *mut f64,
        work: *mut Rcomplex,
        lwork: *const ::std::os::raw::c_int,
        rwork: *mut f64,
        info: *mut ::std::os::raw::c_int,
        arg1: usize,
        arg2: usize,
    );
    pub fn zgeev_(
        jobvl: *const ::std::os::raw::c_char,
        jobvr: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        a: *mut Rcomplex,
        lda: *const ::std::os::raw::c_int,
        wr: *mut Rcomplex,
        vl: *mut Rcomplex,
        ldvl: *const ::std::os::raw::c_int,
        vr: *mut Rcomplex,
        ldvr: *const ::std::os::raw::c_int,
        work: *mut Rcomplex,
        lwork: *const ::std::os::raw::c_int,
        rwork: *mut f64,
        info: *mut ::std::os::raw::c_int,
        arg1: usize,
        arg2: usize,
    );
    pub fn zlacn2_(
        n: *const ::std::os::raw::c_int,
        v: *mut Rcomplex,
        x: *mut Rcomplex,
        est: *mut f64,
        kase: *mut ::std::os::raw::c_int,
        isave: *mut ::std::os::raw::c_int,
    );
    pub fn zlansp_(
        norm: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        ap: *mut Rcomplex,
        work: *mut f64,
        arg1: usize,
        arg2: usize,
    ) -> f64;
    pub fn zlansy_(
        norm: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        a: *mut Rcomplex,
        lda: *const ::std::os::raw::c_int,
        work: *mut f64,
        arg1: usize,
        arg2: usize,
    ) -> f64;
    pub fn zlantr_(
        norm: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        diag: *const ::std::os::raw::c_char,
        m: *const ::std::os::raw::c_int,
        n: *const ::std::os::raw::c_int,
        a: *mut Rcomplex,
        lda: *const ::std::os::raw::c_int,
        work: *mut f64,
        arg1: usize,
        arg2: usize,
        arg3: usize,
    ) -> f64;
    pub fn dzsum1_(
        n: *const ::std::os::raw::c_int,
        CX: *mut Rcomplex,
        incx: *const ::std::os::raw::c_int,
    ) -> f64;
    pub fn zpotrf_(
        uplo: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        a: *mut Rcomplex,
        lda: *const ::std::os::raw::c_int,
        info: *mut ::std::os::raw::c_int,
        arg1: usize,
    );
    pub fn zpotrf2_(
        uplo: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        a: *mut Rcomplex,
        lda: *const ::std::os::raw::c_int,
        info: *mut ::std::os::raw::c_int,
        arg1: usize,
    );
    pub fn zpotri_(
        uplo: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        a: *mut Rcomplex,
        lda: *const ::std::os::raw::c_int,
        info: *mut ::std::os::raw::c_int,
        arg1: usize,
    );
    pub fn zpotrs_(
        uplo: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        nrhs: *const ::std::os::raw::c_int,
        a: *const Rcomplex,
        lda: *const ::std::os::raw::c_int,
        b: *mut Rcomplex,
        ldb: *const ::std::os::raw::c_int,
        info: *mut ::std::os::raw::c_int,
        arg1: usize,
    );
    pub fn zppcon_(
        uplo: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        ap: *const Rcomplex,
        anorm: *const f64,
        rcond: *mut f64,
        work: *mut Rcomplex,
        rwork: *mut f64,
        info: *mut ::std::os::raw::c_int,
        arg1: usize,
    );
    pub fn zpptrf_(
        uplo: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        ap: *mut Rcomplex,
        info: *mut ::std::os::raw::c_int,
        arg1: usize,
    );
    pub fn zpptri_(
        uplo: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        ap: *mut Rcomplex,
        info: *mut ::std::os::raw::c_int,
        arg1: usize,
    );
    pub fn zpptrs_(
        uplo: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        nrhs: *const ::std::os::raw::c_int,
        a: *const Rcomplex,
        b: *mut Rcomplex,
        ldb: *const ::std::os::raw::c_int,
        info: *mut ::std::os::raw::c_int,
        arg1: usize,
    );
    pub fn zpstrf_(
        uplo: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        a: *mut Rcomplex,
        lda: *const ::std::os::raw::c_int,
        ipiv: *mut ::std::os::raw::c_int,
        rank: *mut ::std::os::raw::c_int,
        tol: *const f64,
        work: *mut f64,
        info: *mut ::std::os::raw::c_int,
        arg1: usize,
    );
    pub fn dbdsdc_(
        uplo: *const ::std::os::raw::c_char,
        compq: *const ::std::os::raw::c_char,
        n: *mut ::std::os::raw::c_int,
        d: *mut f64,
        e: *mut f64,
        u: *mut f64,
        ldu: *mut ::std::os::raw::c_int,
        vt: *mut f64,
        ldvt: *mut ::std::os::raw::c_int,
        q: *mut f64,
        iq: *mut ::std::os::raw::c_int,
        work: *mut f64,
        iwork: *mut ::std::os::raw::c_int,
        info: *mut ::std::os::raw::c_int,
        arg1: usize,
        arg2: usize,
    );
    pub fn dgelsd_(
        m: *mut ::std::os::raw::c_int,
        n: *mut ::std::os::raw::c_int,
        nrhs: *mut ::std::os::raw::c_int,
        a: *mut f64,
        lda: *mut ::std::os::raw::c_int,
        b: *mut f64,
        ldb: *mut ::std::os::raw::c_int,
        s: *mut f64,
        rcond: *mut f64,
        rank: *mut ::std::os::raw::c_int,
        work: *mut f64,
        lwork: *mut ::std::os::raw::c_int,
        iwork: *mut ::std::os::raw::c_int,
        info: *mut ::std::os::raw::c_int,
    );
    pub fn dgesc2_(
        n: *mut ::std::os::raw::c_int,
        a: *mut f64,
        lda: *mut ::std::os::raw::c_int,
        rhs: *mut f64,
        ipiv: *mut ::std::os::raw::c_int,
        jpiv: *mut ::std::os::raw::c_int,
        scale: *mut f64,
    );
    pub fn dgesdd_(
        jobz: *const ::std::os::raw::c_char,
        m: *const ::std::os::raw::c_int,
        n: *const ::std::os::raw::c_int,
        a: *mut f64,
        lda: *const ::std::os::raw::c_int,
        s: *mut f64,
        u: *mut f64,
        ldu: *const ::std::os::raw::c_int,
        vt: *mut f64,
        ldvt: *const ::std::os::raw::c_int,
        work: *mut f64,
        lwork: *const ::std::os::raw::c_int,
        iwork: *mut ::std::os::raw::c_int,
        info: *mut ::std::os::raw::c_int,
        arg1: usize,
    );
    pub fn dgetc2_(
        n: *mut ::std::os::raw::c_int,
        a: *mut f64,
        lda: *mut ::std::os::raw::c_int,
        ipiv: *mut *mut ::std::os::raw::c_int,
        jpiv: *mut ::std::os::raw::c_int,
        info: *mut ::std::os::raw::c_int,
    );
    pub fn dggesx_(
        jobvsl: *const ::std::os::raw::c_char,
        jobvsr: *const ::std::os::raw::c_char,
        sort: *const ::std::os::raw::c_char,
        delctg: L_fp,
        sense: *const ::std::os::raw::c_char,
        n: *mut ::std::os::raw::c_int,
        a: *mut f64,
        lda: *mut ::std::os::raw::c_int,
        b: *mut f64,
        ldb: *mut ::std::os::raw::c_int,
        sdim: *mut ::std::os::raw::c_int,
        alphar: *mut f64,
        alphai: *mut f64,
        beta: *mut f64,
        vsl: *mut f64,
        ldvsl: *mut ::std::os::raw::c_int,
        vsr: *mut f64,
        ldvsr: *mut ::std::os::raw::c_int,
        rconde: *mut f64,
        rcondv: *mut f64,
        work: *mut f64,
        lwork: *mut ::std::os::raw::c_int,
        iwork: *mut ::std::os::raw::c_int,
        liwork: *mut ::std::os::raw::c_int,
        bwork: *mut ::std::os::raw::c_int,
        info: *mut ::std::os::raw::c_int,
        arg1: usize,
        arg2: usize,
        arg3: usize,
        arg4: usize,
    );
    pub fn dggev_(
        jobvl: *const ::std::os::raw::c_char,
        jobvr: *const ::std::os::raw::c_char,
        n: *mut ::std::os::raw::c_int,
        a: *mut f64,
        lda: *mut ::std::os::raw::c_int,
        b: *mut f64,
        ldb: *mut ::std::os::raw::c_int,
        alphar: *mut f64,
        alphai: *mut f64,
        beta: *mut f64,
        vl: *mut f64,
        ldvl: *mut ::std::os::raw::c_int,
        vr: *mut f64,
        ldvr: *mut ::std::os::raw::c_int,
        work: *mut f64,
        lwork: *mut ::std::os::raw::c_int,
        info: *mut ::std::os::raw::c_int,
        arg1: usize,
        arg2: usize,
    );
    pub fn dggevx_(
        balanc: *const ::std::os::raw::c_char,
        jobvl: *const ::std::os::raw::c_char,
        jobvr: *const ::std::os::raw::c_char,
        sense: *const ::std::os::raw::c_char,
        n: *mut ::std::os::raw::c_int,
        a: *mut f64,
        lda: *mut ::std::os::raw::c_int,
        b: *mut f64,
        ldb: *mut ::std::os::raw::c_int,
        alphar: *mut f64,
        alphai: *mut f64,
        beta: *mut f64,
        vl: *mut f64,
        ldvl: *mut ::std::os::raw::c_int,
        vr: *mut f64,
        ldvr: *mut ::std::os::raw::c_int,
        ilo: *mut ::std::os::raw::c_int,
        ihi: *mut ::std::os::raw::c_int,
        lscale: *mut f64,
        rscale: *mut f64,
        abnrm: *mut f64,
        bbnrm: *mut f64,
        rconde: *mut f64,
        rcondv: *mut f64,
        work: *mut f64,
        lwork: *mut ::std::os::raw::c_int,
        iwork: *mut ::std::os::raw::c_int,
        bwork: *mut ::std::os::raw::c_int,
        info: *mut ::std::os::raw::c_int,
        arg1: usize,
        arg2: usize,
        arg3: usize,
        arg4: usize,
    );
    pub fn dgtts2_(
        itrans: *mut ::std::os::raw::c_int,
        n: *mut ::std::os::raw::c_int,
        nrhs: *mut ::std::os::raw::c_int,
        dl: *mut f64,
        d: *mut f64,
        du: *mut f64,
        du2: *mut f64,
        ipiv: *mut ::std::os::raw::c_int,
        b: *mut f64,
        ldb: *mut ::std::os::raw::c_int,
    );
    pub fn dlagv2_(
        a: *mut f64,
        lda: *mut ::std::os::raw::c_int,
        b: *mut f64,
        ldb: *mut ::std::os::raw::c_int,
        alphar: *mut f64,
        alphai: *mut f64,
        beta: *mut f64,
        csl: *mut f64,
        snl: *mut f64,
        csr: *mut f64,
        snr: *mut f64,
    );
    pub fn dlals0_(
        icompq: *mut ::std::os::raw::c_int,
        nl: *mut ::std::os::raw::c_int,
        nr: *mut ::std::os::raw::c_int,
        sqre: *mut ::std::os::raw::c_int,
        nrhs: *mut ::std::os::raw::c_int,
        b: *mut f64,
        ldb: *mut ::std::os::raw::c_int,
        bx: *mut f64,
        ldbx: *mut ::std::os::raw::c_int,
        perm: *mut ::std::os::raw::c_int,
        givptr: *mut ::std::os::raw::c_int,
        givcol: *mut ::std::os::raw::c_int,
        ldgcol: *mut ::std::os::raw::c_int,
        givnum: *mut f64,
        ldgnum: *mut ::std::os::raw::c_int,
        poles: *mut f64,
        difl: *mut f64,
        difr: *mut f64,
        z: *mut f64,
        k: *mut ::std::os::raw::c_int,
        c: *mut f64,
        s: *mut f64,
        work: *mut f64,
        info: *mut ::std::os::raw::c_int,
    );
    pub fn dlalsa_(
        icompq: *mut ::std::os::raw::c_int,
        smlsiz: *mut ::std::os::raw::c_int,
        n: *mut ::std::os::raw::c_int,
        nrhs: *mut ::std::os::raw::c_int,
        b: *mut f64,
        ldb: *mut ::std::os::raw::c_int,
        bx: *mut f64,
        ldbx: *mut ::std::os::raw::c_int,
        u: *mut f64,
        ldu: *mut ::std::os::raw::c_int,
        vt: *mut f64,
        k: *mut ::std::os::raw::c_int,
        difl: *mut f64,
        difr: *mut f64,
        z: *mut f64,
        poles: *mut f64,
        givptr: *mut ::std::os::raw::c_int,
        givcol: *mut ::std::os::raw::c_int,
        ldgcol: *mut ::std::os::raw::c_int,
        perm: *mut ::std::os::raw::c_int,
        givnum: *mut f64,
        c: *mut f64,
        s: *mut f64,
        work: *mut f64,
        iwork: *mut ::std::os::raw::c_int,
        info: *mut ::std::os::raw::c_int,
    );
    pub fn dlalsd_(
        uplo: *const ::std::os::raw::c_char,
        smlsiz: *mut ::std::os::raw::c_int,
        n: *mut ::std::os::raw::c_int,
        nrhs: *mut ::std::os::raw::c_int,
        d: *mut f64,
        e: *mut f64,
        b: *mut f64,
        ldb: *mut ::std::os::raw::c_int,
        rcond: *mut f64,
        rank: *mut ::std::os::raw::c_int,
        work: *mut f64,
        iwork: *mut ::std::os::raw::c_int,
        info: *mut ::std::os::raw::c_int,
        arg1: usize,
    );
    pub fn dlamc1_(
        beta: *mut ::std::os::raw::c_int,
        t: *mut ::std::os::raw::c_int,
        rnd: *mut ::std::os::raw::c_int,
        ieee1: *mut *mut ::std::os::raw::c_int,
    );
    pub fn dlamc2_(
        beta: *mut ::std::os::raw::c_int,
        t: *mut ::std::os::raw::c_int,
        rnd: *mut ::std::os::raw::c_int,
        eps: *mut f64,
        emin: *mut ::std::os::raw::c_int,
        rmin: *mut f64,
        emax: *mut ::std::os::raw::c_int,
        rmax: *mut f64,
    );
    pub fn dlamc3_(a: *mut f64, b: *mut f64) -> f64;
    pub fn dlamc4_(
        emin: *mut ::std::os::raw::c_int,
        start: *mut f64,
        base: *mut ::std::os::raw::c_int,
    );
    pub fn dlamc5_(
        beta: *mut ::std::os::raw::c_int,
        p: *mut ::std::os::raw::c_int,
        emin: *mut ::std::os::raw::c_int,
        ieee: *mut ::std::os::raw::c_int,
        emax: *mut ::std::os::raw::c_int,
        rmax: *mut f64,
    );
    pub fn dlaqp2_(
        m: *mut ::std::os::raw::c_int,
        n: *mut ::std::os::raw::c_int,
        offset: *mut ::std::os::raw::c_int,
        a: *mut f64,
        lda: *mut ::std::os::raw::c_int,
        jpvt: *mut ::std::os::raw::c_int,
        tau: *mut f64,
        vn1: *mut f64,
        vn2: *mut f64,
        work: *mut f64,
    );
    pub fn dlaqps_(
        m: *mut ::std::os::raw::c_int,
        n: *mut ::std::os::raw::c_int,
        offset: *mut ::std::os::raw::c_int,
        nb: *mut ::std::os::raw::c_int,
        kb: *mut ::std::os::raw::c_int,
        a: *mut f64,
        lda: *mut ::std::os::raw::c_int,
        jpvt: *mut ::std::os::raw::c_int,
        tau: *mut f64,
        vn1: *mut f64,
        vn2: *mut f64,
        auxv: *mut f64,
        f: *mut f64,
        ldf: *mut ::std::os::raw::c_int,
    );
    pub fn dlar1v_(
        n: *mut ::std::os::raw::c_int,
        b1: *mut ::std::os::raw::c_int,
        bn: *mut ::std::os::raw::c_int,
        sigma: *mut f64,
        d: *mut f64,
        l: *mut f64,
        ld: *mut f64,
        lld: *mut f64,
        gersch: *mut f64,
        z: *mut f64,
        ztz: *mut f64,
        mingma: *mut f64,
        r: *mut ::std::os::raw::c_int,
        isuppz: *mut ::std::os::raw::c_int,
        work: *mut f64,
    );
    pub fn dlarrb_(
        n: *mut ::std::os::raw::c_int,
        d: *mut f64,
        l: *mut f64,
        ld: *mut f64,
        lld: *mut f64,
        ifirst: *mut ::std::os::raw::c_int,
        ilast: *mut ::std::os::raw::c_int,
        sigma: *mut f64,
        reltol: *mut f64,
        w: *mut f64,
        wgap: *mut f64,
        werr: *mut f64,
        work: *mut f64,
        iwork: *mut ::std::os::raw::c_int,
        info: *mut ::std::os::raw::c_int,
    );
    pub fn dlarre_(
        n: *mut ::std::os::raw::c_int,
        d: *mut f64,
        e: *mut f64,
        tol: *mut f64,
        nsplit: *mut ::std::os::raw::c_int,
        isplit: *mut ::std::os::raw::c_int,
        m: *mut ::std::os::raw::c_int,
        w: *mut f64,
        woff: *mut f64,
        gersch: *mut f64,
        work: *mut f64,
        info: *mut ::std::os::raw::c_int,
    );
    pub fn dlarrf_(
        n: *mut ::std::os::raw::c_int,
        d: *mut f64,
        l: *mut f64,
        ld: *mut f64,
        lld: *mut f64,
        ifirst: *mut ::std::os::raw::c_int,
        ilast: *mut ::std::os::raw::c_int,
        w: *mut f64,
        dplus: *mut f64,
        lplus: *mut f64,
        work: *mut f64,
        iwork: *mut ::std::os::raw::c_int,
        info: *mut ::std::os::raw::c_int,
    );
    pub fn dlarrv_(
        n: *mut ::std::os::raw::c_int,
        d: *mut f64,
        l: *mut f64,
        isplit: *mut ::std::os::raw::c_int,
        m: *mut ::std::os::raw::c_int,
        w: *mut f64,
        iblock: *mut ::std::os::raw::c_int,
        gersch: *mut f64,
        tol: *mut f64,
        z: *mut f64,
        ldz: *mut ::std::os::raw::c_int,
        isuppz: *mut ::std::os::raw::c_int,
        work: *mut f64,
        iwork: *mut ::std::os::raw::c_int,
        info: *mut ::std::os::raw::c_int,
    );
    pub fn dlarz_(
        side: *const ::std::os::raw::c_char,
        m: *mut ::std::os::raw::c_int,
        n: *mut ::std::os::raw::c_int,
        l: *mut ::std::os::raw::c_int,
        v: *mut f64,
        incv: *mut ::std::os::raw::c_int,
        tau: *mut f64,
        c: *mut f64,
        ldc: *mut ::std::os::raw::c_int,
        work: *mut f64,
        arg1: usize,
    );
    pub fn dlarzb_(
        side: *const ::std::os::raw::c_char,
        trans: *const ::std::os::raw::c_char,
        direct: *const ::std::os::raw::c_char,
        storev: *const ::std::os::raw::c_char,
        m: *mut ::std::os::raw::c_int,
        n: *mut ::std::os::raw::c_int,
        k: *mut ::std::os::raw::c_int,
        l: *mut ::std::os::raw::c_int,
        v: *mut f64,
        ldv: *mut ::std::os::raw::c_int,
        t: *mut f64,
        ldt: *mut ::std::os::raw::c_int,
        c: *mut f64,
        ldc: *mut ::std::os::raw::c_int,
        work: *mut f64,
        ldwork: *mut ::std::os::raw::c_int,
        arg1: usize,
        arg2: usize,
        arg3: usize,
        arg4: usize,
    );
    pub fn dlarzt_(
        direct: *const ::std::os::raw::c_char,
        storev: *const ::std::os::raw::c_char,
        n: *mut ::std::os::raw::c_int,
        k: *mut ::std::os::raw::c_int,
        v: *mut f64,
        ldv: *mut ::std::os::raw::c_int,
        tau: *mut f64,
        t: *mut f64,
        ldt: *mut ::std::os::raw::c_int,
        arg1: usize,
        arg2: usize,
    );
    pub fn dlasd0_(
        n: *mut ::std::os::raw::c_int,
        sqre: *mut ::std::os::raw::c_int,
        d: *mut f64,
        e: *mut f64,
        u: *mut f64,
        ldu: *mut ::std::os::raw::c_int,
        vt: *mut f64,
        ldvt: *mut ::std::os::raw::c_int,
        smlsiz: *mut ::std::os::raw::c_int,
        iwork: *mut ::std::os::raw::c_int,
        work: *mut f64,
        info: *mut ::std::os::raw::c_int,
    );
    pub fn dlasd1_(
        nl: *mut ::std::os::raw::c_int,
        nr: *mut ::std::os::raw::c_int,
        sqre: *mut ::std::os::raw::c_int,
        d: *mut f64,
        alpha: *mut f64,
        beta: *mut f64,
        u: *mut f64,
        ldu: *mut ::std::os::raw::c_int,
        vt: *mut f64,
        ldvt: *mut ::std::os::raw::c_int,
        idxq: *mut ::std::os::raw::c_int,
        iwork: *mut ::std::os::raw::c_int,
        work: *mut f64,
        info: *mut ::std::os::raw::c_int,
    );
    pub fn dlasd2_(
        nl: *mut ::std::os::raw::c_int,
        nr: *mut ::std::os::raw::c_int,
        sqre: *mut ::std::os::raw::c_int,
        k: *mut *mut ::std::os::raw::c_int,
        d: *mut f64,
        z: *mut f64,
        alpha: *mut f64,
        beta: *mut f64,
        u: *mut f64,
        ldu: *mut ::std::os::raw::c_int,
        vt: *mut f64,
        ldvt: *mut ::std::os::raw::c_int,
        dsigma: *mut f64,
        u2: *mut f64,
        ldu2: *mut ::std::os::raw::c_int,
        vt2: *mut f64,
        ldvt2: *mut ::std::os::raw::c_int,
        idxp: *mut ::std::os::raw::c_int,
        idx: *mut ::std::os::raw::c_int,
        idxc: *mut ::std::os::raw::c_int,
        idxq: *mut ::std::os::raw::c_int,
        coltyp: *mut ::std::os::raw::c_int,
        info: *mut ::std::os::raw::c_int,
    );
    pub fn dlasd3_(
        nl: *mut ::std::os::raw::c_int,
        nr: *mut ::std::os::raw::c_int,
        sqre: *mut ::std::os::raw::c_int,
        k: *mut *mut ::std::os::raw::c_int,
        d: *mut f64,
        q: *mut f64,
        ldq: *mut ::std::os::raw::c_int,
        dsigma: *mut f64,
        u: *mut f64,
        ldu: *mut ::std::os::raw::c_int,
        u2: *mut f64,
        ldu2: *mut ::std::os::raw::c_int,
        vt: *mut f64,
        ldvt: *mut ::std::os::raw::c_int,
        vt2: *mut f64,
        ldvt2: *mut ::std::os::raw::c_int,
        idxc: *mut ::std::os::raw::c_int,
        ctot: *mut ::std::os::raw::c_int,
        z: *mut f64,
        info: *mut ::std::os::raw::c_int,
    );
    pub fn dlasd4_(
        n: *mut ::std::os::raw::c_int,
        i: *mut ::std::os::raw::c_int,
        d: *mut f64,
        z: *mut f64,
        delta: *mut f64,
        rho: *mut f64,
        sigma: *mut f64,
        work: *mut f64,
        info: *mut ::std::os::raw::c_int,
    );
    pub fn dlasd5_(
        i: *mut ::std::os::raw::c_int,
        d: *mut f64,
        z: *mut f64,
        delta: *mut f64,
        rho: *mut f64,
        dsigma: *mut f64,
        work: *mut f64,
    );
    pub fn dlasd6_(
        icompq: *mut ::std::os::raw::c_int,
        nl: *mut ::std::os::raw::c_int,
        nr: *mut ::std::os::raw::c_int,
        sqre: *mut ::std::os::raw::c_int,
        d: *mut f64,
        vf: *mut f64,
        vl: *mut f64,
        alpha: *mut f64,
        beta: *mut f64,
        idxq: *mut ::std::os::raw::c_int,
        perm: *mut ::std::os::raw::c_int,
        givptr: *mut ::std::os::raw::c_int,
        givcol: *mut ::std::os::raw::c_int,
        ldgcol: *mut ::std::os::raw::c_int,
        givnum: *mut f64,
        ldgnum: *mut ::std::os::raw::c_int,
        poles: *mut f64,
        difl: *mut f64,
        difr: *mut f64,
        z: *mut f64,
        k: *mut ::std::os::raw::c_int,
        c: *mut f64,
        s: *mut f64,
        work: *mut f64,
        iwork: *mut ::std::os::raw::c_int,
        info: *mut ::std::os::raw::c_int,
    );
    pub fn dlasd7_(
        icompq: *mut ::std::os::raw::c_int,
        nl: *mut ::std::os::raw::c_int,
        nr: *mut ::std::os::raw::c_int,
        sqre: *mut ::std::os::raw::c_int,
        k: *mut ::std::os::raw::c_int,
        d: *mut f64,
        z: *mut f64,
        zw: *mut f64,
        vf: *mut f64,
        vfw: *mut f64,
        vl: *mut f64,
        vlw: *mut f64,
        alpha: *mut f64,
        beta: *mut f64,
        dsigma: *mut f64,
        idx: *mut ::std::os::raw::c_int,
        idxp: *mut ::std::os::raw::c_int,
        idxq: *mut ::std::os::raw::c_int,
        perm: *mut ::std::os::raw::c_int,
        givptr: *mut ::std::os::raw::c_int,
        givcol: *mut ::std::os::raw::c_int,
        ldgcol: *mut ::std::os::raw::c_int,
        givnum: *mut f64,
        ldgnum: *mut ::std::os::raw::c_int,
        c: *mut f64,
        s: *mut f64,
        info: *mut ::std::os::raw::c_int,
    );
    pub fn dlasd8_(
        icompq: *mut ::std::os::raw::c_int,
        k: *mut ::std::os::raw::c_int,
        d: *mut f64,
        z: *mut f64,
        vf: *mut f64,
        vl: *mut f64,
        difl: *mut f64,
        difr: *mut f64,
        lddifr: *mut ::std::os::raw::c_int,
        dsigma: *mut f64,
        work: *mut f64,
        info: *mut ::std::os::raw::c_int,
    );
    pub fn dlasd9_(
        icompq: *mut ::std::os::raw::c_int,
        ldu: *mut ::std::os::raw::c_int,
        k: *mut ::std::os::raw::c_int,
        d: *mut f64,
        z: *mut f64,
        vf: *mut f64,
        vl: *mut f64,
        difl: *mut f64,
        difr: *mut f64,
        dsigma: *mut f64,
        work: *mut f64,
        info: *mut ::std::os::raw::c_int,
    );
    pub fn dlasda_(
        icompq: *mut ::std::os::raw::c_int,
        smlsiz: *mut ::std::os::raw::c_int,
        n: *mut ::std::os::raw::c_int,
        sqre: *mut ::std::os::raw::c_int,
        d: *mut f64,
        e: *mut f64,
        u: *mut f64,
        ldu: *mut *mut ::std::os::raw::c_int,
        vt: *mut f64,
        k: *mut ::std::os::raw::c_int,
        difl: *mut f64,
        difr: *mut f64,
        z: *mut f64,
        poles: *mut f64,
        givptr: *mut ::std::os::raw::c_int,
        givcol: *mut ::std::os::raw::c_int,
        ldgcol: *mut ::std::os::raw::c_int,
        perm: *mut ::std::os::raw::c_int,
        givnum: *mut f64,
        c: *mut f64,
        s: *mut f64,
        work: *mut f64,
        iwork: *mut ::std::os::raw::c_int,
        info: *mut ::std::os::raw::c_int,
    );
    pub fn dlasdq_(
        uplo: *const ::std::os::raw::c_char,
        sqre: *mut ::std::os::raw::c_int,
        n: *mut ::std::os::raw::c_int,
        ncvt: *mut ::std::os::raw::c_int,
        nru: *mut ::std::os::raw::c_int,
        ncc: *mut ::std::os::raw::c_int,
        d: *mut f64,
        e: *mut f64,
        vt: *mut f64,
        ldvt: *mut ::std::os::raw::c_int,
        u: *mut f64,
        ldu: *mut ::std::os::raw::c_int,
        c: *mut f64,
        ldc: *mut ::std::os::raw::c_int,
        work: *mut f64,
        info: *mut ::std::os::raw::c_int,
        arg1: usize,
    );
    pub fn dlasdt_(
        n: *mut ::std::os::raw::c_int,
        lvl: *mut ::std::os::raw::c_int,
        nd: *mut ::std::os::raw::c_int,
        inode: *mut ::std::os::raw::c_int,
        ndiml: *mut ::std::os::raw::c_int,
        ndimr: *mut ::std::os::raw::c_int,
        msub: *mut ::std::os::raw::c_int,
    );
    pub fn dlasq5_(
        i0: *mut ::std::os::raw::c_int,
        n0: *mut ::std::os::raw::c_int,
        z: *mut f64,
        pp: *mut ::std::os::raw::c_int,
        tau: *mut f64,
        dmin: *mut f64,
        dmin1: *mut f64,
        dmin2: *mut f64,
        dn: *mut f64,
        dnm1: *mut f64,
        dnm2: *mut f64,
        ieee: *mut ::std::os::raw::c_int,
    );
    pub fn dlasq6_(
        i0: *mut ::std::os::raw::c_int,
        n0: *mut ::std::os::raw::c_int,
        z: *mut f64,
        pp: *mut ::std::os::raw::c_int,
        dmin: *mut f64,
        dmin1: *mut f64,
        dmin2: *mut f64,
        dn: *mut f64,
        dnm1: *mut f64,
        dnm2: *mut f64,
    );
    pub fn dlatdf_(
        ijob: *mut ::std::os::raw::c_int,
        n: *mut ::std::os::raw::c_int,
        z: *mut f64,
        ldz: *mut ::std::os::raw::c_int,
        rhs: *mut f64,
        rdsum: *mut f64,
        rdscal: *mut f64,
        ipiv: *mut ::std::os::raw::c_int,
        jpiv: *mut ::std::os::raw::c_int,
    );
    pub fn dlatrz_(
        m: *mut ::std::os::raw::c_int,
        n: *mut ::std::os::raw::c_int,
        l: *mut ::std::os::raw::c_int,
        a: *mut f64,
        lda: *mut ::std::os::raw::c_int,
        tau: *mut f64,
        work: *mut f64,
    );
    pub fn dormr3_(
        side: *const ::std::os::raw::c_char,
        trans: *const ::std::os::raw::c_char,
        m: *mut ::std::os::raw::c_int,
        n: *mut ::std::os::raw::c_int,
        k: *mut ::std::os::raw::c_int,
        l: *mut ::std::os::raw::c_int,
        a: *mut f64,
        lda: *mut ::std::os::raw::c_int,
        tau: *mut f64,
        c: *mut f64,
        ldc: *mut ::std::os::raw::c_int,
        work: *mut f64,
        info: *mut ::std::os::raw::c_int,
        arg1: usize,
        arg2: usize,
    );
    pub fn dormrz_(
        side: *const ::std::os::raw::c_char,
        trans: *const ::std::os::raw::c_char,
        m: *mut ::std::os::raw::c_int,
        n: *mut ::std::os::raw::c_int,
        k: *mut ::std::os::raw::c_int,
        l: *mut ::std::os::raw::c_int,
        a: *mut f64,
        lda: *mut ::std::os::raw::c_int,
        tau: *mut f64,
        c: *mut f64,
        ldc: *mut ::std::os::raw::c_int,
        work: *mut f64,
        lwork: *mut ::std::os::raw::c_int,
        info: *mut ::std::os::raw::c_int,
        arg1: usize,
        arg2: usize,
    );
    pub fn dptts2_(
        n: *mut ::std::os::raw::c_int,
        nrhs: *mut ::std::os::raw::c_int,
        d: *mut f64,
        e: *mut f64,
        b: *mut f64,
        ldb: *mut ::std::os::raw::c_int,
    );
    pub fn dsbgvd_(
        jobz: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        n: *mut ::std::os::raw::c_int,
        ka: *mut ::std::os::raw::c_int,
        kb: *mut ::std::os::raw::c_int,
        ab: *mut f64,
        ldab: *mut ::std::os::raw::c_int,
        bb: *mut f64,
        ldbb: *mut ::std::os::raw::c_int,
        w: *mut f64,
        z: *mut f64,
        ldz: *mut ::std::os::raw::c_int,
        work: *mut f64,
        lwork: *mut ::std::os::raw::c_int,
        iwork: *mut ::std::os::raw::c_int,
        liwork: *mut ::std::os::raw::c_int,
        info: *mut ::std::os::raw::c_int,
        arg1: usize,
        arg2: usize,
    );
    pub fn dsbgvx_(
        jobz: *const ::std::os::raw::c_char,
        range: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        n: *mut ::std::os::raw::c_int,
        ka: *mut ::std::os::raw::c_int,
        kb: *mut ::std::os::raw::c_int,
        ab: *mut f64,
        ldab: *mut ::std::os::raw::c_int,
        bb: *mut f64,
        ldbb: *mut ::std::os::raw::c_int,
        q: *mut f64,
        ldq: *mut ::std::os::raw::c_int,
        vl: *mut f64,
        vu: *mut f64,
        il: *mut ::std::os::raw::c_int,
        iu: *mut ::std::os::raw::c_int,
        abstol: *mut f64,
        m: *mut *mut ::std::os::raw::c_int,
        w: *mut f64,
        z: *mut f64,
        ldz: *mut ::std::os::raw::c_int,
        work: *mut f64,
        iwork: *mut ::std::os::raw::c_int,
        ifail: *mut ::std::os::raw::c_int,
        info: *mut ::std::os::raw::c_int,
        arg1: usize,
        arg2: usize,
        arg3: usize,
    );
    pub fn dspgvd_(
        itype: *mut ::std::os::raw::c_int,
        jobz: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        n: *mut ::std::os::raw::c_int,
        ap: *mut f64,
        bp: *mut f64,
        w: *mut f64,
        z: *mut f64,
        ldz: *mut ::std::os::raw::c_int,
        work: *mut f64,
        lwork: *mut ::std::os::raw::c_int,
        iwork: *mut ::std::os::raw::c_int,
        liwork: *mut ::std::os::raw::c_int,
        info: *mut ::std::os::raw::c_int,
        arg1: usize,
        arg2: usize,
    );
    pub fn dspgvx_(
        itype: *mut ::std::os::raw::c_int,
        jobz: *const ::std::os::raw::c_char,
        range: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        n: *mut ::std::os::raw::c_int,
        ap: *mut f64,
        bp: *mut f64,
        vl: *mut f64,
        vu: *mut f64,
        il: *mut ::std::os::raw::c_int,
        iu: *mut ::std::os::raw::c_int,
        abstol: *mut f64,
        m: *mut *mut ::std::os::raw::c_int,
        w: *mut f64,
        z: *mut f64,
        ldz: *mut ::std::os::raw::c_int,
        work: *mut f64,
        iwork: *mut ::std::os::raw::c_int,
        ifail: *mut ::std::os::raw::c_int,
        info: *mut ::std::os::raw::c_int,
        arg1: usize,
        arg2: usize,
        arg3: usize,
    );
    pub fn dstegr_(
        jobz: *const ::std::os::raw::c_char,
        range: *const ::std::os::raw::c_char,
        n: *mut ::std::os::raw::c_int,
        d: *mut f64,
        e: *mut f64,
        vl: *mut f64,
        vu: *mut f64,
        il: *mut ::std::os::raw::c_int,
        iu: *mut ::std::os::raw::c_int,
        abstol: *mut f64,
        m: *mut ::std::os::raw::c_int,
        w: *mut f64,
        z: *mut f64,
        ldz: *mut ::std::os::raw::c_int,
        isuppz: *mut ::std::os::raw::c_int,
        work: *mut f64,
        lwork: *mut ::std::os::raw::c_int,
        iwork: *mut ::std::os::raw::c_int,
        liwork: *mut ::std::os::raw::c_int,
        info: *mut ::std::os::raw::c_int,
        arg1: usize,
        arg2: usize,
    );
    pub fn dstevr_(
        jobz: *const ::std::os::raw::c_char,
        range: *const ::std::os::raw::c_char,
        n: *mut ::std::os::raw::c_int,
        d: *mut f64,
        e: *mut f64,
        vl: *mut f64,
        vu: *mut f64,
        il: *mut ::std::os::raw::c_int,
        iu: *mut ::std::os::raw::c_int,
        abstol: *mut f64,
        m: *mut ::std::os::raw::c_int,
        w: *mut f64,
        z: *mut f64,
        ldz: *mut ::std::os::raw::c_int,
        isuppz: *mut ::std::os::raw::c_int,
        work: *mut f64,
        lwork: *mut ::std::os::raw::c_int,
        iwork: *mut ::std::os::raw::c_int,
        liwork: *mut ::std::os::raw::c_int,
        info: *mut ::std::os::raw::c_int,
        arg1: usize,
        arg2: usize,
    );
    pub fn dsygvd_(
        itype: *mut ::std::os::raw::c_int,
        jobz: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        n: *mut ::std::os::raw::c_int,
        a: *mut f64,
        lda: *mut ::std::os::raw::c_int,
        b: *mut f64,
        ldb: *mut ::std::os::raw::c_int,
        w: *mut f64,
        work: *mut f64,
        lwork: *mut ::std::os::raw::c_int,
        iwork: *mut ::std::os::raw::c_int,
        liwork: *mut ::std::os::raw::c_int,
        info: *mut ::std::os::raw::c_int,
        arg1: usize,
        arg2: usize,
    );
    pub fn dsygvx_(
        itype: *mut ::std::os::raw::c_int,
        jobz: *const ::std::os::raw::c_char,
        range: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        n: *mut ::std::os::raw::c_int,
        a: *mut f64,
        lda: *mut ::std::os::raw::c_int,
        b: *mut f64,
        ldb: *mut ::std::os::raw::c_int,
        vl: *mut f64,
        vu: *mut f64,
        il: *mut ::std::os::raw::c_int,
        iu: *mut ::std::os::raw::c_int,
        abstol: *mut f64,
        m: *mut ::std::os::raw::c_int,
        w: *mut f64,
        z: *mut f64,
        ldz: *mut ::std::os::raw::c_int,
        work: *mut f64,
        lwork: *mut ::std::os::raw::c_int,
        iwork: *mut ::std::os::raw::c_int,
        ifail: *mut ::std::os::raw::c_int,
        info: *mut ::std::os::raw::c_int,
        arg1: usize,
        arg2: usize,
        arg3: usize,
    );
    pub fn dtgex2_(
        wantq: *const ::std::os::raw::c_int,
        wantz: *const ::std::os::raw::c_int,
        n: *mut ::std::os::raw::c_int,
        a: *mut f64,
        lda: *mut ::std::os::raw::c_int,
        b: *mut f64,
        ldb: *mut ::std::os::raw::c_int,
        q: *mut f64,
        ldq: *mut ::std::os::raw::c_int,
        z: *mut f64,
        ldz: *mut ::std::os::raw::c_int,
        j1: *mut ::std::os::raw::c_int,
        n1: *mut ::std::os::raw::c_int,
        n2: *mut ::std::os::raw::c_int,
        work: *mut f64,
        lwork: *mut ::std::os::raw::c_int,
        info: *mut ::std::os::raw::c_int,
    );
    pub fn dtgexc_(
        wantq: *mut ::std::os::raw::c_int,
        wantz: *mut ::std::os::raw::c_int,
        n: *mut ::std::os::raw::c_int,
        a: *mut f64,
        lda: *mut ::std::os::raw::c_int,
        b: *mut f64,
        ldb: *mut ::std::os::raw::c_int,
        q: *mut f64,
        ldq: *mut ::std::os::raw::c_int,
        z: *mut f64,
        ldz: *mut ::std::os::raw::c_int,
        ifst: *mut ::std::os::raw::c_int,
        ilst: *mut ::std::os::raw::c_int,
        work: *mut f64,
        lwork: *mut ::std::os::raw::c_int,
        info: *mut ::std::os::raw::c_int,
    );
    pub fn dtgsen_(
        ijob: *mut ::std::os::raw::c_int,
        wantq: *const ::std::os::raw::c_int,
        wantz: *const ::std::os::raw::c_int,
        select: *const ::std::os::raw::c_int,
        n: *mut ::std::os::raw::c_int,
        a: *mut f64,
        lda: *mut ::std::os::raw::c_int,
        b: *mut f64,
        ldb: *mut ::std::os::raw::c_int,
        alphar: *mut f64,
        alphai: *mut f64,
        beta: *mut f64,
        q: *mut f64,
        ldq: *mut ::std::os::raw::c_int,
        z: *mut f64,
        ldz: *mut ::std::os::raw::c_int,
        m: *mut ::std::os::raw::c_int,
        pl: *mut f64,
        pr: *mut f64,
        dif: *mut f64,
        work: *mut f64,
        lwork: *mut ::std::os::raw::c_int,
        iwork: *mut ::std::os::raw::c_int,
        liwork: *mut ::std::os::raw::c_int,
        info: *mut ::std::os::raw::c_int,
    );
    pub fn dtgsna_(
        job: *const ::std::os::raw::c_char,
        howmny: *const ::std::os::raw::c_char,
        select: *mut ::std::os::raw::c_int,
        n: *mut ::std::os::raw::c_int,
        a: *mut f64,
        lda: *mut ::std::os::raw::c_int,
        b: *mut f64,
        ldb: *mut ::std::os::raw::c_int,
        vl: *mut f64,
        ldvl: *mut ::std::os::raw::c_int,
        vr: *mut f64,
        ldvr: *mut ::std::os::raw::c_int,
        s: *mut f64,
        dif: *mut f64,
        mm: *mut ::std::os::raw::c_int,
        m: *mut ::std::os::raw::c_int,
        work: *mut f64,
        lwork: *mut ::std::os::raw::c_int,
        iwork: *mut ::std::os::raw::c_int,
        info: *mut ::std::os::raw::c_int,
        arg1: usize,
        arg2: usize,
    );
    pub fn dtgsy2_(
        trans: *const ::std::os::raw::c_char,
        ijob: *mut ::std::os::raw::c_int,
        m: *mut ::std::os::raw::c_int,
        n: *mut ::std::os::raw::c_int,
        a: *mut f64,
        lda: *mut ::std::os::raw::c_int,
        b: *mut f64,
        ldb: *mut ::std::os::raw::c_int,
        c: *mut f64,
        ldc: *mut ::std::os::raw::c_int,
        d: *mut f64,
        ldd: *mut ::std::os::raw::c_int,
        e: *mut f64,
        lde: *mut ::std::os::raw::c_int,
        f: *mut f64,
        ldf: *mut ::std::os::raw::c_int,
        scale: *mut f64,
        rdsum: *mut f64,
        rdscal: *mut f64,
        iwork: *mut ::std::os::raw::c_int,
        pq: *mut *mut ::std::os::raw::c_int,
        info: *mut ::std::os::raw::c_int,
        arg1: usize,
    );
    pub fn dtgsyl_(
        trans: *const ::std::os::raw::c_char,
        ijob: *mut ::std::os::raw::c_int,
        m: *mut ::std::os::raw::c_int,
        n: *mut ::std::os::raw::c_int,
        a: *mut f64,
        lda: *mut ::std::os::raw::c_int,
        b: *mut f64,
        ldb: *mut ::std::os::raw::c_int,
        c: *mut f64,
        ldc: *mut ::std::os::raw::c_int,
        d: *mut f64,
        ldd: *mut ::std::os::raw::c_int,
        e: *mut f64,
        lde: *mut ::std::os::raw::c_int,
        f: *mut f64,
        ldf: *mut ::std::os::raw::c_int,
        scale: *mut f64,
        dif: *mut f64,
        work: *mut f64,
        lwork: *mut ::std::os::raw::c_int,
        iwork: *mut ::std::os::raw::c_int,
        info: *mut ::std::os::raw::c_int,
        arg1: usize,
    );
    pub fn dtzrzf_(
        m: *mut ::std::os::raw::c_int,
        n: *mut ::std::os::raw::c_int,
        a: *mut f64,
        lda: *mut ::std::os::raw::c_int,
        tau: *mut f64,
        work: *mut f64,
        lwork: *mut ::std::os::raw::c_int,
        info: *mut ::std::os::raw::c_int,
    );
    pub fn dpstrf_(
        uplo: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        a: *mut f64,
        lda: *const ::std::os::raw::c_int,
        piv: *mut ::std::os::raw::c_int,
        rank: *mut ::std::os::raw::c_int,
        tol: *mut f64,
        work: *mut f64,
        info: *mut ::std::os::raw::c_int,
        arg1: usize,
    );
    pub fn lsame_(
        ca: *const ::std::os::raw::c_char,
        cb: *const ::std::os::raw::c_char,
        arg1: usize,
        arg2: usize,
    ) -> *mut ::std::os::raw::c_int;
    pub fn zbdsqr_(
        uplo: *const ::std::os::raw::c_char,
        n: *mut ::std::os::raw::c_int,
        ncvt: *mut ::std::os::raw::c_int,
        nru: *mut ::std::os::raw::c_int,
        ncc: *mut ::std::os::raw::c_int,
        d: *mut f64,
        e: *mut f64,
        vt: *mut Rcomplex,
        ldvt: *mut ::std::os::raw::c_int,
        u: *mut Rcomplex,
        ldu: *mut ::std::os::raw::c_int,
        c: *mut Rcomplex,
        ldc: *mut ::std::os::raw::c_int,
        rwork: *mut f64,
        info: *mut ::std::os::raw::c_int,
        arg1: usize,
    );
    pub fn zgebak_(
        job: *const ::std::os::raw::c_char,
        side: *const ::std::os::raw::c_char,
        n: *mut ::std::os::raw::c_int,
        ilo: *mut ::std::os::raw::c_int,
        ihi: *mut ::std::os::raw::c_int,
        scale: *mut f64,
        m: *mut ::std::os::raw::c_int,
        v: *mut Rcomplex,
        ldv: *mut ::std::os::raw::c_int,
        info: *mut ::std::os::raw::c_int,
        arg1: usize,
        arg2: usize,
    );
    pub fn zgebal_(
        job: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        a: *mut Rcomplex,
        lda: *const ::std::os::raw::c_int,
        ilo: *mut ::std::os::raw::c_int,
        ihi: *mut ::std::os::raw::c_int,
        scale: *mut f64,
        info: *mut ::std::os::raw::c_int,
        arg1: usize,
    );
    pub fn zgebd2_(
        m: *mut ::std::os::raw::c_int,
        n: *mut ::std::os::raw::c_int,
        a: *mut Rcomplex,
        lda: *mut ::std::os::raw::c_int,
        d: *mut f64,
        e: *mut f64,
        tauq: *mut Rcomplex,
        taup: *mut Rcomplex,
        work: *mut Rcomplex,
        info: *mut ::std::os::raw::c_int,
    );
    pub fn zgebrd_(
        m: *mut ::std::os::raw::c_int,
        n: *mut ::std::os::raw::c_int,
        a: *mut Rcomplex,
        lda: *mut ::std::os::raw::c_int,
        d: *mut f64,
        e: *mut f64,
        tauq: *mut Rcomplex,
        taup: *mut Rcomplex,
        work: *mut Rcomplex,
        lwork: *mut ::std::os::raw::c_int,
        info: *mut ::std::os::raw::c_int,
    );
    pub fn zgehd2_(
        n: *mut ::std::os::raw::c_int,
        ilo: *mut ::std::os::raw::c_int,
        ihi: *mut ::std::os::raw::c_int,
        a: *mut Rcomplex,
        lda: *mut ::std::os::raw::c_int,
        tau: *mut Rcomplex,
        work: *mut Rcomplex,
        info: *mut ::std::os::raw::c_int,
    );
    pub fn zgehrd_(
        n: *mut ::std::os::raw::c_int,
        ilo: *mut ::std::os::raw::c_int,
        ihi: *mut ::std::os::raw::c_int,
        a: *mut Rcomplex,
        lda: *mut ::std::os::raw::c_int,
        tau: *mut Rcomplex,
        work: *mut Rcomplex,
        lwork: *mut ::std::os::raw::c_int,
        info: *mut ::std::os::raw::c_int,
    );
    pub fn zgelq2_(
        m: *mut ::std::os::raw::c_int,
        n: *mut ::std::os::raw::c_int,
        a: *mut Rcomplex,
        lda: *mut ::std::os::raw::c_int,
        tau: *mut Rcomplex,
        work: *mut Rcomplex,
        info: *mut ::std::os::raw::c_int,
    );
    pub fn zgelqf_(
        m: *mut ::std::os::raw::c_int,
        n: *mut ::std::os::raw::c_int,
        a: *mut Rcomplex,
        lda: *mut ::std::os::raw::c_int,
        tau: *mut Rcomplex,
        work: *mut Rcomplex,
        lwork: *mut ::std::os::raw::c_int,
        info: *mut ::std::os::raw::c_int,
    );
    pub fn zgeqr2_(
        m: *mut ::std::os::raw::c_int,
        n: *mut ::std::os::raw::c_int,
        a: *mut Rcomplex,
        lda: *mut ::std::os::raw::c_int,
        tau: *mut Rcomplex,
        work: *mut Rcomplex,
        info: *mut ::std::os::raw::c_int,
    );
    pub fn zgeqrf_(
        m: *mut ::std::os::raw::c_int,
        n: *mut ::std::os::raw::c_int,
        a: *mut Rcomplex,
        lda: *mut ::std::os::raw::c_int,
        tau: *mut Rcomplex,
        work: *mut Rcomplex,
        lwork: *mut ::std::os::raw::c_int,
        info: *mut ::std::os::raw::c_int,
    );
    pub fn zgetf2_(
        m: *mut ::std::os::raw::c_int,
        n: *mut ::std::os::raw::c_int,
        a: *mut Rcomplex,
        lda: *mut ::std::os::raw::c_int,
        ipiv: *mut ::std::os::raw::c_int,
        info: *mut ::std::os::raw::c_int,
    );
    pub fn zgetrf_(
        m: *mut ::std::os::raw::c_int,
        n: *mut ::std::os::raw::c_int,
        a: *mut Rcomplex,
        lda: *mut ::std::os::raw::c_int,
        ipiv: *mut ::std::os::raw::c_int,
        info: *mut ::std::os::raw::c_int,
    );
    pub fn zgetrf2_(
        m: *mut ::std::os::raw::c_int,
        n: *mut ::std::os::raw::c_int,
        a: *mut Rcomplex,
        lda: *mut ::std::os::raw::c_int,
        ipiv: *mut ::std::os::raw::c_int,
        info: *mut ::std::os::raw::c_int,
    );
    pub fn zgetri_(
        n: *mut ::std::os::raw::c_int,
        a: *mut Rcomplex,
        lda: *mut ::std::os::raw::c_int,
        ipiv: *mut ::std::os::raw::c_int,
        work: *mut Rcomplex,
        lwork: *mut ::std::os::raw::c_int,
        info: *mut ::std::os::raw::c_int,
    );
    pub fn zgetrs_(
        trans: *const ::std::os::raw::c_char,
        n: *mut ::std::os::raw::c_int,
        nrhs: *mut ::std::os::raw::c_int,
        a: *mut Rcomplex,
        lda: *mut ::std::os::raw::c_int,
        ipiv: *mut ::std::os::raw::c_int,
        b: *mut Rcomplex,
        ldb: *mut ::std::os::raw::c_int,
        info: *mut ::std::os::raw::c_int,
        arg1: usize,
    );
    pub fn zhetd2_(
        uplo: *const ::std::os::raw::c_char,
        n: *mut ::std::os::raw::c_int,
        a: *mut Rcomplex,
        lda: *mut ::std::os::raw::c_int,
        d: *mut f64,
        e: *mut f64,
        tau: *mut Rcomplex,
        info: *mut ::std::os::raw::c_int,
        arg1: usize,
    );
    pub fn zhetrd_(
        uplo: *const ::std::os::raw::c_char,
        n: *mut ::std::os::raw::c_int,
        a: *mut Rcomplex,
        lda: *mut ::std::os::raw::c_int,
        d: *mut f64,
        e: *mut f64,
        tau: *mut Rcomplex,
        work: *mut Rcomplex,
        lwork: *mut ::std::os::raw::c_int,
        info: *mut ::std::os::raw::c_int,
        arg1: usize,
    );
    pub fn zhseqr_(
        job: *const ::std::os::raw::c_char,
        compz: *const ::std::os::raw::c_char,
        n: *mut ::std::os::raw::c_int,
        ilo: *mut ::std::os::raw::c_int,
        ihi: *mut ::std::os::raw::c_int,
        h: *mut Rcomplex,
        ldh: *mut ::std::os::raw::c_int,
        w: *mut Rcomplex,
        z: *mut Rcomplex,
        ldz: *mut ::std::os::raw::c_int,
        work: *mut Rcomplex,
        lwork: *mut ::std::os::raw::c_int,
        info: *mut ::std::os::raw::c_int,
        arg1: usize,
        arg2: usize,
    );
    pub fn zlabrd_(
        m: *mut ::std::os::raw::c_int,
        n: *mut ::std::os::raw::c_int,
        nb: *mut ::std::os::raw::c_int,
        a: *mut Rcomplex,
        lda: *mut ::std::os::raw::c_int,
        d: *mut f64,
        e: *mut f64,
        tauq: *mut Rcomplex,
        taup: *mut Rcomplex,
        x: *mut Rcomplex,
        ldx: *mut ::std::os::raw::c_int,
        y: *mut Rcomplex,
        ldy: *mut ::std::os::raw::c_int,
    );
    pub fn zlacgv_(
        n: *mut ::std::os::raw::c_int,
        x: *mut Rcomplex,
        incx: *mut ::std::os::raw::c_int,
    );
    pub fn zlacpy_(
        uplo: *const ::std::os::raw::c_char,
        m: *mut ::std::os::raw::c_int,
        n: *mut ::std::os::raw::c_int,
        a: *mut Rcomplex,
        lda: *mut ::std::os::raw::c_int,
        b: *mut Rcomplex,
        ldb: *mut ::std::os::raw::c_int,
        arg1: usize,
    );
    pub fn zlahqr_(
        wantt: *mut ::std::os::raw::c_int,
        wantz: *mut ::std::os::raw::c_int,
        n: *mut ::std::os::raw::c_int,
        ilo: *mut ::std::os::raw::c_int,
        ihi: *mut ::std::os::raw::c_int,
        h: *mut Rcomplex,
        ldh: *mut ::std::os::raw::c_int,
        w: *mut Rcomplex,
        iloz: *mut ::std::os::raw::c_int,
        ihiz: *mut ::std::os::raw::c_int,
        z: *mut Rcomplex,
        ldz: *mut ::std::os::raw::c_int,
        info: *mut ::std::os::raw::c_int,
    );
    pub fn zlange_(
        norm: *const ::std::os::raw::c_char,
        m: *mut ::std::os::raw::c_int,
        n: *mut ::std::os::raw::c_int,
        a: *mut Rcomplex,
        lda: *mut ::std::os::raw::c_int,
        work: *mut f64,
        arg1: usize,
    ) -> f64;
    pub fn zlanhe_(
        norm: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        n: *mut ::std::os::raw::c_int,
        a: *mut Rcomplex,
        lda: *mut ::std::os::raw::c_int,
        work: *mut f64,
        arg1: usize,
        arg2: usize,
    ) -> f64;
    pub fn zlanhs_(
        norm: *const ::std::os::raw::c_char,
        n: *mut ::std::os::raw::c_int,
        a: *mut Rcomplex,
        lda: *mut ::std::os::raw::c_int,
        work: *mut f64,
        arg1: usize,
    ) -> f64;
    pub fn zlantp_(
        norm: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        diag: *const ::std::os::raw::c_char,
        n: *mut ::std::os::raw::c_int,
        ap: *mut Rcomplex,
        work: *mut f64,
        arg1: usize,
        arg2: usize,
        arg3: usize,
    ) -> f64;
    pub fn zlaqp2_(
        m: *mut ::std::os::raw::c_int,
        n: *mut ::std::os::raw::c_int,
        offset: *mut ::std::os::raw::c_int,
        a: *mut Rcomplex,
        lda: *mut ::std::os::raw::c_int,
        jpvt: *mut ::std::os::raw::c_int,
        tau: *mut Rcomplex,
        vn1: *mut f64,
        vn2: *mut f64,
        work: *mut Rcomplex,
    );
    pub fn zlaqps_(
        m: *mut ::std::os::raw::c_int,
        n: *mut ::std::os::raw::c_int,
        offset: *mut ::std::os::raw::c_int,
        nb: *mut *mut ::std::os::raw::c_int,
        kb: *mut ::std::os::raw::c_int,
        a: *mut Rcomplex,
        lda: *mut ::std::os::raw::c_int,
        jpvt: *mut ::std::os::raw::c_int,
        tau: *mut Rcomplex,
        vn1: *mut f64,
        vn2: *mut f64,
        auxv: *mut Rcomplex,
        f: *mut Rcomplex,
        ldf: *mut ::std::os::raw::c_int,
    );
    pub fn zlarf_(
        side: *const ::std::os::raw::c_char,
        m: *mut ::std::os::raw::c_int,
        n: *mut ::std::os::raw::c_int,
        v: *mut Rcomplex,
        incv: *mut ::std::os::raw::c_int,
        tau: *mut Rcomplex,
        c: *mut Rcomplex,
        ldc: *mut ::std::os::raw::c_int,
        work: *mut Rcomplex,
        arg1: usize,
    );
    pub fn zlarfb_(
        side: *const ::std::os::raw::c_char,
        trans: *const ::std::os::raw::c_char,
        direct: *const ::std::os::raw::c_char,
        storev: *const ::std::os::raw::c_char,
        m: *mut ::std::os::raw::c_int,
        n: *mut ::std::os::raw::c_int,
        k: *mut ::std::os::raw::c_int,
        v: *mut Rcomplex,
        ldv: *mut ::std::os::raw::c_int,
        t: *mut Rcomplex,
        ldt: *mut ::std::os::raw::c_int,
        c: *mut Rcomplex,
        ldc: *mut ::std::os::raw::c_int,
        work: *mut Rcomplex,
        ldwork: *mut ::std::os::raw::c_int,
        arg1: usize,
        arg2: usize,
        arg3: usize,
        arg4: usize,
    );
    pub fn zlarfg_(
        n: *mut ::std::os::raw::c_int,
        alpha: *mut Rcomplex,
        x: *mut Rcomplex,
        incx: *mut ::std::os::raw::c_int,
        tau: *mut Rcomplex,
    );
    pub fn zlarft_(
        direct: *const ::std::os::raw::c_char,
        storev: *const ::std::os::raw::c_char,
        n: *mut ::std::os::raw::c_int,
        k: *mut ::std::os::raw::c_int,
        v: *mut Rcomplex,
        ldv: *mut ::std::os::raw::c_int,
        tau: *mut Rcomplex,
        t: *mut Rcomplex,
        ldt: *mut ::std::os::raw::c_int,
        arg1: usize,
        arg2: usize,
    );
    pub fn zlarfx_(
        side: *const ::std::os::raw::c_char,
        m: *mut ::std::os::raw::c_int,
        n: *mut ::std::os::raw::c_int,
        v: *mut Rcomplex,
        tau: *mut Rcomplex,
        c: *mut Rcomplex,
        ldc: *mut ::std::os::raw::c_int,
        work: *mut Rcomplex,
        arg1: usize,
    );
    pub fn zlascl_(
        type_: *const ::std::os::raw::c_char,
        kl: *mut ::std::os::raw::c_int,
        ku: *mut ::std::os::raw::c_int,
        cfrom: *mut f64,
        cto: *mut f64,
        m: *mut ::std::os::raw::c_int,
        n: *mut ::std::os::raw::c_int,
        a: *mut Rcomplex,
        lda: *mut ::std::os::raw::c_int,
        info: *mut ::std::os::raw::c_int,
        arg1: usize,
    );
    pub fn zlaset_(
        uplo: *const ::std::os::raw::c_char,
        m: *mut ::std::os::raw::c_int,
        n: *mut ::std::os::raw::c_int,
        alpha: *mut Rcomplex,
        beta: *mut Rcomplex,
        a: *mut Rcomplex,
        lda: *mut ::std::os::raw::c_int,
        arg1: usize,
    );
    pub fn zlasr_(
        side: *const ::std::os::raw::c_char,
        pivot: *const ::std::os::raw::c_char,
        direct: *const ::std::os::raw::c_char,
        m: *mut ::std::os::raw::c_int,
        n: *mut ::std::os::raw::c_int,
        c: *mut f64,
        s: *mut f64,
        a: *mut Rcomplex,
        lda: *mut ::std::os::raw::c_int,
        arg1: usize,
        arg2: usize,
        arg3: usize,
    );
    pub fn zlassq_(
        n: *mut ::std::os::raw::c_int,
        x: *mut Rcomplex,
        incx: *mut ::std::os::raw::c_int,
        scale: *mut f64,
        sumsq: *mut f64,
    );
    pub fn zlaswp_(
        n: *mut ::std::os::raw::c_int,
        a: *mut Rcomplex,
        lda: *mut ::std::os::raw::c_int,
        k1: *mut ::std::os::raw::c_int,
        k2: *mut ::std::os::raw::c_int,
        ipiv: *mut ::std::os::raw::c_int,
        incx: *mut ::std::os::raw::c_int,
    );
    pub fn zlatrd_(
        uplo: *const ::std::os::raw::c_char,
        n: *mut ::std::os::raw::c_int,
        nb: *mut ::std::os::raw::c_int,
        a: *mut Rcomplex,
        lda: *mut ::std::os::raw::c_int,
        e: *mut f64,
        tau: *mut Rcomplex,
        w: *mut Rcomplex,
        ldw: *mut ::std::os::raw::c_int,
        arg1: usize,
    );
    pub fn zlatrs_(
        uplo: *const ::std::os::raw::c_char,
        trans: *const ::std::os::raw::c_char,
        diag: *const ::std::os::raw::c_char,
        normin: *const ::std::os::raw::c_char,
        n: *mut ::std::os::raw::c_int,
        a: *mut Rcomplex,
        lda: *mut ::std::os::raw::c_int,
        x: *mut Rcomplex,
        scale: *mut f64,
        cnorm: *mut f64,
        info: *mut ::std::os::raw::c_int,
        arg1: usize,
        arg2: usize,
        arg3: usize,
        arg4: usize,
    );
    pub fn zsteqr_(
        compz: *const ::std::os::raw::c_char,
        n: *mut ::std::os::raw::c_int,
        d: *mut f64,
        e: *mut f64,
        z: *mut Rcomplex,
        ldz: *mut ::std::os::raw::c_int,
        work: *mut f64,
        info: *mut ::std::os::raw::c_int,
        arg1: usize,
    );
    pub fn zpocon_(
        uplo: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        a: *const Rcomplex,
        lda: *const ::std::os::raw::c_int,
        anorm: *const f64,
        rcond: *mut f64,
        work: *mut Rcomplex,
        rwork: *mut f64,
        info: *mut ::std::os::raw::c_int,
        arg1: usize,
    );
    pub fn zspcon_(
        uplo: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        ap: *const Rcomplex,
        ipiv: *const ::std::os::raw::c_int,
        anorm: *const f64,
        rcond: *mut f64,
        work: *mut Rcomplex,
        info: *mut ::std::os::raw::c_int,
        arg1: usize,
    );
    pub fn zsptrf_(
        uplo: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        ap: *mut Rcomplex,
        ipiv: *mut ::std::os::raw::c_int,
        info: *mut ::std::os::raw::c_int,
        arg1: usize,
    );
    pub fn zsptri_(
        uplo: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        ap: *mut Rcomplex,
        ipiv: *mut ::std::os::raw::c_int,
        work: *mut Rcomplex,
        info: *mut ::std::os::raw::c_int,
        arg1: usize,
    );
    pub fn zsptrs_(
        uplo: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        nrhs: *const ::std::os::raw::c_int,
        ap: *const Rcomplex,
        ipiv: *const ::std::os::raw::c_int,
        b: *mut Rcomplex,
        ldb: *const ::std::os::raw::c_int,
        info: *mut ::std::os::raw::c_int,
        arg1: usize,
    );
    pub fn zsycon_(
        uplo: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        a: *const Rcomplex,
        lda: *const ::std::os::raw::c_int,
        ipiv: *mut ::std::os::raw::c_int,
        anorm: *const f64,
        rcond: *mut f64,
        work: *mut Rcomplex,
        info: *mut ::std::os::raw::c_int,
        arg1: usize,
    );
    pub fn zsymv_(
        uplo: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        alpha: *const Rcomplex,
        a: *const Rcomplex,
        lda: *const ::std::os::raw::c_int,
        x: *const Rcomplex,
        incx: *const ::std::os::raw::c_int,
        beta: *const Rcomplex,
        y: *mut Rcomplex,
        incy: *const ::std::os::raw::c_int,
        arg1: usize,
    );
    pub fn zsytrf_(
        uplo: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        a: *mut Rcomplex,
        lda: *const ::std::os::raw::c_int,
        ipiv: *mut ::std::os::raw::c_int,
        work: *mut Rcomplex,
        lwork: *const ::std::os::raw::c_int,
        info: *mut ::std::os::raw::c_int,
        arg1: usize,
    );
    pub fn zsytri_(
        uplo: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        a: *mut Rcomplex,
        lda: *const ::std::os::raw::c_int,
        ipiv: *const ::std::os::raw::c_int,
        work: *mut Rcomplex,
        info: *mut ::std::os::raw::c_int,
        arg1: usize,
    );
    pub fn zsytrs_(
        uplo: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        nrhs: *const ::std::os::raw::c_int,
        a: *const Rcomplex,
        lda: *const ::std::os::raw::c_int,
        ipiv: *const ::std::os::raw::c_int,
        b: *mut Rcomplex,
        ldb: *const ::std::os::raw::c_int,
        info: *mut ::std::os::raw::c_int,
        arg1: usize,
    );
    pub fn ztpcon_(
        norm: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        diag: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        ap: *const Rcomplex,
        rcond: *mut f64,
        work: *mut Rcomplex,
        rwork: *mut f64,
        info: *mut ::std::os::raw::c_int,
        arg1: usize,
        arg2: usize,
        arg3: usize,
    );
    pub fn ztptri_(
        uplo: *const ::std::os::raw::c_char,
        diag: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        ap: *mut Rcomplex,
        info: *mut ::std::os::raw::c_int,
        arg1: usize,
        arg2: usize,
    );
    pub fn ztptrs_(
        uplo: *const ::std::os::raw::c_char,
        trans: *const ::std::os::raw::c_char,
        diag: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        nrhs: *const ::std::os::raw::c_int,
        ap: *const Rcomplex,
        b: *mut Rcomplex,
        ldb: *const ::std::os::raw::c_int,
        info: *mut ::std::os::raw::c_int,
        arg1: usize,
        arg2: usize,
        arg3: usize,
    );
    pub fn ztrtri_(
        uplo: *const ::std::os::raw::c_char,
        diag: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        a: *mut Rcomplex,
        lda: *const ::std::os::raw::c_int,
        info: *mut ::std::os::raw::c_int,
        arg1: usize,
        arg2: usize,
    );
    pub fn ztrcon_(
        norm: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        diag: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        a: *const Rcomplex,
        lda: *const ::std::os::raw::c_int,
        rcond: *mut f64,
        work: *mut Rcomplex,
        rwork: *mut f64,
        info: *mut ::std::os::raw::c_int,
        arg1: usize,
        arg2: usize,
        arg3: usize,
    );
    pub fn ztrevc_(
        side: *const ::std::os::raw::c_char,
        howmny: *const ::std::os::raw::c_char,
        select: *mut ::std::os::raw::c_int,
        n: *mut ::std::os::raw::c_int,
        t: *mut Rcomplex,
        ldt: *mut ::std::os::raw::c_int,
        vl: *mut Rcomplex,
        ldvl: *mut ::std::os::raw::c_int,
        vr: *mut Rcomplex,
        ldvr: *mut ::std::os::raw::c_int,
        mm: *mut ::std::os::raw::c_int,
        m: *mut *mut ::std::os::raw::c_int,
        work: *mut Rcomplex,
        rwork: *mut f64,
        info: *mut ::std::os::raw::c_int,
        arg1: usize,
        arg2: usize,
    );
    pub fn zung2l_(
        m: *mut ::std::os::raw::c_int,
        n: *mut ::std::os::raw::c_int,
        k: *mut ::std::os::raw::c_int,
        a: *mut Rcomplex,
        lda: *mut ::std::os::raw::c_int,
        tau: *mut Rcomplex,
        work: *mut Rcomplex,
        info: *mut ::std::os::raw::c_int,
    );
    pub fn zung2r_(
        m: *mut ::std::os::raw::c_int,
        n: *mut ::std::os::raw::c_int,
        k: *mut ::std::os::raw::c_int,
        a: *mut Rcomplex,
        lda: *mut ::std::os::raw::c_int,
        tau: *mut Rcomplex,
        work: *mut Rcomplex,
        info: *mut ::std::os::raw::c_int,
    );
    pub fn zungbr_(
        vect: *const ::std::os::raw::c_char,
        m: *mut ::std::os::raw::c_int,
        n: *mut ::std::os::raw::c_int,
        k: *mut ::std::os::raw::c_int,
        a: *mut Rcomplex,
        lda: *mut ::std::os::raw::c_int,
        tau: *mut Rcomplex,
        work: *mut Rcomplex,
        lwork: *mut ::std::os::raw::c_int,
        info: *mut ::std::os::raw::c_int,
        arg1: usize,
    );
    pub fn zunghr_(
        n: *mut ::std::os::raw::c_int,
        ilo: *mut ::std::os::raw::c_int,
        ihi: *mut ::std::os::raw::c_int,
        a: *mut Rcomplex,
        lda: *mut ::std::os::raw::c_int,
        tau: *mut Rcomplex,
        work: *mut Rcomplex,
        lwork: *mut ::std::os::raw::c_int,
        info: *mut ::std::os::raw::c_int,
    );
    pub fn zungl2_(
        m: *mut ::std::os::raw::c_int,
        n: *mut ::std::os::raw::c_int,
        k: *mut ::std::os::raw::c_int,
        a: *mut Rcomplex,
        lda: *mut ::std::os::raw::c_int,
        tau: *mut Rcomplex,
        work: *mut Rcomplex,
        info: *mut ::std::os::raw::c_int,
    );
    pub fn zunglq_(
        m: *mut ::std::os::raw::c_int,
        n: *mut ::std::os::raw::c_int,
        k: *mut ::std::os::raw::c_int,
        a: *mut Rcomplex,
        lda: *mut ::std::os::raw::c_int,
        tau: *mut Rcomplex,
        work: *mut Rcomplex,
        lwork: *mut ::std::os::raw::c_int,
        info: *mut ::std::os::raw::c_int,
    );
    pub fn zungql_(
        m: *mut ::std::os::raw::c_int,
        n: *mut ::std::os::raw::c_int,
        k: *mut ::std::os::raw::c_int,
        a: *mut Rcomplex,
        lda: *mut ::std::os::raw::c_int,
        tau: *mut Rcomplex,
        work: *mut Rcomplex,
        lwork: *mut ::std::os::raw::c_int,
        info: *mut ::std::os::raw::c_int,
    );
    pub fn zungqr_(
        m: *mut ::std::os::raw::c_int,
        n: *mut ::std::os::raw::c_int,
        k: *mut ::std::os::raw::c_int,
        a: *mut Rcomplex,
        lda: *mut ::std::os::raw::c_int,
        tau: *mut Rcomplex,
        work: *mut Rcomplex,
        lwork: *mut ::std::os::raw::c_int,
        info: *mut ::std::os::raw::c_int,
    );
    pub fn zungr2_(
        m: *mut ::std::os::raw::c_int,
        n: *mut ::std::os::raw::c_int,
        k: *mut ::std::os::raw::c_int,
        a: *mut Rcomplex,
        lda: *mut ::std::os::raw::c_int,
        tau: *mut Rcomplex,
        work: *mut Rcomplex,
        info: *mut ::std::os::raw::c_int,
    );
    pub fn zungrq_(
        m: *mut ::std::os::raw::c_int,
        n: *mut ::std::os::raw::c_int,
        k: *mut ::std::os::raw::c_int,
        a: *mut Rcomplex,
        lda: *mut ::std::os::raw::c_int,
        tau: *mut Rcomplex,
        work: *mut Rcomplex,
        lwork: *mut ::std::os::raw::c_int,
        info: *mut ::std::os::raw::c_int,
    );
    pub fn zungtr_(
        uplo: *const ::std::os::raw::c_char,
        n: *mut ::std::os::raw::c_int,
        a: *mut Rcomplex,
        lda: *mut ::std::os::raw::c_int,
        tau: *mut Rcomplex,
        work: *mut Rcomplex,
        lwork: *mut ::std::os::raw::c_int,
        info: *mut ::std::os::raw::c_int,
        arg1: usize,
    );
    pub fn zunm2r_(
        side: *const ::std::os::raw::c_char,
        trans: *const ::std::os::raw::c_char,
        m: *mut ::std::os::raw::c_int,
        n: *mut ::std::os::raw::c_int,
        k: *mut ::std::os::raw::c_int,
        a: *mut Rcomplex,
        lda: *mut ::std::os::raw::c_int,
        tau: *mut Rcomplex,
        c: *mut Rcomplex,
        ldc: *mut ::std::os::raw::c_int,
        work: *mut Rcomplex,
        info: *mut ::std::os::raw::c_int,
        arg1: usize,
        arg2: usize,
    );
    pub fn zunmbr_(
        vect: *const ::std::os::raw::c_char,
        side: *const ::std::os::raw::c_char,
        trans: *const ::std::os::raw::c_char,
        m: *mut ::std::os::raw::c_int,
        n: *mut ::std::os::raw::c_int,
        k: *mut ::std::os::raw::c_int,
        a: *mut Rcomplex,
        lda: *mut ::std::os::raw::c_int,
        tau: *mut Rcomplex,
        c: *mut Rcomplex,
        ldc: *mut ::std::os::raw::c_int,
        work: *mut Rcomplex,
        lwork: *mut ::std::os::raw::c_int,
        info: *mut ::std::os::raw::c_int,
        arg1: usize,
        arg2: usize,
        arg3: usize,
    );
    pub fn zunml2_(
        side: *const ::std::os::raw::c_char,
        trans: *const ::std::os::raw::c_char,
        m: *mut ::std::os::raw::c_int,
        n: *mut ::std::os::raw::c_int,
        k: *mut ::std::os::raw::c_int,
        a: *mut Rcomplex,
        lda: *mut ::std::os::raw::c_int,
        tau: *mut Rcomplex,
        c: *mut Rcomplex,
        ldc: *mut ::std::os::raw::c_int,
        work: *mut Rcomplex,
        info: *mut ::std::os::raw::c_int,
        arg1: usize,
        arg2: usize,
    );
    pub fn zunmlq_(
        side: *const ::std::os::raw::c_char,
        trans: *const ::std::os::raw::c_char,
        m: *mut ::std::os::raw::c_int,
        n: *mut ::std::os::raw::c_int,
        k: *mut ::std::os::raw::c_int,
        a: *mut Rcomplex,
        lda: *mut ::std::os::raw::c_int,
        tau: *mut Rcomplex,
        c: *mut Rcomplex,
        ldc: *mut ::std::os::raw::c_int,
        work: *mut Rcomplex,
        lwork: *mut ::std::os::raw::c_int,
        info: *mut ::std::os::raw::c_int,
        arg1: usize,
        arg2: usize,
    );
    pub fn zgesdd_(
        jobz: *const ::std::os::raw::c_char,
        m: *const ::std::os::raw::c_int,
        n: *const ::std::os::raw::c_int,
        a: *mut Rcomplex,
        lda: *const ::std::os::raw::c_int,
        s: *mut f64,
        u: *mut Rcomplex,
        ldu: *const ::std::os::raw::c_int,
        vt: *mut Rcomplex,
        ldvt: *const ::std::os::raw::c_int,
        work: *mut Rcomplex,
        lwork: *const ::std::os::raw::c_int,
        rwork: *mut f64,
        iwork: *mut ::std::os::raw::c_int,
        info: *mut ::std::os::raw::c_int,
        arg1: usize,
    );
    pub fn zgelsd_(
        m: *mut ::std::os::raw::c_int,
        n: *mut ::std::os::raw::c_int,
        nrhs: *mut ::std::os::raw::c_int,
        a: *mut Rcomplex,
        lda: *mut ::std::os::raw::c_int,
        b: *mut Rcomplex,
        ldb: *mut ::std::os::raw::c_int,
        s: *mut f64,
        rcond: *mut f64,
        rank: *mut ::std::os::raw::c_int,
        work: *mut Rcomplex,
        lwork: *mut ::std::os::raw::c_int,
        rwork: *mut f64,
        iwork: *mut ::std::os::raw::c_int,
        info: *mut ::std::os::raw::c_int,
    );
    pub fn zlanhp_(
        norm: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        AP: *const Rcomplex,
        work: *mut f64,
        arg1: usize,
        arg2: usize,
    ) -> f64;
    pub fn zhpcon_(
        uplo: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        AP: *const Rcomplex,
        ipiv: *const ::std::os::raw::c_int,
        anorm: *const f64,
        rcond: *mut f64,
        work: *mut Rcomplex,
        info: *mut ::std::os::raw::c_int,
        arg1: usize,
    );
    pub fn zhptrf_(
        uplo: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        AP: *mut Rcomplex,
        ipiv: *mut ::std::os::raw::c_int,
        info: *mut ::std::os::raw::c_int,
        arg1: usize,
    );
    pub fn zhptri_(
        uplo: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        AP: *mut Rcomplex,
        ipiv: *const ::std::os::raw::c_int,
        work: *mut Rcomplex,
        info: *mut ::std::os::raw::c_int,
        arg1: usize,
    );
    pub fn zhptrs_(
        uplo: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        nrhs: *const ::std::os::raw::c_int,
        AP: *const Rcomplex,
        ipiv: *const ::std::os::raw::c_int,
        B: *mut Rcomplex,
        ldb: *const ::std::os::raw::c_int,
        info: *mut ::std::os::raw::c_int,
        arg1: usize,
    );
    pub fn zhecon_(
        uplo: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        A: *const Rcomplex,
        lda: *const ::std::os::raw::c_int,
        ipiv: *const ::std::os::raw::c_int,
        anorm: *const f64,
        rcond: *mut f64,
        work: *mut Rcomplex,
        info: *mut ::std::os::raw::c_int,
        arg1: usize,
    );
    pub fn zhetrf_(
        uplo: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        A: *mut Rcomplex,
        lda: *const ::std::os::raw::c_int,
        ipiv: *mut ::std::os::raw::c_int,
        work: *mut Rcomplex,
        lwork: *const ::std::os::raw::c_int,
        info: *mut ::std::os::raw::c_int,
        arg1: usize,
    );
    pub fn zhetri_(
        uplo: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        A: *mut Rcomplex,
        lda: *const ::std::os::raw::c_int,
        ipiv: *const ::std::os::raw::c_int,
        work: *mut Rcomplex,
        info: *mut ::std::os::raw::c_int,
        arg1: usize,
    );
    pub fn zhetrs_(
        uplo: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        nrhs: *const ::std::os::raw::c_int,
        A: *const Rcomplex,
        lda: *const ::std::os::raw::c_int,
        ipiv: *const ::std::os::raw::c_int,
        B: *mut Rcomplex,
        ldb: *const ::std::os::raw::c_int,
        info: *mut ::std::os::raw::c_int,
        arg1: usize,
    );
    pub fn zgees_(
        jobvs: *const ::std::os::raw::c_char,
        sort: *const ::std::os::raw::c_char,
        select: ::std::option::Option<
            unsafe extern "C" fn(arg1: *const Rcomplex) -> ::std::os::raw::c_int,
        >,
        n: *const ::std::os::raw::c_int,
        a: *mut Rcomplex,
        lda: *const ::std::os::raw::c_int,
        sdim: *mut ::std::os::raw::c_int,
        w: *mut Rcomplex,
        vs: *mut Rcomplex,
        ldvs: *const ::std::os::raw::c_int,
        work: *mut Rcomplex,
        lwork: *const ::std::os::raw::c_int,
        rwork: *mut f64,
        bwork: *mut ::std::os::raw::c_int,
        info: *mut ::std::os::raw::c_int,
        arg1: usize,
        arg2: usize,
    );
    pub fn zhpev_(
        jobz: *const ::std::os::raw::c_char,
        uplo: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        ap: *mut Rcomplex,
        w: *mut f64,
        z: *mut Rcomplex,
        ldz: *const ::std::os::raw::c_int,
        work: *mut Rcomplex,
        rwork: *mut f64,
        info: *mut ::std::os::raw::c_int,
        arg1: usize,
        arg2: usize,
    );
    pub fn dgegv_(
        jobvl: *const ::std::os::raw::c_char,
        jobvr: *const ::std::os::raw::c_char,
        n: *const ::std::os::raw::c_int,
        a: *mut f64,
        lda: *const ::std::os::raw::c_int,
        b: *mut f64,
        ldb: *const ::std::os::raw::c_int,
        alphar: *mut f64,
        alphai: *mut f64,
        beta: *const f64,
        vl: *mut f64,
        ldvl: *const ::std::os::raw::c_int,
        vr: *mut f64,
        ldvr: *const ::std::os::raw::c_int,
        work: *mut f64,
        lwork: *const ::std::os::raw::c_int,
        info: *mut ::std::os::raw::c_int,
        arg1: usize,
        arg2: usize,
    );
    pub fn dgeqpf_(
        m: *const ::std::os::raw::c_int,
        n: *const ::std::os::raw::c_int,
        a: *mut f64,
        lda: *const ::std::os::raw::c_int,
        jpvt: *mut ::std::os::raw::c_int,
        tau: *mut f64,
        work: *mut f64,
        info: *mut ::std::os::raw::c_int,
    );
    pub fn dggsvd_(
        jobu: *const ::std::os::raw::c_char,
        jobv: *const ::std::os::raw::c_char,
        jobq: *const ::std::os::raw::c_char,
        m: *const ::std::os::raw::c_int,
        n: *const ::std::os::raw::c_int,
        p: *const ::std::os::raw::c_int,
        k: *const ::std::os::raw::c_int,
        l: *const ::std::os::raw::c_int,
        a: *mut f64,
        lda: *const ::std::os::raw::c_int,
        b: *mut f64,
        ldb: *const ::std::os::raw::c_int,
        alpha: *const f64,
        beta: *const f64,
        u: *mut f64,
        ldu: *const ::std::os::raw::c_int,
        v: *mut f64,
        ldv: *const ::std::os::raw::c_int,
        q: *mut f64,
        ldq: *const ::std::os::raw::c_int,
        work: *mut f64,
        iwork: *mut ::std::os::raw::c_int,
        info: *mut ::std::os::raw::c_int,
        arg1: usize,
        arg2: usize,
        arg3: usize,
    );
    pub fn dtzrqf_(
        m: *const ::std::os::raw::c_int,
        n: *const ::std::os::raw::c_int,
        a: *mut f64,
        lda: *const ::std::os::raw::c_int,
        tau: *mut f64,
        info: *mut ::std::os::raw::c_int,
    );
    pub fn dlahrd_(
        n: *const ::std::os::raw::c_int,
        k: *const ::std::os::raw::c_int,
        nb: *const ::std::os::raw::c_int,
        a: *mut f64,
        lda: *const ::std::os::raw::c_int,
        tau: *mut f64,
        t: *mut f64,
        ldt: *const ::std::os::raw::c_int,
        y: *mut f64,
        ldy: *const ::std::os::raw::c_int,
    );
    pub fn dlatzm_(
        side: *const ::std::os::raw::c_char,
        m: *const ::std::os::raw::c_int,
        n: *const ::std::os::raw::c_int,
        v: *const f64,
        incv: *const ::std::os::raw::c_int,
        tau: *const f64,
        c1: *mut f64,
        c2: *mut f64,
        ldc: *const ::std::os::raw::c_int,
        work: *mut f64,
        arg1: usize,
    );
    pub fn dgegs_(
        jobvsl: *const ::std::os::raw::c_char,
        jobvsr: *const ::std::os::raw::c_char,
        n: *mut ::std::os::raw::c_int,
        a: *mut f64,
        lda: *mut ::std::os::raw::c_int,
        b: *mut f64,
        ldb: *mut ::std::os::raw::c_int,
        alphar: *mut f64,
        alphai: *mut f64,
        beta: *mut f64,
        vsl: *mut f64,
        ldvsl: *mut ::std::os::raw::c_int,
        vsr: *mut f64,
        ldvsr: *mut ::std::os::raw::c_int,
        work: *mut f64,
        lwork: *mut ::std::os::raw::c_int,
        info: *mut ::std::os::raw::c_int,
        arg1: usize,
        arg2: usize,
    );
    pub fn dgelsx_(
        m: *mut ::std::os::raw::c_int,
        n: *mut ::std::os::raw::c_int,
        nrhs: *mut ::std::os::raw::c_int,
        a: *mut f64,
        lda: *mut ::std::os::raw::c_int,
        b: *mut f64,
        ldb: *mut ::std::os::raw::c_int,
        jpvt: *mut ::std::os::raw::c_int,
        rcond: *mut f64,
        rank: *mut ::std::os::raw::c_int,
        work: *mut f64,
        info: *mut ::std::os::raw::c_int,
    );
    pub fn dggsvp_(
        jobu: *const ::std::os::raw::c_char,
        jobv: *const ::std::os::raw::c_char,
        jobq: *const ::std::os::raw::c_char,
        m: *mut ::std::os::raw::c_int,
        p: *mut ::std::os::raw::c_int,
        n: *mut ::std::os::raw::c_int,
        a: *mut f64,
        lda: *mut ::std::os::raw::c_int,
        b: *mut f64,
        ldb: *mut ::std::os::raw::c_int,
        tola: *mut f64,
        tolb: *mut f64,
        k: *mut ::std::os::raw::c_int,
        l: *mut *mut ::std::os::raw::c_int,
        u: *mut f64,
        ldu: *mut ::std::os::raw::c_int,
        v: *mut f64,
        ldv: *mut ::std::os::raw::c_int,
        q: *mut f64,
        ldq: *mut ::std::os::raw::c_int,
        iwork: *mut ::std::os::raw::c_int,
        tau: *mut f64,
        work: *mut f64,
        info: *mut ::std::os::raw::c_int,
        arg1: usize,
        arg2: usize,
        arg3: usize,
    );
    pub fn zlahrd_(
        n: *mut ::std::os::raw::c_int,
        k: *mut ::std::os::raw::c_int,
        nb: *mut ::std::os::raw::c_int,
        a: *mut Rcomplex,
        lda: *mut ::std::os::raw::c_int,
        tau: *mut Rcomplex,
        t: *mut Rcomplex,
        ldt: *mut ::std::os::raw::c_int,
        y: *mut Rcomplex,
        ldy: *mut ::std::os::raw::c_int,
    );
}
